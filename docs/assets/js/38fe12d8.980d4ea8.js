"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[4911],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),g=c(t),f=a,m=g["".concat(s,".").concat(f)]||g[f]||p[f]||o;return t?r.createElement(m,l(l({ref:n},u),{},{components:t})):r.createElement(m,l({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=f;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[g]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},62499:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={slug:"/en/sql-reference/aggregate-functions/",sidebar_label:"Aggregate Functions",sidebar_position:33},l="Aggregate Functions",i={unversionedId:"en/sql-reference/aggregate-functions/index",id:"en/sql-reference/aggregate-functions/index",title:"Aggregate Functions",description:"Aggregate functions work in the normal way as expected by database experts.",source:"@site/docs/en/sql-reference/aggregate-functions/index.md",sourceDirName:"en/sql-reference/aggregate-functions",slug:"/en/sql-reference/aggregate-functions/",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/aggregate-functions/",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/aggregate-functions/index.md",tags:[],version:"current",sidebarPosition:33,frontMatter:{slug:"/en/sql-reference/aggregate-functions/",sidebar_label:"Aggregate Functions",sidebar_position:33},sidebar:"english",previous:{title:"uniqTheta Functions",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/functions/uniqtheta-functions"},next:{title:"List of Aggregate Functions",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/aggregate-functions/reference/"}},s={},c=[{value:"NULL Processing",id:"null-processing",level:2}],u={toc:c},g="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(g,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"aggregate-functions"},"Aggregate Functions"),(0,a.kt)("p",null,"Aggregate functions work in the ",(0,a.kt)("a",{parentName:"p",href:"http://www.sql-tutorial.com/sql-aggregate-functions-sql-tutorial"},"normal")," way as expected by database experts."),(0,a.kt)("p",null,"ClickHouse also supports:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/aggregate-functions/parametric-functions#aggregate_functions_parametric"},"Parametric aggregate functions"),", which accept other parameters in addition to columns."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/aggregate-functions/combinators#aggregate_functions_combinators"},"Combinators"),", which change the behavior of aggregate functions.")),(0,a.kt)("h2",{id:"null-processing"},"NULL Processing"),(0,a.kt)("p",null,"During aggregation, all ",(0,a.kt)("inlineCode",{parentName:"p"},"NULL"),"s are skipped. If the aggregation has several parameters it will ignore any row in which one or more of the parameters are NULL."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples:")),(0,a.kt)("p",null,"Consider this table:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500x\u2500\u252c\u2500\u2500\u2500\u2500y\u2500\u2510\n\u2502 1 \u2502    2 \u2502\n\u2502 2 \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502\n\u2502 3 \u2502    2 \u2502\n\u2502 3 \u2502    3 \u2502\n\u2502 3 \u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,a.kt)("p",null,"Let\u2019s say you need to total the values in the ",(0,a.kt)("inlineCode",{parentName:"p"},"y")," column:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(y) FROM t_null_big\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500sum(y)\u2500\u2510\n\u2502      7 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,a.kt)("p",null,"Now you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"groupArray")," function to create an array from the ",(0,a.kt)("inlineCode",{parentName:"p"},"y")," column:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT groupArray(y) FROM t_null_big\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500groupArray(y)\u2500\u2510\n\u2502 [2,2,3]       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"groupArray")," does not include ",(0,a.kt)("inlineCode",{parentName:"p"},"NULL")," in the resulting array."),(0,a.kt)("p",null,"You can use ",(0,a.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/functions/functions-for-nulls#coalesce"},"COALESCE")," to change NULL into a value that makes sense in your use case. For example: ",(0,a.kt)("inlineCode",{parentName:"p"},"avg(COALESCE(column, 0))")," with use the column value in the aggregation or zero if NULL:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    avg(y),\n    avg(coalesce(y, 0))\nFROM t_null_big\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500avg(y)\u2500\u252c\u2500avg(coalesce(y, 0))\u2500\u2510\n\u2502 2.3333333333333335 \u2502                 1.4 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}p.isMDXComponent=!0}}]);