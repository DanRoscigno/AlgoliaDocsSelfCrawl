"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[353],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(f,s(s({ref:t},p),{},{components:a})):n.createElement(f,s({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},28842:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_label:"Pivot to ClickHouse",sidebar_position:4,slug:"/en/integrations/redshift/redshift-pivot-to-clickhouse",description:"Pivot using S3"},s="Pivot Data from Redshift to ClickHouse using S3",o={unversionedId:"en/integrations/migration/redshift/redshift-pivot-to-clickhouse",id:"en/integrations/migration/redshift/redshift-pivot-to-clickhouse",title:"Pivot Data from Redshift to ClickHouse using S3",description:"Pivot using S3",source:"@site/docs/en/integrations/migration/redshift/redshift-pivot-to-clickhouse.md",sourceDirName:"en/integrations/migration/redshift",slug:"/en/integrations/redshift/redshift-pivot-to-clickhouse",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/redshift/redshift-pivot-to-clickhouse",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/integrations/migration/redshift/redshift-pivot-to-clickhouse.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Pivot to ClickHouse",sidebar_position:4,slug:"/en/integrations/redshift/redshift-pivot-to-clickhouse",description:"Pivot using S3"}},l={},c=[{value:"Pros",id:"pros",level:4},{value:"Cons",id:"cons",level:4},{value:"Tutorial",id:"tutorial",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pivot-data-from-redshift-to-clickhouse-using-s3"},"Pivot Data from Redshift to ClickHouse using S3"),(0,r.kt)("p",null,"In this scenario, we export data to S3 in an intermediary pivot format and, in a second step, load the data from S3 into ClickHouse."),(0,r.kt)("img",{src:a(42557).Z,class:"image",alt:"PIVOT from Redshit using S3"}),(0,r.kt)("h4",{id:"pros"},"Pros"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Both Redshift and ClickHouse have powerful S3 integration features."),(0,r.kt)("li",{parentName:"ul"},"Leverages the existing features such as the Redshift ",(0,r.kt)("inlineCode",{parentName:"li"},"UNLOAD")," command and ClickHouse S3 table function / table engine."),(0,r.kt)("li",{parentName:"ul"},"Scales seamlessly thanks to parallel reads and high throughput capabilities from/to S3 in ClickHouse."),(0,r.kt)("li",{parentName:"ul"},"Can leverage sophisticated and compressed formats like Apache Parquet.")),(0,r.kt)("h4",{id:"cons"},"Cons"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Two steps in the process (unload from Redshift then load into ClickHouse).")),(0,r.kt)("h3",{id:"tutorial"},"Tutorial"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Using Redshift's ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/redshift/latest/dg/r_UNLOAD.html"},"UNLOAD")," feature, export the data into a an existing private S3 bucket:"),(0,r.kt)("img",{src:a(87836).Z,class:"image",alt:"UNLOAD from Redshit to S3"}),(0,r.kt)("p",{parentName:"li"},"It will generate part files containing the raw data in S3"),(0,r.kt)("img",{src:a(53021).Z,class:"image",alt:"Data in S3"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the table in ClickHouse:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE users\n(\n    username String,\n    firstname String,\n    lastname String\n)\nENGINE = MergeTree\nORDER BY username\n")),(0,r.kt)("p",{parentName:"li"},"Alternatively, ClickHouse can try to infer the table structure using ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE TABLE ... EMPTY AS SELECT"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE users\nENGINE = MergeTree ORDER BY username\nEMPTY AS\nSELECT * FROM s3('https://your-bucket.s3.amazonaws.com/unload/users/*', '<aws_access_key>', '<aws_secret_access_key>', 'CSV')\n")),(0,r.kt)("p",{parentName:"li"},"This works especially well when the data is in a format that contains information about data types, like Parquet.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Load the S3 files into ClickHouse using an ",(0,r.kt)("inlineCode",{parentName:"p"},"INSERT INTO ... SELECT")," statement:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO users SELECT *\nFROM s3('https://your-bucket.s3.amazonaws.com/unload/users/*', '<aws_access_key>', '<aws_secret_access_key>', 'CSV')\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-response"},"Query id: 2e7e219a-6124-461c-8d75-e4f5002c8557\n\nOk.\n\n0 rows in set. Elapsed: 0.545 sec. Processed 49.99 thousand rows, 2.34 MB (91.72 thousand rows/s., 4.30 MB/s.)\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This example used CSV as the pivot format. However, for production workloads we recommend Apache Parquet as the best option for large migrations since it comes with compression and can save some storage costs while reducing transfer times. (By default, each row group is compressed using SNAPPY). ClickHouse also leverages Parquet's column orientation to speed up data ingestion.")))}d.isMDXComponent=!0},42557:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pivot-3fe3713d3a34ba2c8740019113d000dc.png"},87836:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/s3-1-be9a86f6c8ae20e367d00b100700d396.png"},53021:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/s3-2-dbabae19318318b3d931ff907823cf7a.png"}}]);