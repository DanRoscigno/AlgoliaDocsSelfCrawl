"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[9890,9837],{3905:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>b});var r=i(67294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,r)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function a(e,t){if(null==e)return{};var i,r,n=function(e,t){if(null==e)return{};var i,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)i=o[r],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)i=o[r],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(i),m=n,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return i?r.createElement(b,s(s({ref:t},u),{},{components:i})):r.createElement(b,s({ref:t},u))}));function b(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,s=new Array(o);s[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:n,s[1]=a;for(var c=2;c<o;c++)s[c]=i[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,i)}m.displayName="MDXCreateElement"},69930:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=i(87462),n=(i(67294),i(3905));const o={slug:"/en/operations/utilities/odbc-bridge",title:"clickhouse-odbc-bridge"},s=void 0,a={unversionedId:"en/operations/utilities/odbc-bridge",id:"en/operations/utilities/odbc-bridge",title:"clickhouse-odbc-bridge",description:"Simple HTTP-server which works like a proxy for ODBC driver. The main motivation",source:"@site/docs/en/operations/utilities/odbc-bridge.md",sourceDirName:"en/operations/utilities",slug:"/en/operations/utilities/odbc-bridge",permalink:"/docs/en/operations/utilities/odbc-bridge",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/operations/utilities/odbc-bridge.md",tags:[],version:"current",frontMatter:{slug:"/en/operations/utilities/odbc-bridge",title:"clickhouse-odbc-bridge"},sidebar:"english",previous:{title:"clickhouse-obfuscator",permalink:"/docs/en/operations/utilities/clickhouse-obfuscator"},next:{title:"SQL",permalink:"/docs/en/analyze"}},l={},c=[{value:"Usage",id:"usage",level:2},{value:"Example:",id:"example",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...i}=e;return(0,n.kt)(p,(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Simple HTTP-server which works like a proxy for ODBC driver. The main motivation\nwas possible segfaults or another faults in ODBC implementations, which can\ncrash whole clickhouse-server process."),(0,n.kt)("p",null,"This tool works via HTTP, not via pipes, shared memory, or TCP because:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"It's simpler to implement"),(0,n.kt)("li",{parentName:"ul"},"It's simpler to debug"),(0,n.kt)("li",{parentName:"ul"},"jdbc-bridge can be implemented in the same way")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"clickhouse-server")," use this tool inside odbc table function and StorageODBC.\nHowever it can be used as standalone tool from command line with the following\nparameters in POST-request URL:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"connection_string")," -- ODBC connection string."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"columns")," -- columns in ClickHouse NamesAndTypesList format, name in backticks,\ntype as string. Name and type are space separated, rows separated with\nnewline."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"max_block_size")," -- optional parameter, sets maximum size of single block.\nQuery is send in post body. Response is returned in RowBinary format.")),(0,n.kt)("h2",{id:"example"},"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'$ clickhouse-odbc-bridge --http-port 9018 --daemon\n\n$ curl -d "query=SELECT PageID, ImpID, AdType FROM Keys ORDER BY PageID, ImpID" --data-urlencode "connection_string=DSN=ClickHouse;DATABASE=stat" --data-urlencode "sample_block=columns format version: 1\n3 columns:\n\\`PageID\\` String\n\\`ImpID\\` String\n\\`AdType\\` String\n"  "http://localhost:9018/" > result.txt\n\n$ cat result.txt\n12246623837185725195925621517\n')))}d.isMDXComponent=!0},65010:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var r=i(87462),n=(i(67294),i(3905)),o=i(69930);const s={slug:"/zh/operations/utilities/odbc-bridge",title:"clickhouse-odbc-bridge"},a=void 0,l={unversionedId:"zh/operations/utilities/odbc-bridge",id:"zh/operations/utilities/odbc-bridge",title:"clickhouse-odbc-bridge",description:"",source:"@site/docs/zh/operations/utilities/odbc-bridge.mdx",sourceDirName:"zh/operations/utilities",slug:"/zh/operations/utilities/odbc-bridge",permalink:"/docs/zh/operations/utilities/odbc-bridge",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/zh/operations/utilities/odbc-bridge.mdx",tags:[],version:"current",frontMatter:{slug:"/zh/operations/utilities/odbc-bridge",title:"clickhouse-odbc-bridge"},sidebar:"chinese",previous:{title:"clickhouse-obfuscator",permalink:"/docs/zh/operations/utilities/clickhouse-obfuscator"},next:{title:"\u5546\u4e1a\u652f\u6301",permalink:"/docs/zh/commercial/"}},c={},u=[],p={toc:u},d="wrapper";function m(e){let{components:t,...i}=e;return(0,n.kt)(d,(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(o.default,{mdxType:"Content"}))}m.isMDXComponent=!0}}]);