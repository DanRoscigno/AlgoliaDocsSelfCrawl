"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[81355],{3905:(e,a,r)=>{r.d(a,{Zo:()=>c,kt:()=>m});var t=r(67294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function l(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?l(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=t.createContext({}),p=function(e){var a=t.useContext(i),r=a;return e&&(r="function"==typeof e?e(a):o(o({},a),e)),r},c=function(e){var a=p(e.components);return t.createElement(i.Provider,{value:a},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,m=u["".concat(i,".").concat(d)]||u[d]||y[d]||l;return r?t.createElement(m,o(o({ref:a},c),{},{components:r})):t.createElement(m,o({ref:a},c))}));function m(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var p=2;p<l;p++)o[p]=r[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},16303:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var t=r(87462),n=(r(67294),r(3905));const l={slug:"/en/sql-reference/data-types/array",sidebar_position:52,sidebar_label:"Array(T)"},o="Array(t)",s={unversionedId:"en/sql-reference/data-types/array",id:"en/sql-reference/data-types/array",title:"Array(t)",description:"An array of T-type items, with the starting array index as 1. T can be any data type, including an array.",source:"@site/docs/en/sql-reference/data-types/array.md",sourceDirName:"en/sql-reference/data-types",slug:"/en/sql-reference/data-types/array",permalink:"/docs/en/sql-reference/data-types/array",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/data-types/array.md",tags:[],version:"current",sidebarPosition:52,frontMatter:{slug:"/en/sql-reference/data-types/array",sidebar_position:52,sidebar_label:"Array(T)"},sidebar:"english",previous:{title:"LowCardinality",permalink:"/docs/en/sql-reference/data-types/lowcardinality"},next:{title:"AggregateFunction",permalink:"/docs/en/sql-reference/data-types/aggregatefunction"}},i={},p=[{value:"Creating an Array",id:"creating-an-array",level:2},{value:"Working with Data Types",id:"working-with-data-types",level:2},{value:"Array Size",id:"array-size",level:2}],c={toc:p},u="wrapper";function y(e){let{components:a,...r}=e;return(0,n.kt)(u,(0,t.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"arrayt"},"Array(t)"),(0,n.kt)("p",null,"An array of ",(0,n.kt)("inlineCode",{parentName:"p"},"T"),"-type items, with the starting array index as 1. ",(0,n.kt)("inlineCode",{parentName:"p"},"T")," can be any data type, including an array."),(0,n.kt)("h2",{id:"creating-an-array"},"Creating an Array"),(0,n.kt)("p",null,"You can use a function to create an array:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"array(T)\n")),(0,n.kt)("p",null,"You can also use square brackets."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"[]\n")),(0,n.kt)("p",null,"Example of creating an array:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT array(1, 2) AS x, toTypeName(x)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500x\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(array(1, 2))\u2500\u2510\n\u2502 [1,2] \u2502 Array(UInt8)            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT [1, 2] AS x, toTypeName(x)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500x\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName([1, 2])\u2500\u2510\n\u2502 [1,2] \u2502 Array(UInt8)       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,n.kt)("h2",{id:"working-with-data-types"},"Working with Data Types"),(0,n.kt)("p",null,"The maximum size of an array is limited to one million elements."),(0,n.kt)("p",null,"When creating an array on the fly, ClickHouse automatically defines the argument type as the narrowest data type that can store all the listed arguments. If there are any ",(0,n.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/data-types/nullable#data_type-nullable"},"Nullable")," or literal ",(0,n.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/syntax#null-literal"},"NULL")," values, the type of an array element also becomes ",(0,n.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/data-types/nullable"},"Nullable"),"."),(0,n.kt)("p",null,"If ClickHouse couldn\u2019t determine the data type, it generates an exception. For instance, this happens when trying to create an array with strings and numbers simultaneously (",(0,n.kt)("inlineCode",{parentName:"p"},"SELECT array(1, 'a')"),")."),(0,n.kt)("p",null,"Examples of automatic data type detection:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT array(1, 2, NULL) AS x, toTypeName(x)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500x\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500toTypeName(array(1, 2, NULL))\u2500\u2510\n\u2502 [1,2,NULL] \u2502 Array(Nullable(UInt8))        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,n.kt)("p",null,"If you try to create an array of incompatible data types, ClickHouse throws an exception:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT array(1, 'a')\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"Received exception from server (version 1.1.54388):\nCode: 386. DB::Exception: Received from localhost:9000, 127.0.0.1. DB::Exception: There is no supertype for types UInt8, String because some of them are String/FixedString and some of them are not.\n")),(0,n.kt)("h2",{id:"array-size"},"Array Size"),(0,n.kt)("p",null,"It is possible to find the size of an array by using the ",(0,n.kt)("inlineCode",{parentName:"p"},"size0")," subcolumn without reading the whole column. For multi-dimensional arrays you can use ",(0,n.kt)("inlineCode",{parentName:"p"},"sizeN-1"),", where ",(0,n.kt)("inlineCode",{parentName:"p"},"N")," is the wanted dimension."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("p",null,"Query:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE t_arr (`arr` Array(Array(Array(UInt32)))) ENGINE = MergeTree ORDER BY tuple();\n\nINSERT INTO t_arr VALUES ([[[12, 13, 0, 1],[12]]]);\n\nSELECT arr.size0, arr.size1, arr.size2 FROM t_arr;\n")),(0,n.kt)("p",null,"Result:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500arr.size0\u2500\u252c\u2500arr.size1\u2500\u252c\u2500arr.size2\u2500\u2510\n\u2502         1 \u2502 [2]       \u2502 [[4,1]]   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}y.isMDXComponent=!0}}]);