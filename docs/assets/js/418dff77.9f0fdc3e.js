"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[17646],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),g=s,d=m["".concat(l,".").concat(g)]||m[g]||u[g]||a;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:s,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},89749:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(87462),s=(n(67294),n(3905));const a={slug:"/zh/operations/system-tables/merge_tree_settings"},o="system.merge_tree_settings",i={unversionedId:"zh/operations/system-tables/merge_tree_settings",id:"zh/operations/system-tables/merge_tree_settings",title:"system.merge_tree_settings",description:"system-mergetreesettings}",source:"@site/docs/zh/operations/system-tables/merge_tree_settings.md",sourceDirName:"zh/operations/system-tables",slug:"/zh/operations/system-tables/merge_tree_settings",permalink:"/docs/zh/operations/system-tables/merge_tree_settings",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/zh/operations/system-tables/merge_tree_settings.md",tags:[],version:"current",frontMatter:{slug:"/zh/operations/system-tables/merge_tree_settings"},sidebar:"chinese",previous:{title:"system.licenses {#system-tables_system.licenses}",permalink:"/docs/zh/operations/system-tables/licenses"},next:{title:"\u7cfb\u7edf\u3002\u5408\u5e76",permalink:"/docs/zh/operations/system-tables/merges"}},l={},p=[],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,s.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"system-merge_tree_settings"},"system.merge_tree_settings"),(0,s.kt)("p",null,"\u5305\u542b ",(0,s.kt)("inlineCode",{parentName:"p"},"MergeTree")," \u8868\u7684\u8bbe\u7f6e (Setting) \u4fe1\u606f\u3002"),(0,s.kt)("p",null,"\u5217:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"name")," (String) \u2014 \u8bbe\u7f6e\u540d\u79f0\u3002"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"value")," (String) \u2014 \u8bbe\u7f6e\u7684\u503c\u3002"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"description")," (String) \u2014 \u8bbe\u7f6e\u63cf\u8ff0\u3002"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"type")," (String) \u2014 \u8bbe\u7f6e\u7c7b\u578b (\u6267\u884c\u7279\u5b9a\u7684\u5b57\u7b26\u4e32\u503c)\u3002"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"changed")," (UInt8) \u2014 \u8be5\u8bbe\u7f6e\u662f\u5426\u5728\u914d\u7f6e\u4e2d\u660e\u786e\u5b9a\u4e49\u6216\u662f\u660e\u786e\u6539\u53d8\u3002")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"\u793a\u4f8b")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.merge_tree_settings LIMIT 4 FORMAT Vertical;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nname:        index_granularity\nvalue:       8192\nchanged:     0\ndescription: How many rows correspond to one primary key value.\ntype:        SettingUInt64\n\nRow 2:\n\u2500\u2500\u2500\u2500\u2500\u2500\nname:        min_bytes_for_wide_part\nvalue:       0\nchanged:     0\ndescription: Minimal uncompressed size in bytes to create part in wide format instead of compact\ntype:        SettingUInt64\n\nRow 3:\n\u2500\u2500\u2500\u2500\u2500\u2500\nname:        min_rows_for_wide_part\nvalue:       0\nchanged:     0\ndescription: Minimal number of rows to create part in wide format instead of compact\ntype:        SettingUInt64\n\nRow 4:\n\u2500\u2500\u2500\u2500\u2500\u2500\nname:        merge_max_block_size\nvalue:       8192\nchanged:     0\ndescription: How many rows in blocks should be formed for merge operations.\ntype:        SettingUInt64\n\n4 rows in set. Elapsed: 0.001 sec.\n")))}u.isMDXComponent=!0}}]);