"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[86634],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},o=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,k=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(k,l(l({ref:t},o),{},{components:n})):a.createElement(k,l({ref:t},o))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64167:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={toc:[]},l="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you are using a dictionary with ClickHouse Cloud please use the DDL query option to create your dictionaries, and create your dictionary as user ",(0,r.kt)("inlineCode",{parentName:"p"},"default"),".\nAlso, verify the list of supported dictionary sources in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/whats-new/cloud-compatibility"},"Cloud Compatibility guide"),".")))}s.isMDXComponent=!0},24392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var a=n(87462),r=(n(67294),n(3905)),i=n(64167);const l={slug:"/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure",sidebar_position:44,sidebar_label:"Dictionary Key and Fields"},s="Dictionary Key and Fields",c={unversionedId:"en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure",id:"en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure",title:"Dictionary Key and Fields",description:"The structure clause describes the dictionary key and fields available for queries.",source:"@site/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md",sourceDirName:"en/sql-reference/dictionaries/external-dictionaries",slug:"/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure",permalink:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure.md",tags:[],version:"current",sidebarPosition:44,frontMatter:{slug:"/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure",sidebar_position:44,sidebar_label:"Dictionary Key and Fields"},sidebar:"english",previous:{title:"Dictionary Sources",permalink:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-sources"},next:{title:"Hierarchical dictionaries",permalink:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-hierarchical"}},d={},o=[{value:"Key",id:"key",level:2},{value:"Numeric Key",id:"numeric-key",level:3},{value:"Composite Key",id:"composite-key",level:3},{value:"Attributes",id:"attributes",level:2},{value:"Related Content",id:"related-content",level:2}],u={toc:o},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dictionary-key-and-fields"},"Dictionary Key and Fields"),(0,r.kt)(i.ZP,{mdxType:"CloudDetails"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"structure")," clause describes the dictionary key and fields available for queries."),(0,r.kt)("p",null,"XML description:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dictionary>\n    <structure>\n        <id>\n            <name>Id</name>\n        </id>\n\n        <attribute>\n            \x3c!-- Attribute parameters --\x3e\n        </attribute>\n\n        ...\n\n    </structure>\n</dictionary>\n")),(0,r.kt)("p",null,"Attributes are described in the elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<id>")," \u2014 ",(0,r.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure#ext_dict_structure-key"},"Key column"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"<attribute>")," \u2014 ",(0,r.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure#ext_dict_structure-attributes"},"Data column"),". There can be a multiple number of attributes.")),(0,r.kt)("p",null,"DDL query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DICTIONARY dict_name (\n    Id UInt64,\n    -- attributes\n)\nPRIMARY KEY Id\n...\n")),(0,r.kt)("p",null,"Attributes are described in the query body:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PRIMARY KEY")," \u2014 ",(0,r.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure#ext_dict_structure-key"},"Key column")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AttrName AttrType")," \u2014 ",(0,r.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure#ext_dict_structure-attributes"},"Data column"),". There can be a multiple number of attributes.")),(0,r.kt)("h2",{id:"key"},"Key"),(0,r.kt)("p",null,"ClickHouse supports the following types of keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Numeric key. ",(0,r.kt)("inlineCode",{parentName:"li"},"UInt64"),". Defined in the ",(0,r.kt)("inlineCode",{parentName:"li"},"<id>")," tag or using ",(0,r.kt)("inlineCode",{parentName:"li"},"PRIMARY KEY")," keyword."),(0,r.kt)("li",{parentName:"ul"},"Composite key. Set of values of different types. Defined in the tag ",(0,r.kt)("inlineCode",{parentName:"li"},"<key>")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"PRIMARY KEY")," keyword.")),(0,r.kt)("p",null,"An xml structure can contain either ",(0,r.kt)("inlineCode",{parentName:"p"},"<id>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"<key>"),". DDL-query must contain single ",(0,r.kt)("inlineCode",{parentName:"p"},"PRIMARY KEY"),"."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"You must not describe key as an attribute.")),(0,r.kt)("h3",{id:"numeric-key"},"Numeric Key"),(0,r.kt)("p",null,"Type: ",(0,r.kt)("inlineCode",{parentName:"p"},"UInt64"),"."),(0,r.kt)("p",null,"Configuration example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<id>\n    <name>Id</name>\n</id>\n")),(0,r.kt)("p",null,"Configuration fields:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," \u2013 The name of the column with keys.")),(0,r.kt)("p",null,"For DDL-query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DICTIONARY (\n    Id UInt64,\n    ...\n)\nPRIMARY KEY Id\n...\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PRIMARY KEY")," \u2013 The name of the column with keys.")),(0,r.kt)("h3",{id:"composite-key"},"Composite Key"),(0,r.kt)("p",null,"The key can be a ",(0,r.kt)("inlineCode",{parentName:"p"},"tuple")," from any types of fields. The ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout"},"layout")," in this case must be ",(0,r.kt)("inlineCode",{parentName:"p"},"complex_key_hashed")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"complex_key_cache"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"A composite key can consist of a single element. This makes it possible to use a string as the key, for instance.")),(0,r.kt)("p",null,"The key structure is set in the element ",(0,r.kt)("inlineCode",{parentName:"p"},"<key>"),". Key fields are specified in the same format as the dictionary ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-structure"},"attributes"),". Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<structure>\n    <key>\n        <attribute>\n            <name>field1</name>\n            <type>String</type>\n        </attribute>\n        <attribute>\n            <name>field2</name>\n            <type>UInt32</type>\n        </attribute>\n        ...\n    </key>\n...\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DICTIONARY (\n    field1 String,\n    field2 String\n    ...\n)\nPRIMARY KEY field1, field2\n...\n")),(0,r.kt)("p",null,"For a query to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dictGet*")," function, a tuple is passed as the key. Example: ",(0,r.kt)("inlineCode",{parentName:"p"},"dictGetString('dict_name', 'attr_name', tuple('string for field1', num_for_field2))"),"."),(0,r.kt)("h2",{id:"attributes"},"Attributes"),(0,r.kt)("p",null,"Configuration example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<structure>\n    ...\n    <attribute>\n        <name>Name</name>\n        <type>ClickHouseDataType</type>\n        <null_value></null_value>\n        <expression>rand64()</expression>\n        <hierarchical>true</hierarchical>\n        <injective>true</injective>\n        <is_object_id>true</is_object_id>\n    </attribute>\n</structure>\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DICTIONARY somename (\n    Name ClickHouseDataType DEFAULT '' EXPRESSION rand64() HIERARCHICAL INJECTIVE IS_OBJECT_ID\n)\n")),(0,r.kt)("p",null,"Configuration fields:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Tag"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Column name."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},"ClickHouse data type: ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt8"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt16"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt32"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt64"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"Int8"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"Int16"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"Int32"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/int-uint"},"Int64"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/float"},"Float32"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/float"},"Float64"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/uuid"},"UUID"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/decimal"},"Decimal32"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/decimal"},"Decimal64"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/decimal"},"Decimal128"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/decimal"},"Decimal256"),",",(0,r.kt)("a",{parentName:"td",href:"../../../sql-reference/data-types/date"},"Date"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/date32"},"Date32"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/datetime"},"DateTime"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/datetime64"},"DateTime64"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/string"},"String"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/array"},"Array"),".",(0,r.kt)("br",null),"ClickHouse tries to cast value from dictionary to the specified data type. For example, for MySQL, the field might be ",(0,r.kt)("inlineCode",{parentName:"td"},"TEXT"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"VARCHAR"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"BLOB")," in the MySQL source table, but it can be uploaded as ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," in ClickHouse.",(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/data-types/nullable"},"Nullable")," is currently supported for ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#flat"},"Flat"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#dicts-external_dicts_dict_layout-hashed"},"Hashed"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#complex-key-hashed"},"ComplexKeyHashed"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#direct"},"Direct"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#complex-key-direct"},"ComplexKeyDirect"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#range-hashed"},"RangeHashed"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-polygon"},"Polygon"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#cache"},"Cache"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#complex-key-cache"},"ComplexKeyCache"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#ssd-cache"},"SSDCache"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#complex-key-ssd-cache"},"SSDComplexKeyCache")," dictionaries. In ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-layout#ip-trie"},"IPTrie")," dictionaries ",(0,r.kt)("inlineCode",{parentName:"td"},"Nullable")," types are not supported."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null_value")),(0,r.kt)("td",{parentName:"tr",align:null},"Default value for a non-existing element.",(0,r.kt)("br",null),"In the example, it is an empty string. ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/syntax#null-literal"},"NULL")," value can be used only for the ",(0,r.kt)("inlineCode",{parentName:"td"},"Nullable")," types (see the previous line with types description)."),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"expression")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/syntax#syntax-expressions"},"Expression")," that ClickHouse executes on the value.",(0,r.kt)("br",null),"The expression can be a column name in the remote SQL database. Thus, you can use it to create an alias for the remote column.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: no expression."),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{name:"hierarchical-dict-attr"})," ",(0,r.kt)("inlineCode",{parentName:"td"},"hierarchical")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the attribute contains the value of a parent key for the current key. See ",(0,r.kt)("a",{parentName:"td",href:"/docs/en/sql-reference/dictionaries/external-dictionaries/external-dicts-dict-hierarchical"},"Hierarchical Dictionaries"),".",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"injective")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag that shows whether the ",(0,r.kt)("inlineCode",{parentName:"td"},"id -> attribute")," image is ",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Injective_function"},"injective"),".",(0,r.kt)("br",null),"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", ClickHouse can automatically place after the ",(0,r.kt)("inlineCode",{parentName:"td"},"GROUP BY")," clause the requests to dictionaries with injection. Usually it significantly reduces the amount of such requests.",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"is_object_id")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag that shows whether the query is executed for a MongoDB document by ",(0,r.kt)("inlineCode",{parentName:"td"},"ObjectID"),".",(0,r.kt)("br",null),(0,r.kt)("br",null),"Default value: ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"No")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See Also")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/functions/ext-dict-functions"},"Functions for working with dictionaries"),".")),(0,r.kt)("h2",{id:"related-content"},"Related Content"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://clickhouse.com/blog/faster-queries-dictionaries-clickhouse"},"Using dictionaries to accelerate queries"))))}m.isMDXComponent=!0}}]);