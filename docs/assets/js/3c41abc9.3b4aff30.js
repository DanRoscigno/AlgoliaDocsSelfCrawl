"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[48766],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,g=p["".concat(c,".").concat(m)]||p[m]||f[m]||i;return t?r.createElement(g,o(o({ref:n},s),{},{components:t})):r.createElement(g,o({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},56513:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(87462),a=(t(67294),t(3905));const i={slug:"/en/sql-reference/aggregate-functions/reference/uniqcombined",sidebar_position:192},o="uniqCombined",l={unversionedId:"en/sql-reference/aggregate-functions/reference/uniqcombined",id:"en/sql-reference/aggregate-functions/reference/uniqcombined",title:"uniqCombined",description:"Calculates the approximate number of different argument values.",source:"@site/docs/en/sql-reference/aggregate-functions/reference/uniqcombined.md",sourceDirName:"en/sql-reference/aggregate-functions/reference",slug:"/en/sql-reference/aggregate-functions/reference/uniqcombined",permalink:"/docs/en/sql-reference/aggregate-functions/reference/uniqcombined",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/aggregate-functions/reference/uniqcombined.md",tags:[],version:"current",sidebarPosition:192,frontMatter:{slug:"/en/sql-reference/aggregate-functions/reference/uniqcombined",sidebar_position:192},sidebar:"english",previous:{title:"uniqExact",permalink:"/docs/en/sql-reference/aggregate-functions/reference/uniqexact"},next:{title:"uniqCombined64",permalink:"/docs/en/sql-reference/aggregate-functions/reference/uniqcombined64"}},c={},u=[],s={toc:u},p="wrapper";function f(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"uniqcombined"},"uniqCombined"),(0,a.kt)("p",null,"Calculates the approximate number of different argument values."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"uniqCombined(HLL_precision)(x[, ...])\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"uniqCombined")," function is a good choice for calculating the number of different values."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments")),(0,a.kt)("p",null,"The function takes a variable number of parameters. Parameters can be ",(0,a.kt)("inlineCode",{parentName:"p"},"Tuple"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Array"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Date"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"DateTime"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"String"),", or numeric types."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"HLL_precision")," is the base-2 logarithm of the number of cells in ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/HyperLogLog"},"HyperLogLog"),". Optional, you can use the function as ",(0,a.kt)("inlineCode",{parentName:"p"},"uniqCombined(x[, ...])"),". The default value for ",(0,a.kt)("inlineCode",{parentName:"p"},"HLL_precision")," is 17, which is effectively 96 KiB of space (2^17 cells, 6 bits each)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returned value")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A number ",(0,a.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/int-uint"},"UInt64"),"-type number.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Implementation details")),(0,a.kt)("p",null,"Function:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Calculates a hash (64-bit hash for ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," and 32-bit otherwise) for all parameters in the aggregate, then uses it in calculations.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Uses a combination of three algorithms: array, hash table, and HyperLogLog with an error correction table."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"For a small number of distinct elements, an array is used. When the set size is larger, a hash table is used. For a larger number of elements, HyperLogLog is used, which will occupy a fixed amount of memory.\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Provides the result deterministically (it does not depend on the query processing order)."))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Since it uses 32-bit hash for non-",(0,a.kt)("inlineCode",{parentName:"p"},"String")," type, the result will have very high error for cardinalities significantly larger than ",(0,a.kt)("inlineCode",{parentName:"p"},"UINT_MAX")," (error will raise quickly after a few tens of billions of distinct values), hence in this case you should use ",(0,a.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/aggregate-functions/reference/uniqcombined64#agg_function-uniqcombined64"},"uniqCombined64"))),(0,a.kt)("p",null,"Compared to the ",(0,a.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/aggregate-functions/reference/uniq#agg_function-uniq"},"uniq")," function, the ",(0,a.kt)("inlineCode",{parentName:"p"},"uniqCombined"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Consumes several times less memory."),(0,a.kt)("li",{parentName:"ul"},"Calculates with several times higher accuracy."),(0,a.kt)("li",{parentName:"ul"},"Usually has slightly lower performance. In some scenarios, ",(0,a.kt)("inlineCode",{parentName:"li"},"uniqCombined")," can perform better than ",(0,a.kt)("inlineCode",{parentName:"li"},"uniq"),", for example, with distributed queries that transmit a large number of aggregation states over the network.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"See Also")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/aggregate-functions/reference/uniq#agg_function-uniq"},"uniq")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/aggregate-functions/reference/uniqcombined64#agg_function-uniqcombined64"},"uniqCombined64")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/aggregate-functions/reference/uniqhll12#agg_function-uniqhll12"},"uniqHLL12")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/aggregate-functions/reference/uniqexact#agg_function-uniqexact"},"uniqExact")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/aggregate-functions/reference/uniqthetasketch#agg_function-uniqthetasketch"},"uniqTheta"))))}f.isMDXComponent=!0}}]);