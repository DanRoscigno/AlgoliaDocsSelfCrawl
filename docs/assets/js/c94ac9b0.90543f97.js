"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[9672],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=a.createContext({}),d=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=d(t.components);return a.createElement(c.Provider,{value:e},t.children)},u="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,c=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),u=d(n),m=r,g=u["".concat(c,".").concat(m)]||u[m]||s[m]||l;return n?a.createElement(g,i(i({ref:e},p),{},{components:n})):a.createElement(g,i({ref:e},p))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o[u]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75445:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const l={sidebar_label:"R2DBC driver",sidebar_position:3,keywords:["clickhouse","r2dbc","integrate"],description:"The ClickHouse R2DBC Driver",slug:"/en/integrations/language-clients/java/r2dbc"},i="R2DBC driver",o={unversionedId:"en/integrations/language-clients/java/r2dbc",id:"en/integrations/language-clients/java/r2dbc",title:"R2DBC driver",description:"The ClickHouse R2DBC Driver",source:"@site/docs/en/integrations/language-clients/java/r2dbc.md",sourceDirName:"en/integrations/language-clients/java",slug:"/en/integrations/language-clients/java/r2dbc",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/language-clients/java/r2dbc",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/integrations/language-clients/java/r2dbc.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"R2DBC driver",sidebar_position:3,keywords:["clickhouse","r2dbc","integrate"],description:"The ClickHouse R2DBC Driver",slug:"/en/integrations/language-clients/java/r2dbc"},sidebar:"english",previous:{title:"Java client",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/language-clients/java/client"},next:{title:"Nodejs",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/language-clients/nodejs"}},c={},d=[{value:"Environment requirements",id:"environment-requirements",level:2},{value:"Compatibility with ClickHouse",id:"compatibility-with-clickhouse",level:2},{value:"Installation",id:"installation",level:2},{value:"Supported data types",id:"supported-data-types",level:2},{value:"Driver API",id:"driver-api",level:2},{value:"Connect to ClickHouse",id:"connect-to-clickhouse",level:3},{value:"Query",id:"query",level:3},{value:"Insert",id:"insert",level:3}],p={toc:d},u="wrapper";function s(t){let{components:e,...n}=t;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"r2dbc-driver"},"R2DBC driver"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://r2dbc.io/"},"R2DBC")," wrapper of async ",(0,r.kt)("a",{parentName:"p",href:"./client"},"Java client")," for ClickHouse."),(0,r.kt)("h2",{id:"environment-requirements"},"Environment requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://openjdk.java.net"},"OpenJDK")," version >= 17")),(0,r.kt)("h2",{id:"compatibility-with-clickhouse"},"Compatibility with ClickHouse"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Client version"),(0,r.kt)("th",{parentName:"tr",align:null},"ClickHouse"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0.4.0"),(0,r.kt)("td",{parentName:"tr",align:null},"20.7+")))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.clickhouse</groupId>\n    \x3c!-- change to clickhouse-r2dbc_0.9.1 for SPI 0.9.1.RELEASE --\x3e\n    <artifactId>clickhouse-r2dbc</artifactId>\n    <version>0.4.0</version>\n    \x3c!-- use uber jar with all dependencies included, change classifier to http or grpc for smaller jar --\x3e\n    <classifier>all</classifier>\n    <exclusions>\n        <exclusion>\n            <groupId>*</groupId>\n            <artifactId>*</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n")),(0,r.kt)("h2",{id:"supported-data-types"},"Supported data types"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Format"),(0,r.kt)("th",{parentName:"tr",align:null},"Support"),(0,r.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"AggregatedFunction"),(0,r.kt)("td",{parentName:"tr",align:null},"\u274c"),(0,r.kt)("td",{parentName:"tr",align:null},"limited to ",(0,r.kt)("inlineCode",{parentName:"td"},"groupBitmap"),", and known to have issue with 64bit bitmap")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Array(","*",")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Bool"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Date","*"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DateTime","*"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Decimal","*"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"SET output_format_decimal_trailing_zeros=1")," in 21.9+ for consistency")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Enum","*"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"can be treated as both string and integer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Geo Types"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"Point, Ring, Polygon, and MultiPolygon")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Int","*",", UInt","*"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},"UInt64 is mapped to ",(0,r.kt)("inlineCode",{parentName:"td"},"long"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"IPv","*"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Map(","*",")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Nested(","*",")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Object('JSON')"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SimpleAggregateFunction"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"*","String"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Tuple(","*",")"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"driver-api"},"Driver API"),(0,r.kt)("h3",{id:"connect-to-clickhouse"},"Connect to ClickHouse"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'ConnectionFactory connectionFactory = ConnectionFactories\n    .get("r2dbc:clickhouse:http://{username}:{password}@{host}:{port}/{database}");\n\n    Mono.from(connectionFactory.create())\n        .flatMapMany(connection -> connection\n')),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'connection\n    .createStatement("select domain, path,  toDate(cdate) as d, count(1) as count from clickdb.clicks where domain = :domain group by domain, path, d")\n    .bind("domain", domain)\n    .execute())\n    .flatMap(result -> result\n    .map((row, rowMetadata) -> String.format("%s%s[%s]:%d", row.get("domain", String.class),\n        row.get("path", String.class),\n        row.get("d", LocalDate.class),\n        row.get("count", Long.class)))\n    )\n    .doOnNext(System.out::println)\n    .subscribe();\n')),(0,r.kt)("h3",{id:"insert"},"Insert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'connection\n    .createStatement("insert into clickdb.clicks values (:domain, :path, :cdate, :count)")\n    .bind("domain", click.getDomain())\n    .bind("path", click.getPath())\n    .bind("cdate", LocalDateTime.now())\n    .bind("count", 1)\n    .execute();\n')))}s.isMDXComponent=!0}}]);