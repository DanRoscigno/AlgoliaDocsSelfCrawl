"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[89702],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),k=a,d=u["".concat(s,".").concat(k)]||u[k]||m[k]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},10331:(e,t,n)=>{n.d(t,{ZP:()=>l});var r=n(87462),a=(n(67294),n(3905));const i={toc:[]},o="wrapper";function l(e){let{components:t,...n}=e;return(0,a.kt)(o,(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This page is not applicable to ",(0,a.kt)("a",{parentName:"p",href:"https://clickhouse.com/cloud"},"ClickHouse Cloud"),". The feature documented here is not available in ClickHouse Cloud services.\nSee the ClickHouse ",(0,a.kt)("a",{parentName:"p",href:"/docs/en/whats-new/cloud-compatibility"},"Cloud Compatibility")," guide for more information.")))}l.isMDXComponent=!0},16062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905)),i=n(10331);const o={slug:"/en/operations/external-authenticators/kerberos"},l="Kerberos",s={unversionedId:"en/operations/external-authenticators/kerberos",id:"en/operations/external-authenticators/kerberos",title:"Kerberos",description:"Existing and properly configured ClickHouse users can be authenticated via Kerberos authentication protocol.",source:"@site/docs/en/operations/external-authenticators/kerberos.md",sourceDirName:"en/operations/external-authenticators",slug:"/en/operations/external-authenticators/kerberos",permalink:"/AlgoliaDocsSelfCrawl/en/operations/external-authenticators/kerberos",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/operations/external-authenticators/kerberos.md",tags:[],version:"current",frontMatter:{slug:"/en/operations/external-authenticators/kerberos"},sidebar:"english",previous:{title:"External User Authenticators and Directories",permalink:"/AlgoliaDocsSelfCrawl/en/operations/external-authenticators/"},next:{title:"LDAP",permalink:"/AlgoliaDocsSelfCrawl/en/operations/external-authenticators/ldap"}},p={},c=[{value:"Enabling Kerberos in ClickHouse",id:"enabling-kerberos-in-clickhouse",level:2},{value:"Parameters:",id:"parameters",level:4},{value:"Kerberos as an external authenticator for existing users",id:"kerberos-as-an-external-authenticator-for-existing-users",level:2},{value:"Enabling Kerberos in <code>users.xml</code>",id:"enabling-kerberos-in-users-xml",level:3},{value:"Enabling Kerberos using SQL",id:"enabling-kerberos-using-sql",level:3}],u={toc:c},m="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kerberos"},"Kerberos"),(0,a.kt)(i.ZP,{mdxType:"SelfManaged"}),(0,a.kt)("p",null,"Existing and properly configured ClickHouse users can be authenticated via Kerberos authentication protocol."),(0,a.kt)("p",null,"Currently, Kerberos can only be used as an external authenticator for existing users, which are defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"users.xml")," or in local access control paths. Those users may only use HTTP requests and must be able to authenticate using GSS-SPNEGO mechanism."),(0,a.kt)("p",null,"For this approach, Kerberos must be configured in the system and must be enabled in ClickHouse config."),(0,a.kt)("h2",{id:"enabling-kerberos-in-clickhouse"},"Enabling Kerberos in ClickHouse"),(0,a.kt)("p",null,"To enable Kerberos, one should include ",(0,a.kt)("inlineCode",{parentName:"p"},"kerberos")," section in ",(0,a.kt)("inlineCode",{parentName:"p"},"config.xml"),". This section may contain additional parameters."),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"principal")," - canonical service principal name that will be acquired and used when accepting security contexts."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This parameter is optional, if omitted, the default principal will be used."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"realm")," - a realm, that will be used to restrict authentication to only those requests whose initiator's realm matches it."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This parameter is optional, if omitted, no additional filtering by realm will be applied."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"keytab")," - path to service keytab file."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This parameter is optional, if omitted, path to service keytab file must be set in ",(0,a.kt)("inlineCode",{parentName:"li"},"KRB5_KTNAME")," environment variable.")))),(0,a.kt)("p",null,"Example (goes into ",(0,a.kt)("inlineCode",{parentName:"p"},"config.xml"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<clickhouse>\n    <!- ... --\x3e\n    <kerberos />\n</clickhouse>\n")),(0,a.kt)("p",null,"With principal specification:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<clickhouse>\n    <!- ... --\x3e\n    <kerberos>\n        <principal>HTTP/clickhouse.example.com@EXAMPLE.COM</principal>\n    </kerberos>\n</clickhouse>\n")),(0,a.kt)("p",null,"With filtering by realm:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<clickhouse>\n    <!- ... --\x3e\n    <kerberos>\n        <realm>EXAMPLE.COM</realm>\n    </kerberos>\n</clickhouse>\n")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"You can define only one ",(0,a.kt)("inlineCode",{parentName:"p"},"kerberos")," section. The presence of multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"kerberos")," sections will force ClickHouse to disable Kerberos authentication.")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"principal")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"realm")," sections cannot be specified at the same time. The presence of both ",(0,a.kt)("inlineCode",{parentName:"p"},"principal")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"realm")," sections will force ClickHouse to disable Kerberos authentication.")),(0,a.kt)("h2",{id:"kerberos-as-an-external-authenticator-for-existing-users"},"Kerberos as an external authenticator for existing users"),(0,a.kt)("p",null,"Kerberos can be used as a method for verifying the identity of locally defined users (users defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"users.xml")," or in local access control paths). Currently, ",(0,a.kt)("strong",{parentName:"p"},"only")," requests over the HTTP interface can be ",(0,a.kt)("em",{parentName:"p"},"kerberized")," (via GSS-SPNEGO mechanism)."),(0,a.kt)("p",null,"Kerberos principal name format usually follows this pattern:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"primary/instance@REALM"))),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"/instance")," part may occur zero or more times. ",(0,a.kt)("strong",{parentName:"p"},"The ",(0,a.kt)("em",{parentName:"strong"},"primary")," part of the canonical principal name of the initiator is expected to match the kerberized user name for authentication to succeed"),"."),(0,a.kt)("h3",{id:"enabling-kerberos-in-users-xml"},"Enabling Kerberos in ",(0,a.kt)("inlineCode",{parentName:"h3"},"users.xml")),(0,a.kt)("p",null,"In order to enable Kerberos authentication for the user, specify ",(0,a.kt)("inlineCode",{parentName:"p"},"kerberos")," section instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," or similar sections in the user definition."),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"realm")," - a realm that will be used to restrict authentication to only those requests whose initiator's realm matches it.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This parameter is optional, if omitted, no additional filtering by realm will be applied.")))),(0,a.kt)("p",null,"Example (goes into ",(0,a.kt)("inlineCode",{parentName:"p"},"users.xml"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<clickhouse>\n    <!- ... --\x3e\n    <users>\n        <!- ... --\x3e\n        <my_user>\n            <!- ... --\x3e\n            <kerberos>\n                <realm>EXAMPLE.COM</realm>\n            </kerberos>\n        </my_user>\n    </users>\n</clickhouse>\n")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"Note that Kerberos authentication cannot be used alongside with any other authentication mechanism. The presence of any other sections like ",(0,a.kt)("inlineCode",{parentName:"p"},"password")," alongside ",(0,a.kt)("inlineCode",{parentName:"p"},"kerberos")," will force ClickHouse to shutdown.")),(0,a.kt)("admonition",{title:"Reminder",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Note, that now, once user ",(0,a.kt)("inlineCode",{parentName:"p"},"my_user")," uses ",(0,a.kt)("inlineCode",{parentName:"p"},"kerberos"),", Kerberos must be enabled in the main ",(0,a.kt)("inlineCode",{parentName:"p"},"config.xml")," file as described previously.")),(0,a.kt)("h3",{id:"enabling-kerberos-using-sql"},"Enabling Kerberos using SQL"),(0,a.kt)("p",null,"When ",(0,a.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/operations/access-rights#access-control"},"SQL-driven Access Control and Account Management")," is enabled in ClickHouse, users identified by Kerberos can also be created using SQL statements."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE USER my_user IDENTIFIED WITH kerberos REALM 'EXAMPLE.COM'\n")),(0,a.kt)("p",null,"...or, without filtering by realm:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE USER my_user IDENTIFIED WITH kerberos\n")))}k.isMDXComponent=!0}}]);