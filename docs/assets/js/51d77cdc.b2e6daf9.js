"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[94493],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=f;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[d]="string"==typeof e?e:i,l[1]=a;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3251:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var r=n(87462),i=(n(67294),n(3905));const o={slug:"/en/development/build-cross-riscv",sidebar_position:68,title:"How to Build ClickHouse on Linux for RISC-V 64 Architecture",sidebar_label:"Build on Linux for RISC-V 64"},l=void 0,a={unversionedId:"en/development/build-cross-riscv",id:"en/development/build-cross-riscv",title:"How to Build ClickHouse on Linux for RISC-V 64 Architecture",description:"As of writing (11.11.2021) building for risc-v considered to be highly experimental. Not all features can be enabled.",source:"@site/docs/en/development/build-cross-riscv.md",sourceDirName:"en/development",slug:"/en/development/build-cross-riscv",permalink:"/AlgoliaDocsSelfCrawl/en/development/build-cross-riscv",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/development/build-cross-riscv.md",tags:[],version:"current",sidebarPosition:68,frontMatter:{slug:"/en/development/build-cross-riscv",sidebar_position:68,title:"How to Build ClickHouse on Linux for RISC-V 64 Architecture",sidebar_label:"Build on Linux for RISC-V 64"},sidebar:"english",previous:{title:"Build on Linux for AARCH64 (ARM64)",permalink:"/AlgoliaDocsSelfCrawl/en/development/build-cross-arm"},next:{title:"C++ Guide",permalink:"/AlgoliaDocsSelfCrawl/en/development/style"}},c={},s=[{value:"Install Clang-13",id:"install-clang-13",level:2},{value:"Build ClickHouse",id:"build-clickhouse",level:2}],u={toc:s},d="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"As of writing (11.11.2021) building for risc-v considered to be highly experimental. Not all features can be enabled."),(0,i.kt)("p",null,"This is for the case when you have Linux machine and want to use it to build ",(0,i.kt)("inlineCode",{parentName:"p"},"clickhouse")," binary that will run on another Linux machine with RISC-V 64 CPU architecture. This is intended for continuous integration checks that run on Linux servers."),(0,i.kt)("p",null,"The cross-build for RISC-V 64 is based on the ",(0,i.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/development/build"},"Build instructions"),", follow them first."),(0,i.kt)("h2",{id:"install-clang-13"},"Install Clang-13"),(0,i.kt)("p",null,"Follow the instructions from ",(0,i.kt)("a",{parentName:"p",href:"https://apt.llvm.org/"},"https://apt.llvm.org/")," for your Ubuntu or Debian setup or do"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"\n')),(0,i.kt)("h2",{id:"build-clickhouse"},"Build ClickHouse"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ClickHouse\nmkdir build-riscv64\nCC=clang-14 CXX=clang++-14 cmake . -Bbuild-riscv64 -G Ninja -DCMAKE_TOOLCHAIN_FILE=cmake/linux/toolchain-riscv64.cmake -DGLIBC_COMPATIBILITY=OFF -DENABLE_LDAP=OFF  -DOPENSSL_NO_ASM=ON -DENABLE_JEMALLOC=ON -DENABLE_PARQUET=OFF -DUSE_UNWIND=OFF -DENABLE_GRPC=OFF -DENABLE_HDFS=OFF -DENABLE_MYSQL=OFF\nninja -C build-riscv64\n")),(0,i.kt)("p",null,"The resulting binary will run only on Linux with the RISC-V 64 CPU architecture."))}p.isMDXComponent=!0}}]);