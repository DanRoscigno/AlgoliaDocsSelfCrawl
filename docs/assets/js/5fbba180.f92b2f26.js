"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[10326],{85162:(e,t,a)=>{a.d(t,{Z:()=>o});var l=a(67294),n=a(86010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return l.createElement("div",{role:"tabpanel",className:(0,n.Z)(s.tabItem,o),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>y});var l=a(87462),n=a(67294),s=a(86010),o=a(12466),r=a(16550),i=a(91980),c=a(67392),u=a(50012);function p(e){return function(e){return n.Children.map(e,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:l,default:n}}=e;return{value:t,label:a,attributes:l,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function k(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const l=(0,r.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(l.location.search);t.set(s,e),l.replace({...l.location,search:t.toString()})}),[s,l])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:l}=e,s=d(e),[o,r]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!k({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const l=a.find((e=>e.default))??a[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:t,tabValues:s}))),[i,c]=m({queryString:a,groupId:l}),[p,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[l,s]=(0,u.Nk)(a);return[l,(0,n.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:l}),g=(()=>{const e=i??p;return k({value:e,tabValues:s})?e:null})();(0,n.useEffect)((()=>{g&&r(g)}),[g]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!k({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);r(e),c(e),h(e)}),[c,h,s]),tabValues:s}}var g=a(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:a,selectedValue:r,selectValue:i,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const t=e.currentTarget,a=u.indexOf(t),l=c[a].value;l!==r&&(p(t),i(l))},k=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:o}=e;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>u.push(e),onKeyDown:k,onClick:d},o,{className:(0,s.Z)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":r===t})}),a??t)})))}function b(e){let{lazy:t,children:a,selectedValue:l}=e;if(t){const e=a.find((e=>e.props.value===l));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==l}))))}function N(e){const t=h(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",f.tabList)},n.createElement(v,(0,l.Z)({},e,t)),n.createElement(b,(0,l.Z)({},e,t)))}function y(e){const t=(0,g.Z)();return n.createElement(N,(0,l.Z)({key:String(t)},e))}},1134:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var l=a(87462),n=(a(67294),a(3905)),s=a(74866),o=a(85162);a(90814);const r={sidebar_label:"Install",keywords:["clickhouse","install","getting started","quick start"],description:"Install ClickHouse",slug:"/en/install"},i="Install ClickHouse",c={unversionedId:"en/getting-started/install",id:"en/getting-started/install",title:"Install ClickHouse",description:"Install ClickHouse",source:"@site/docs/en/getting-started/install.md",sourceDirName:"en/getting-started",slug:"/en/install",permalink:"/AlgoliaDocsSelfCrawl/en/install",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/getting-started/install.md",tags:[],version:"current",frontMatter:{sidebar_label:"Install",keywords:["clickhouse","install","getting started","quick start"],description:"Install ClickHouse",slug:"/en/install"},sidebar:"english",previous:{title:"Integrations",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/intro"},next:{title:"Cloud",permalink:"/AlgoliaDocsSelfCrawl/en/cloud/overview"}},u={},p=[{value:"ClickHouse Cloud",id:"clickhouse-cloud",level:2},{value:"Self-Managed Install",id:"self-managed-install",level:2},{value:"Available Installation Options",id:"available-installation-options",level:2},{value:"From DEB Packages",id:"install-from-deb-packages",level:3},{value:"Setup the Debian repository",id:"setup-the-debian-repository",level:4},{value:"Install ClickHouse server and client",id:"install-clickhouse-server-and-client",level:4},{value:"Start ClickHouse server",id:"start-clickhouse-server",level:4},{value:"Install standalone ClickHouse Keeper",id:"install-standalone-clickhouse-keeper",level:4},{value:"Enable and start ClickHouse Keeper",id:"enable-and-start-clickhouse-keeper",level:4},{value:"Packages",id:"packages",level:4},{value:"From RPM Packages",id:"from-rpm-packages",level:3},{value:"Setup the RPM repository",id:"setup-the-rpm-repository",level:4},{value:"Install ClickHouse server and client",id:"install-clickhouse-server-and-client-1",level:4},{value:"Start ClickHouse server",id:"start-clickhouse-server-1",level:4},{value:"Install standalone ClickHouse Keeper",id:"install-standalone-clickhouse-keeper-1",level:4},{value:"Enable and start ClickHouse Keeper",id:"enable-and-start-clickhouse-keeper-1",level:4},{value:"From Tgz Archives",id:"from-tgz-archives",level:3},{value:"From Docker Image",id:"from-docker-image",level:3},{value:"From Sources",id:"from-sources",level:3},{value:"From CI checks pre-built binaries",id:"from-ci-checks-pre-built-binaries",level:3},{value:"Launch",id:"launch",level:2},{value:"Recommendations for Self-Managed ClickHouse",id:"recommendations-for-self-managed-clickhouse",level:2}],d={toc:p},k="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(k,(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"install-clickhouse"},"Install ClickHouse"),(0,n.kt)("p",null,"You have three options for getting up and running with ClickHouse:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://clickhouse.com/cloud/"},"ClickHouse Cloud"),":")," The official ClickHouse as a service, - built by, maintained and supported by the creators of ClickHouse"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"#self-managed-install"},"Self-managed ClickHouse"),":")," ClickHouse can run on any Linux, FreeBSD, or macOS with x86-64, ARM, or PowerPC64LE CPU architecture"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("a",{parentName:"strong",href:"https://hub.docker.com/r/clickhouse/clickhouse-server/"},"Docker Image"),":")," Read the guide with the official image in Docker Hub")),(0,n.kt)("h2",{id:"clickhouse-cloud"},"ClickHouse Cloud"),(0,n.kt)("p",null,"The quickest and easiest way to get up and running with ClickHouse is to create a new service in ",(0,n.kt)("a",{parentName:"p",href:"https://clickhouse.cloud/"},"ClickHouse Cloud"),"."),(0,n.kt)("h2",{id:"self-managed-install"},"Self-Managed Install"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"For production installs of a specific release version see the ",(0,n.kt)("a",{parentName:"p",href:"#available-installation-options"},"installation options")," down below.")),(0,n.kt)(s.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"linux",label:"Linux",default:!0,mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The simplest way to download ClickHouse locally is to run the following command. If your operating system is supported, an appropriate ClickHouse binary will be downloaded and made runnable:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://clickhouse.com/ | sh\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the ",(0,n.kt)("inlineCode",{parentName:"p"},"install")," command, which defines a collection of useful symlinks along with the files and folders used by ClickHouse - all of which you can see in the output of the install script:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./clickhouse install\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"At the end of the install script, you are prompted for a password for the ",(0,n.kt)("inlineCode",{parentName:"p"},"default")," user. Feel free to enter a password, or you can optionally leave it blank:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-response"},"Creating log directory /var/log/clickhouse-server.\nCreating data directory /var/lib/clickhouse.\nCreating pid directory /var/run/clickhouse-server.\n chown -R clickhouse:clickhouse '/var/log/clickhouse-server'\n chown -R clickhouse:clickhouse '/var/run/clickhouse-server'\n chown  clickhouse:clickhouse '/var/lib/clickhouse'\nEnter password for default user:\n")),(0,n.kt)("p",{parentName:"li"},"You should see the following output:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-response"}," ClickHouse has been successfully installed.\n\n Start clickhouse-server with:\n  sudo clickhouse start\n\n Start clickhouse-client with:\n  clickhouse-client\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the following command to start the ClickHouse server:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo clickhouse start\n"))))),(0,n.kt)(o.Z,{value:"macos",label:"macOS",mdxType:"TabItem"},(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The simplest way to download ClickHouse locally is to run the following command. If your operating system is supported, an appropriate ClickHouse binary will be downloaded and made runnable:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://clickhouse.com/ | sh\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run the ClickHouse server:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./clickhouse server\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Open a new terminal and use the ",(0,n.kt)("strong",{parentName:"p"},"clickhouse-client")," to connect to your service:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"./clickhouse client\n")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-response"},"./clickhouse client\nClickHouse client version 23.2.1.1501 (official build).\nConnecting to localhost:9000 as user default.\nConnected to ClickHouse server version 23.2.1 revision 54461.\n\nlocal-host :)\n")),(0,n.kt)("p",{parentName:"li"},"You are ready to start sending DDL and SQL commands to ClickHouse!"))))),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/getting-started/quick-start/#step-1-get-clickhouse"},"Quick Start")," walks through the steps to download and run ClickHouse, connect to it, and insert data.")),(0,n.kt)("h2",{id:"available-installation-options"},"Available Installation Options"),(0,n.kt)("h3",{id:"install-from-deb-packages"},"From DEB Packages"),(0,n.kt)("p",null,"It is recommended to use official pre-compiled ",(0,n.kt)("inlineCode",{parentName:"p"},"deb")," packages for Debian or Ubuntu. Run these commands to install packages:"),(0,n.kt)("h4",{id:"setup-the-debian-repository"},"Setup the Debian repository"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt-get install -y apt-transport-https ca-certificates dirmngr\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8919F6BD2B48D754\n\necho "deb https://packages.clickhouse.com/deb stable main" | sudo tee \\\n    /etc/apt/sources.list.d/clickhouse.list\nsudo apt-get update\n')),(0,n.kt)("h4",{id:"install-clickhouse-server-and-client"},"Install ClickHouse server and client"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install -y clickhouse-server clickhouse-client\n")),(0,n.kt)("h4",{id:"start-clickhouse-server"},"Start ClickHouse server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo service clickhouse-server start\nclickhouse-client # or "clickhouse-client --password" if you\'ve set up a password.\n')),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Deprecated Method for installing deb-packages"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt-get install apt-transport-https ca-certificates dirmngr\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv E0C56BD4\n\necho "deb https://repo.clickhouse.com/deb/stable/ main/" | sudo tee \\\n    /etc/apt/sources.list.d/clickhouse.list\nsudo apt-get update\n\nsudo apt-get install -y clickhouse-server clickhouse-client\n\nsudo service clickhouse-server start\nclickhouse-client # or "clickhouse-client --password" if you set up a password.\n'))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Migration Method for installing the deb-packages"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt-key del E0C56BD4\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8919F6BD2B48D754\necho "deb https://packages.clickhouse.com/deb stable main" | sudo tee \\\n    /etc/apt/sources.list.d/clickhouse.list\nsudo apt-get update\n\nsudo apt-get install -y clickhouse-server clickhouse-client\n\nsudo service clickhouse-server start\nclickhouse-client # or "clickhouse-client --password" if you set up a password.\n'))),(0,n.kt)("p",null,"You can replace ",(0,n.kt)("inlineCode",{parentName:"p"},"stable")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"lts")," to use different ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/faq/operations/production"},"release kinds")," based on your needs."),(0,n.kt)("p",null,"You can also download and install packages manually from ",(0,n.kt)("a",{parentName:"p",href:"https://packages.clickhouse.com/deb/pool/main/c/"},"here"),"."),(0,n.kt)("h4",{id:"install-standalone-clickhouse-keeper"},"Install standalone ClickHouse Keeper"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"If you are going to run ClickHouse Keeper on the same server as ClickHouse server you\ndo not need to install ClickHouse Keeper as it is included with ClickHouse server.  This command is only needed on standalone ClickHouse Keeper servers.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install -y clickhouse-keeper\n")),(0,n.kt)("h4",{id:"enable-and-start-clickhouse-keeper"},"Enable and start ClickHouse Keeper"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable clickhouse-keeper\nsudo systemctl start clickhouse-keeper\nsudo systemctl status clickhouse-keeper\n")),(0,n.kt)("h4",{id:"packages"},"Packages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"clickhouse-common-static")," \u2014 Installs ClickHouse compiled binary files."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"clickhouse-server")," \u2014 Creates a symbolic link for ",(0,n.kt)("inlineCode",{parentName:"li"},"clickhouse-server")," and installs the default server configuration."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"clickhouse-client")," \u2014 Creates a symbolic link for ",(0,n.kt)("inlineCode",{parentName:"li"},"clickhouse-client")," and other client-related tools. and installs client configuration files."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"clickhouse-common-static-dbg")," \u2014 Installs ClickHouse compiled binary files with debug info."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"clickhouse-keeper")," - Used to install ClickHouse Keeper on dedicated ClickHouse Keeper nodes.  If you are running ClickHouse Keeper on the same server as ClickHouse server, then you do not need to install this package. Installs ClickHouse Keeper and the default ClickHouse Keeper configuration files.")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"If you need to install specific version of ClickHouse you have to install all packages with the same version:\n",(0,n.kt)("inlineCode",{parentName:"p"},"sudo apt-get install clickhouse-server=21.8.5.7 clickhouse-client=21.8.5.7 clickhouse-common-static=21.8.5.7"))),(0,n.kt)("h3",{id:"from-rpm-packages"},"From RPM Packages"),(0,n.kt)("p",null,"It is recommended to use official pre-compiled ",(0,n.kt)("inlineCode",{parentName:"p"},"rpm")," packages for CentOS, RedHat, and all other rpm-based Linux distributions."),(0,n.kt)("h4",{id:"setup-the-rpm-repository"},"Setup the RPM repository"),(0,n.kt)("p",null,"First, you need to add the official repository:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install -y yum-utils\nsudo yum-config-manager --add-repo https://packages.clickhouse.com/rpm/clickhouse.repo\n")),(0,n.kt)("h4",{id:"install-clickhouse-server-and-client-1"},"Install ClickHouse server and client"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install -y clickhouse-server clickhouse-client\n")),(0,n.kt)("h4",{id:"start-clickhouse-server-1"},"Start ClickHouse server"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo systemctl enable clickhouse-server\nsudo systemctl start clickhouse-server\nsudo systemctl status clickhouse-server\nclickhouse-client # or "clickhouse-client --password" if you set up a password.\n')),(0,n.kt)("h4",{id:"install-standalone-clickhouse-keeper-1"},"Install standalone ClickHouse Keeper"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"If you are going to run ClickHouse Keeper on the same server as ClickHouse server you\ndo not need to install ClickHouse Keeper as it is included with ClickHouse server.  This command is only needed on standalone ClickHouse Keeper servers.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install -y clickhouse-keeper\n")),(0,n.kt)("h4",{id:"enable-and-start-clickhouse-keeper-1"},"Enable and start ClickHouse Keeper"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable clickhouse-keeper\nsudo systemctl start clickhouse-keeper\nsudo systemctl status clickhouse-keeper\n")),(0,n.kt)("details",{markdown:"1"},(0,n.kt)("summary",null,"Deprecated Method for installing rpm-packages"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'sudo yum install yum-utils\nsudo rpm --import https://repo.clickhouse.com/CLICKHOUSE-KEY.GPG\nsudo yum-config-manager --add-repo https://repo.clickhouse.com/rpm/clickhouse.repo\nsudo yum install clickhouse-server clickhouse-client\n\nsudo /etc/init.d/clickhouse-server start\nclickhouse-client # or "clickhouse-client --password" if you set up a password.\n'))),(0,n.kt)("p",null,"You can replace ",(0,n.kt)("inlineCode",{parentName:"p"},"stable")," with ",(0,n.kt)("inlineCode",{parentName:"p"},"lts")," to use different ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/faq/operations/production"},"release kinds")," based on your needs."),(0,n.kt)("p",null,"Then run these commands to install packages:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install clickhouse-server clickhouse-client\n")),(0,n.kt)("p",null,"You can also download and install packages manually from ",(0,n.kt)("a",{parentName:"p",href:"https://packages.clickhouse.com/rpm/stable"},"here"),"."),(0,n.kt)("h3",{id:"from-tgz-archives"},"From Tgz Archives"),(0,n.kt)("p",null,"It is recommended to use official pre-compiled ",(0,n.kt)("inlineCode",{parentName:"p"},"tgz")," archives for all Linux distributions, where installation of ",(0,n.kt)("inlineCode",{parentName:"p"},"deb")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"rpm")," packages is not possible."),(0,n.kt)("p",null,"The required version can be downloaded with ",(0,n.kt)("inlineCode",{parentName:"p"},"curl")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"wget")," from repository ",(0,n.kt)("a",{parentName:"p",href:"https://packages.clickhouse.com/tgz/"},"https://packages.clickhouse.com/tgz/"),".\nAfter that downloaded archives should be unpacked and installed with installation scripts. Example for the latest stable version:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'LATEST_VERSION=$(curl -s https://packages.clickhouse.com/tgz/stable/ | \\\n    grep -Eo \'[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\' | sort -V -r | head -n 1)\nexport LATEST_VERSION\n\ncase $(uname -m) in\n  x86_64) ARCH=amd64 ;;\n  aarch64) ARCH=arm64 ;;\n  *) echo "Unknown architecture $(uname -m)"; exit 1 ;;\nesac\n\nfor PKG in clickhouse-common-static clickhouse-common-static-dbg clickhouse-server clickhouse-client clickhouse-keeper\ndo\n  curl -fO "https://packages.clickhouse.com/tgz/stable/$PKG-$LATEST_VERSION-${ARCH}.tgz" \\\n    || curl -fO "https://packages.clickhouse.com/tgz/stable/$PKG-$LATEST_VERSION.tgz"\ndone\n\ntar -xzvf "clickhouse-common-static-$LATEST_VERSION-${ARCH}.tgz" \\\n  || tar -xzvf "clickhouse-common-static-$LATEST_VERSION.tgz"\nsudo "clickhouse-common-static-$LATEST_VERSION/install/doinst.sh"\n\ntar -xzvf "clickhouse-common-static-dbg-$LATEST_VERSION-${ARCH}.tgz" \\\n  || tar -xzvf "clickhouse-common-static-dbg-$LATEST_VERSION.tgz"\nsudo "clickhouse-common-static-dbg-$LATEST_VERSION/install/doinst.sh"\n\ntar -xzvf "clickhouse-server-$LATEST_VERSION-${ARCH}.tgz" \\\n  || tar -xzvf "clickhouse-server-$LATEST_VERSION.tgz"\nsudo "clickhouse-server-$LATEST_VERSION/install/doinst.sh" configure\nsudo /etc/init.d/clickhouse-server start\n\ntar -xzvf "clickhouse-client-$LATEST_VERSION-${ARCH}.tgz" \\\n  || tar -xzvf "clickhouse-client-$LATEST_VERSION.tgz"\nsudo "clickhouse-client-$LATEST_VERSION/install/doinst.sh"\n')),(0,n.kt)("details",{markdown:"1"},(0,n.kt)("summary",null,"Deprecated Method for installing tgz archives"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"export LATEST_VERSION=$(curl -s https://repo.clickhouse.com/tgz/stable/ | \\\n    grep -Eo '[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+' | sort -V -r | head -n 1)\ncurl -O https://repo.clickhouse.com/tgz/stable/clickhouse-common-static-$LATEST_VERSION.tgz\ncurl -O https://repo.clickhouse.com/tgz/stable/clickhouse-common-static-dbg-$LATEST_VERSION.tgz\ncurl -O https://repo.clickhouse.com/tgz/stable/clickhouse-server-$LATEST_VERSION.tgz\ncurl -O https://repo.clickhouse.com/tgz/stable/clickhouse-client-$LATEST_VERSION.tgz\n\ntar -xzvf clickhouse-common-static-$LATEST_VERSION.tgz\nsudo clickhouse-common-static-$LATEST_VERSION/install/doinst.sh\n\ntar -xzvf clickhouse-common-static-dbg-$LATEST_VERSION.tgz\nsudo clickhouse-common-static-dbg-$LATEST_VERSION/install/doinst.sh\n\ntar -xzvf clickhouse-server-$LATEST_VERSION.tgz\nsudo clickhouse-server-$LATEST_VERSION/install/doinst.sh\nsudo /etc/init.d/clickhouse-server start\n\ntar -xzvf clickhouse-client-$LATEST_VERSION.tgz\nsudo clickhouse-client-$LATEST_VERSION/install/doinst.sh\n"))),(0,n.kt)("p",null,"For production environments, it\u2019s recommended to use the latest ",(0,n.kt)("inlineCode",{parentName:"p"},"stable"),"-version. You can find its number on GitHub page ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/ClickHouse/ClickHouse/tags"},"https://github.com/ClickHouse/ClickHouse/tags")," with postfix ",(0,n.kt)("inlineCode",{parentName:"p"},"-stable"),"."),(0,n.kt)("h3",{id:"from-docker-image"},"From Docker Image"),(0,n.kt)("p",null,"To run ClickHouse inside Docker follow the guide on ",(0,n.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/clickhouse/clickhouse-server/"},"Docker Hub"),". Those images use official ",(0,n.kt)("inlineCode",{parentName:"p"},"deb")," packages inside."),(0,n.kt)("h3",{id:"from-sources"},"From Sources"),(0,n.kt)("p",null,"To manually compile ClickHouse, follow the instructions for ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/development/build"},"Linux")," or ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/development/build-osx"},"macOS"),"."),(0,n.kt)("p",null,"You can compile packages and install them or use programs without installing packages."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  Client: <build_directory>/programs/clickhouse-client\n  Server: <build_directory>/programs/clickhouse-server\n")),(0,n.kt)("p",null,"You\u2019ll need to create data and metadata folders manually and ",(0,n.kt)("inlineCode",{parentName:"p"},"chown")," them for the desired user. Their paths can be changed in server config (src/programs/server/config.xml), by default they are:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  /var/lib/clickhouse/data/default/\n  /var/lib/clickhouse/metadata/default/\n")),(0,n.kt)("p",null,"On Gentoo, you can just use ",(0,n.kt)("inlineCode",{parentName:"p"},"emerge clickhouse")," to install ClickHouse from sources."),(0,n.kt)("h3",{id:"from-ci-checks-pre-built-binaries"},"From CI checks pre-built binaries"),(0,n.kt)("p",null,"ClickHouse binaries are built for each ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/development/build#you-dont-have-to-build-clickhouse"},"commit"),"."),(0,n.kt)("h2",{id:"launch"},"Launch"),(0,n.kt)("p",null,"To start the server as a daemon, run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo clickhouse start\n")),(0,n.kt)("p",null,"There are also other ways to run ClickHouse:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo service clickhouse-server start\n")),(0,n.kt)("p",null,"If you do not have ",(0,n.kt)("inlineCode",{parentName:"p"},"service")," command, run as"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo /etc/init.d/clickhouse-server start\n")),(0,n.kt)("p",null,"If you have ",(0,n.kt)("inlineCode",{parentName:"p"},"systemctl")," command, run as"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ sudo systemctl start clickhouse-server.service\n")),(0,n.kt)("p",null,"See the logs in the ",(0,n.kt)("inlineCode",{parentName:"p"},"/var/log/clickhouse-server/")," directory."),(0,n.kt)("p",null,"If the server does not start, check the configurations in the file ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/clickhouse-server/config.xml"),"."),(0,n.kt)("p",null,"You can also manually launch the server from the console:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ clickhouse-server --config-file=/etc/clickhouse-server/config.xml\n")),(0,n.kt)("p",null,"In this case, the log will be printed to the console, which is convenient during development.\nIf the configuration file is in the current directory, you do not need to specify the ",(0,n.kt)("inlineCode",{parentName:"p"},"--config-file")," parameter. By default, it uses ",(0,n.kt)("inlineCode",{parentName:"p"},"./config.xml"),"."),(0,n.kt)("p",null,"ClickHouse supports access restriction settings. They are located in the ",(0,n.kt)("inlineCode",{parentName:"p"},"users.xml")," file (next to ",(0,n.kt)("inlineCode",{parentName:"p"},"config.xml"),").\nBy default, access is allowed from anywhere for the ",(0,n.kt)("inlineCode",{parentName:"p"},"default")," user, without a password. See ",(0,n.kt)("inlineCode",{parentName:"p"},"user/default/networks"),".\nFor more information, see the section ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/operations/configuration-files"},"\u201cConfiguration Files\u201d"),"."),(0,n.kt)("p",null,"After launching server, you can use the command-line client to connect to it:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ clickhouse-client\n")),(0,n.kt)("p",null,"By default, it connects to ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost:9000")," on behalf of the user ",(0,n.kt)("inlineCode",{parentName:"p"},"default")," without a password. It can also be used to connect to a remote server using ",(0,n.kt)("inlineCode",{parentName:"p"},"--host")," argument."),(0,n.kt)("p",null,"The terminal must use UTF-8 encoding.\nFor more information, see the section ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/interfaces/cli"},"\u201cCommand-line client\u201d"),"."),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"$ ./clickhouse-client\nClickHouse client version 0.0.18749.\nConnecting to localhost:9000.\nConnected to ClickHouse server version 0.0.18749.\n\n:) SELECT 1\n\nSELECT 1\n\n\u250c\u25001\u2500\u2510\n\u2502 1 \u2502\n\u2514\u2500\u2500\u2500\u2518\n\n1 rows in set. Elapsed: 0.003 sec.\n\n:)\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Congratulations, the system works!")),(0,n.kt)("p",null,"To continue experimenting, you can download one of the test data sets or go through ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/tutorial"},"tutorial"),"."),(0,n.kt)("h2",{id:"recommendations-for-self-managed-clickhouse"},"Recommendations for Self-Managed ClickHouse"),(0,n.kt)("p",null,"ClickHouse can run on any Linux, FreeBSD, or macOS with x86-64, ARM, or PowerPC64LE CPU architecture."),(0,n.kt)("p",null,"ClickHouse uses all hardware resources available to process data."),(0,n.kt)("p",null,"ClickHouse tends to work more efficiently with a large number of cores at a lower clock rate than with fewer cores at a higher clock rate."),(0,n.kt)("p",null,"We recommend using a minimum of 4GB of RAM to perform non-trivial queries. The ClickHouse server can run with a much smaller amount of RAM, but queries will then frequently abort."),(0,n.kt)("p",null,"The required volume of RAM generally depends on:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The complexity of queries."),(0,n.kt)("li",{parentName:"ul"},"The amount of data that is processed in queries.")),(0,n.kt)("p",null,"To calculate the required volume of RAM, you may estimate the size of temporary data for ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/select/group-by#select-group-by-clause"},"GROUP BY"),", ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/select/distinct#select-distinct"},"DISTINCT"),", ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/select/join#select-join"},"JOIN")," and other operations you use."),(0,n.kt)("p",null,"To reduce memory consumption, ClickHouse can swap temporary data to external storage. See ",(0,n.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/select/group-by#select-group-by-in-external-memory"},"GROUP BY in External Memory")," for details."),(0,n.kt)("p",null,"We recommend to disable the operating system's swap file in production environments."),(0,n.kt)("p",null,"The ClickHouse binary requires at least 2.5 GB of disk space for installation."),(0,n.kt)("p",null,"The volume of storage required for your data may be calculated separately based on"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"an estimation of the data volume."),(0,n.kt)("p",{parentName:"li"},"You can take a sample of the data and get the average size of a row from it. Then multiply the value by the number of rows you plan to store.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"The data compression coefficient."),(0,n.kt)("p",{parentName:"li"},"To estimate the data compression coefficient, load a sample of your data into ClickHouse, and compare the actual size of the data with the size of the table stored. For example, clickstream data is usually compressed by 6-10 times."))),(0,n.kt)("p",null,"To calculate the final volume of data to be stored, apply the compression coefficient to the estimated data volume. If you plan to store data in several replicas, then multiply the estimated volume by the number of replicas."),(0,n.kt)("p",null,"For distributed ClickHouse deployments (clustering), we recommend at least 10G class network connectivity."),(0,n.kt)("p",null,"Network bandwidth is critical for processing distributed queries with a large amount of intermediate data. Besides, network speed affects replication processes."))}m.isMDXComponent=!0}}]);