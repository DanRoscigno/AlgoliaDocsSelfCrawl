"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[47807],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(t),u=r,y=m["".concat(p,".").concat(u)]||m[u]||k[u]||i;return t?a.createElement(y,l(l({ref:n},c),{},{components:t})):a.createElement(y,l({ref:n},c))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},52552:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=t(87462),r=(t(67294),t(3905));const i={slug:"/en/sql-reference/statements/optimize",sidebar_position:47,sidebar_label:"OPTIMIZE",title:"OPTIMIZE Statement"},l=void 0,o={unversionedId:"en/sql-reference/statements/optimize",id:"en/sql-reference/statements/optimize",title:"OPTIMIZE Statement",description:"This query tries to initialize an unscheduled merge of data parts for tables.",source:"@site/docs/en/sql-reference/statements/optimize.md",sourceDirName:"en/sql-reference/statements",slug:"/en/sql-reference/statements/optimize",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/optimize",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/statements/optimize.md",tags:[],version:"current",sidebarPosition:47,frontMatter:{slug:"/en/sql-reference/statements/optimize",sidebar_position:47,sidebar_label:"OPTIMIZE",title:"OPTIMIZE Statement"},sidebar:"english",previous:{title:"KILL",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/kill"},next:{title:"RENAME",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/rename"}},p={},s=[{value:"BY expression",id:"by-expression",level:2}],c={toc:s},m="wrapper";function k(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This query tries to initialize an unscheduled merge of data parts for tables."),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"OPTIMIZE")," can\u2019t fix the ",(0,r.kt)("inlineCode",{parentName:"p"},"Too many parts")," error.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"OPTIMIZE TABLE [db.]name [ON CLUSTER cluster] [PARTITION partition | PARTITION ID 'partition_id'] [FINAL] [DEDUPLICATE [BY expression]]\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"OPTIMIZE")," query is supported for ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/engines/table-engines/mergetree-family/mergetree"},"MergeTree")," family, the ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/engines/table-engines/special/materializedview"},"MaterializedView")," and the ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/engines/table-engines/special/buffer"},"Buffer")," engines. Other table engines aren\u2019t supported."),(0,r.kt)("p",null,"When ",(0,r.kt)("inlineCode",{parentName:"p"},"OPTIMIZE")," is used with the ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/engines/table-engines/mergetree-family/replication"},"ReplicatedMergeTree")," family of table engines, ClickHouse creates a task for merging and waits for execution on all replicas (if the ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/operations/settings/settings#alter-sync"},"alter_sync")," setting is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),") or on current replica (if the ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/operations/settings/settings#alter-sync"},"alter_sync")," setting is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),")."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"OPTIMIZE")," does not perform a merge for any reason, it does not notify the client. To enable notifications, use the ",(0,r.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/operations/settings/settings#setting-optimize_throw_if_noop"},"optimize_throw_if_noop")," setting."),(0,r.kt)("li",{parentName:"ul"},"If you specify a ",(0,r.kt)("inlineCode",{parentName:"li"},"PARTITION"),", only the specified partition is optimized. ",(0,r.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/alter/partition#how-to-set-partition-expression"},"How to set partition expression"),"."),(0,r.kt)("li",{parentName:"ul"},"If you specify ",(0,r.kt)("inlineCode",{parentName:"li"},"FINAL"),", optimization is performed even when all the data is already in one part. You can control this behaviour with ",(0,r.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/operations/settings/settings#optimize-skip-merged-partitions"},"optimize_skip_merged_partitions"),". Also, the merge is forced even if concurrent merges are performed."),(0,r.kt)("li",{parentName:"ul"},"If you specify ",(0,r.kt)("inlineCode",{parentName:"li"},"DEDUPLICATE"),", then completely identical rows (unless by-clause is specified) will be deduplicated (all columns are compared), it makes sense only for the MergeTree engine.")),(0,r.kt)("p",null,"You can specify how long (in seconds) to wait for inactive replicas to execute ",(0,r.kt)("inlineCode",{parentName:"p"},"OPTIMIZE")," queries by the ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/operations/settings/settings#replication-wait-for-inactive-replica-timeout"},"replication_wait_for_inactive_replica_timeout")," setting."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"alter_sync")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," and some replicas are not active for more than the time, specified by the ",(0,r.kt)("inlineCode",{parentName:"p"},"replication_wait_for_inactive_replica_timeout")," setting, then an exception ",(0,r.kt)("inlineCode",{parentName:"p"},"UNFINISHED")," is thrown.")),(0,r.kt)("h2",{id:"by-expression"},"BY expression"),(0,r.kt)("p",null,"If you want to perform deduplication on custom set of columns rather than on all, you can specify list of columns explicitly or use any combination of ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/select/#asterisk"},(0,r.kt)("inlineCode",{parentName:"a"},"*")),", ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/select/#columns-expression"},(0,r.kt)("inlineCode",{parentName:"a"},"COLUMNS"))," or ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/select/#except-modifier"},(0,r.kt)("inlineCode",{parentName:"a"},"EXCEPT"))," expressions. The explictly written or implicitly expanded list of columns must include all columns specified in row ordering expression (both primary and sorting keys) and partitioning expression (partitioning key)."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Notice that ",(0,r.kt)("inlineCode",{parentName:"p"},"*")," behaves just like in ",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT"),": ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/create/table#materialized"},"MATERIALIZED")," and ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/statements/create/table#alias"},"ALIAS")," columns are not used for expansion."),(0,r.kt)("p",{parentName:"admonition"},"Also, it is an error to specify empty list of columns, or write an expression that results in an empty list of columns, or deduplicate by an ",(0,r.kt)("inlineCode",{parentName:"p"},"ALIAS")," column.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"OPTIMIZE TABLE table DEDUPLICATE; -- all columns\nOPTIMIZE TABLE table DEDUPLICATE BY *; -- excludes MATERIALIZED and ALIAS columns\nOPTIMIZE TABLE table DEDUPLICATE BY colX,colY,colZ;\nOPTIMIZE TABLE table DEDUPLICATE BY * EXCEPT colX;\nOPTIMIZE TABLE table DEDUPLICATE BY * EXCEPT (colX, colY);\nOPTIMIZE TABLE table DEDUPLICATE BY COLUMNS('column-matched-by-regex');\nOPTIMIZE TABLE table DEDUPLICATE BY COLUMNS('column-matched-by-regex') EXCEPT colX;\nOPTIMIZE TABLE table DEDUPLICATE BY COLUMNS('column-matched-by-regex') EXCEPT (colX, colY);\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples")),(0,r.kt)("p",null,"Consider the table:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE example (\n    primary_key Int32,\n    secondary_key Int32,\n    value UInt32,\n    partition_key UInt32,\n    materialized_value UInt32 MATERIALIZED 12345,\n    aliased_value UInt32 ALIAS 2,\n    PRIMARY KEY primary_key\n) ENGINE=MergeTree\nPARTITION BY partition_key\nORDER BY (primary_key, secondary_key);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO example (primary_key, secondary_key, value, partition_key)\nVALUES (0, 0, 0, 0), (0, 0, 0, 0), (1, 1, 2, 2), (1, 1, 2, 3), (1, 1, 3, 3);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM example;\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           0 \u2502             0 \u2502     0 \u2502             0 \u2502\n\u2502           0 \u2502             0 \u2502     0 \u2502             0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             3 \u2502\n\u2502           1 \u2502             1 \u2502     3 \u2502             3 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"When columns for deduplication are not specified, all of them are taken into account. Row is removed only if all values in all columns are equal to corresponding values in previous row:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"OPTIMIZE TABLE example FINAL DEDUPLICATE;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM example;\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           0 \u2502             0 \u2502     0 \u2502             0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             3 \u2502\n\u2502           1 \u2502             1 \u2502     3 \u2502             3 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"When columns are specified implicitly, the table is deduplicated by all columns that are not ",(0,r.kt)("inlineCode",{parentName:"p"},"ALIAS")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"MATERIALIZED"),". Considering the table above, these are ",(0,r.kt)("inlineCode",{parentName:"p"},"primary_key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"secondary_key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_key")," columns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"OPTIMIZE TABLE example FINAL DEDUPLICATE BY *;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM example;\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           0 \u2502             0 \u2502     0 \u2502             0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             3 \u2502\n\u2502           1 \u2502             1 \u2502     3 \u2502             3 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"Deduplicate by all columns that are not ",(0,r.kt)("inlineCode",{parentName:"p"},"ALIAS")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"MATERIALIZED")," and explicitly not ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"primary_key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"secondary_key"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_key")," columns."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"OPTIMIZE TABLE example FINAL DEDUPLICATE BY * EXCEPT value;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM example;\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           0 \u2502             0 \u2502     0 \u2502             0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             3 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"Deduplicate explicitly by ",(0,r.kt)("inlineCode",{parentName:"p"},"primary_key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"secondary_key"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_key")," columns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"OPTIMIZE TABLE example FINAL DEDUPLICATE BY primary_key, secondary_key, partition_key;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM example;\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           0 \u2502             0 \u2502     0 \u2502             0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             3 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"Deduplicate by any column matching a regex: ",(0,r.kt)("inlineCode",{parentName:"p"},"primary_key"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"secondary_key"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"partition_key")," columns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"OPTIMIZE TABLE example FINAL DEDUPLICATE BY COLUMNS('.*_key');\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM example;\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           0 \u2502             0 \u2502     0 \u2502             0 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             2 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500primary_key\u2500\u252c\u2500secondary_key\u2500\u252c\u2500value\u2500\u252c\u2500partition_key\u2500\u2510\n\u2502           1 \u2502             1 \u2502     2 \u2502             3 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}k.isMDXComponent=!0}}]);