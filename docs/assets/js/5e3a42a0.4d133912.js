"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[89712],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},y=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),y=r,g=u["".concat(s,".").concat(y)]||u[y]||d[y]||a;return n?i.createElement(g,o(o({ref:t},p),{},{components:n})):i.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=y;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:r,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}y.displayName="MDXCreateElement"},73932:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=n(87462),r=(n(67294),n(3905));const a={slug:"/en/cloud/bestpractices/low-cardinality-partitioning-key",sidebar_label:"Choose a Low Cardinality Partitioning Key",title:"Choose a Low Cardinality Partitioning Key"},o=void 0,c={unversionedId:"en/cloud/bestpractices/partitioningkey",id:"en/cloud/bestpractices/partitioningkey",title:"Choose a Low Cardinality Partitioning Key",description:"When you send an insert statement (that should contain many rows - see section above) to a table in ClickHouse Cloud, and that",source:"@site/docs/en/cloud/bestpractices/partitioningkey.md",sourceDirName:"en/cloud/bestpractices",slug:"/en/cloud/bestpractices/low-cardinality-partitioning-key",permalink:"/docs/en/cloud/bestpractices/low-cardinality-partitioning-key",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/cloud/bestpractices/partitioningkey.md",tags:[],version:"current",frontMatter:{slug:"/en/cloud/bestpractices/low-cardinality-partitioning-key",sidebar_label:"Choose a Low Cardinality Partitioning Key",title:"Choose a Low Cardinality Partitioning Key"},sidebar:"english",previous:{title:"Avoid Optimize Final",permalink:"/docs/en/cloud/bestpractices/avoid-optimize-final"},next:{title:"Manage Cloud",permalink:"/docs/category/manage-cloud"}},s={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,i.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When you send an insert statement (that should contain many rows - see ",(0,r.kt)("a",{parentName:"p",href:"#ingest-data-in-bulk"},"section above"),") to a table in ClickHouse Cloud, and that\ntable is not using a ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/engines/table-engines/mergetree-family/custom-partitioning-key"},"partitioning key")," then all row data from that insert is written into a new part on storage:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"compression block diagram",src:n(46818).Z,width:"2406",height:"1425"})),(0,r.kt)("p",null,"However, when you send an insert statement to a table in ClickHouse Cloud, and that table has a partitioning key, then ClickHouse:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"checks the partitioning key values of the rows contained in the insert"),(0,r.kt)("li",{parentName:"ul"},"creates one new part on storage per distinct partitioning key value"),(0,r.kt)("li",{parentName:"ul"},"places the rows in the corresponding parts by partitioning key value")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"compression block diagram",src:n(35347).Z,width:"2406",height:"1425"})),(0,r.kt)("p",null,"Therefore, to minimize the number of write requests to the ClickHouse Cloud object storage, use a low cardinality partitioning key or avoid using any partitioning key for your table."))}d.isMDXComponent=!0},46818:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/partitioning-01-20916be1fcc18359081d4620359121f4.png"},35347:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/partitioning-02-e7008ab710a593c841b5983a62a82378.png"}}]);