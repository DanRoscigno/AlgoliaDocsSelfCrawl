"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[64899],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),g=p(n),m=r,u=g["".concat(i,".").concat(m)]||g[m]||d[m]||o;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[g]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_label:"Connect PostgreSQL and ClickHouse",sidebar_position:10,slug:"/en/integrations/postgresql/postgres-with-clickhouse",keywords:["clickhouse","postgres","postgresql","connect","integrate","table","engine"]},l="Connecting ClickHouse to PostgreSQL using the PostgreSQL Table Engine",s={unversionedId:"en/integrations/data-ingestion/dbms/postgresql/postgres-with-clickhouse",id:"en/integrations/data-ingestion/dbms/postgresql/postgres-with-clickhouse",title:"Connecting ClickHouse to PostgreSQL using the PostgreSQL Table Engine",description:"The PostgreSQL table engine allows SELECT and INSERT operations on data stored on the remote PostgreSQL server from ClickHouse.",source:"@site/docs/en/integrations/data-ingestion/dbms/postgresql/postgres-with-clickhouse.md",sourceDirName:"en/integrations/data-ingestion/dbms/postgresql",slug:"/en/integrations/postgresql/postgres-with-clickhouse",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/postgresql/postgres-with-clickhouse",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/integrations/data-ingestion/dbms/postgresql/postgres-with-clickhouse.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_label:"Connect PostgreSQL and ClickHouse",sidebar_position:10,slug:"/en/integrations/postgresql/postgres-with-clickhouse",keywords:["clickhouse","postgres","postgresql","connect","integrate","table","engine"]},sidebar:"english",previous:{title:"PostgreSQL",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/postgresql"},next:{title:"PostgreSQL Database Engine",permalink:"/AlgoliaDocsSelfCrawl/en/integrations/postgresql/postgres-with-clickhouse-database-engine"}},i={},p=[{value:"1. Setting up PostgreSQL",id:"1-setting-up-postgresql",level:2},{value:"2. Define a Table in ClickHouse",id:"2-define-a-table-in-clickhouse",level:2},{value:"3 Test the Integration",id:"3-test-the-integration",level:2},{value:"Summary",id:"summary",level:2},{value:"Related content",id:"related-content",level:2}],c={toc:p},g="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(g,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"connecting-clickhouse-to-postgresql-using-the-postgresql-table-engine"},"Connecting ClickHouse to PostgreSQL using the PostgreSQL Table Engine"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"PostgreSQL")," table engine allows ",(0,r.kt)("strong",{parentName:"p"},"SELECT")," and ",(0,r.kt)("strong",{parentName:"p"},"INSERT")," operations on data stored on the remote PostgreSQL server from ClickHouse.\nThis article is to illustrate basic methods of integration using one table."),(0,r.kt)("h2",{id:"1-setting-up-postgresql"},"1. Setting up PostgreSQL"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ",(0,r.kt)("inlineCode",{parentName:"p"},"postgresql.conf"),", add the following entry to enable PostgreSQL to listen on the network interfaces:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"listen_addresses = '*'\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a user to connect from ClickHouse. For demonstration purposes, this example grants full superuser rights."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE ROLE clickhouse_user SUPERUSER LOGIN PASSWORD 'ClickHouse_123';\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a new database in PostgreSQL:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE db_in_psg;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a new table:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE table1 (\n    id         integer primary key,\n    column1    varchar(10)\n);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Let's add a few rows for testing:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO table1\n  (id, column1)\nVALUES\n  (1, 'abc'),\n  (2, 'def');\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"To configure PostgreSQL to allow connections to the new database with the new user for replication, add the following entry to the ",(0,r.kt)("inlineCode",{parentName:"p"},"pg_hba.conf")," file. Update the address line with either the subnet or IP address of your PostgreSQL server:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"# TYPE  DATABASE        USER            ADDRESS                 METHOD\nhost    db_in_psg             clickhouse_user 192.168.1.0/24          password\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Reload the ",(0,r.kt)("inlineCode",{parentName:"p"},"pg_hba.conf")," configuration (adjust this command depending on your version):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"/usr/pgsql-12/bin/pg_ctl reload\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Verify the new ",(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse_user")," can login:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"psql -U clickhouse_user -W -d db_in_psg -h <your_postgresql_host>\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you are using this feaure in ClickHouse Cloud, you may need the to allow the ClickHouse Cloud IP addresses to access your PostgreSQL instance.\nView the ClickHouse Cloud public list of ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/manage/security/ip-egress-traffic-list"},"IP address")," for egress traffic.")),(0,r.kt)("h2",{id:"2-define-a-table-in-clickhouse"},"2. Define a Table in ClickHouse"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Login to the ",(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse-client"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"clickhouse-client --user default --password ClickHouse123!\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Let's create a new database:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE db_in_ch;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a table that uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"PostgreSQL"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE db_in_ch.table1\n(\n    id UInt64,\n    column1 String\n)\nENGINE = PostgreSQL('postgres-host.domain.com:5432', 'db_in_psg', 'table1', 'clickhouse_user', 'ClickHouse_123');\n")),(0,r.kt)("p",{parentName:"li"},"The minimum parameters needed are:"),(0,r.kt)("table",{parentName:"li"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"host:port"),(0,r.kt)("td",{parentName:"tr",align:null},"hostname or IP and port"),(0,r.kt)("td",{parentName:"tr",align:null},"postgres-host.domain.com:5432")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"database"),(0,r.kt)("td",{parentName:"tr",align:null},"PostgreSQL database name"),(0,r.kt)("td",{parentName:"tr",align:null},"db_in_psg")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user"),(0,r.kt)("td",{parentName:"tr",align:null},"username to connect to postgres"),(0,r.kt)("td",{parentName:"tr",align:null},"clickhouse_user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"password"),(0,r.kt)("td",{parentName:"tr",align:null},"password to connect to postgres"),(0,r.kt)("td",{parentName:"tr",align:null},"ClickHouse_123")))),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"View the ",(0,r.kt)("a",{target:"_blank",href:n(37587).Z},"PostgreSQL table engine")," doc page for a complete list of parameters.")))),(0,r.kt)("h2",{id:"3-test-the-integration"},"3 Test the Integration"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In ClickHouse, view initial rows:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM db_in_ch.table1\n")),(0,r.kt)("p",{parentName:"li"},"The ClickHouse table should automatically be populated with the two rows that already existed in the table in PostgreSQL:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-response"},"Query id: 34193d31-fe21-44ac-a182-36aaefbd78bf\n\n\u250c\u2500id\u2500\u252c\u2500column1\u2500\u2510\n\u2502  1 \u2502 abc     \u2502\n\u2502  2 \u2502 def     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Back in PostgreSQL, add a couple of rows to the table:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO table1\n  (id, column1)\nVALUES\n  (3, 'ghi'),\n  (4, 'jkl');\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Those two new rows should appear in your ClickHouse table:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM db_in_ch.table1\n")),(0,r.kt)("p",{parentName:"li"},"The response should be:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-response"},"Query id: 86fa2c62-d320-4e47-b564-47ebf3d5d27b\n\n\u250c\u2500id\u2500\u252c\u2500column1\u2500\u2510\n\u2502  1 \u2502 abc     \u2502\n\u2502  2 \u2502 def     \u2502\n\u2502  3 \u2502 ghi     \u2502\n\u2502  4 \u2502 jkl     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Let's see what happens when you add rows to the ClickHouse table:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO db_in_ch.table1\n  (id, column1)\nVALUES\n  (5, 'mno'),\n  (6, 'pqr');\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The rows added in ClickHouse should appear in the table in PostgreSQL:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"db_in_psg=# SELECT * FROM table1;\nid | column1\n----+---------\n  1 | abc\n  2 | def\n  3 | ghi\n  4 | jkl\n  5 | mno\n  6 | pqr\n(6 rows)\n")))),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"This example demonstrated the basic integration between PostgreSQL and ClickHouse using the ",(0,r.kt)("inlineCode",{parentName:"p"},"PostrgeSQL")," table engine.\nCheck out the ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/engines/table-engines/integrations/postgresql"},"doc page for the PostgreSQL table engine")," for more features, such as specifying schemas, returning only a subset of columns, and connecting to multiple replicas."),(0,r.kt)("h2",{id:"related-content"},"Related content"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Blog: ",(0,r.kt)("a",{parentName:"li",href:"https://clickhouse.com/blog/migrating-data-between-clickhouse-postgres"},"ClickHouse and PostgreSQL - a match made in data heaven - part 1"))))}d.isMDXComponent=!0},37587:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/postgresql-4d604ad1d84038f06da329bbde5afaa0.md"}}]);