"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[99431],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>c});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(t),k=r,c=m["".concat(u,".").concat(k)]||m[k]||d[k]||l;return t?a.createElement(c,i(i({ref:n},s),{},{components:t})):a.createElement(c,i({ref:n},s))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=k;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},65930:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const l={slug:"/en/sql-reference/functions/random-functions",sidebar_position:51,sidebar_label:"Pseudo-Random Numbers"},i="Functions for Generating Pseudo-Random Numbers",o={unversionedId:"en/sql-reference/functions/random-functions",id:"en/sql-reference/functions/random-functions",title:"Functions for Generating Pseudo-Random Numbers",description:"All the functions accept zero arguments or one argument. If an argument is passed, it can be any type, and its value is not used for anything. The only purpose of this argument is to prevent common subexpression elimination, so that two different instances of the same function return different columns with different random numbers.",source:"@site/docs/en/sql-reference/functions/random-functions.md",sourceDirName:"en/sql-reference/functions",slug:"/en/sql-reference/functions/random-functions",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/functions/random-functions",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/functions/random-functions.md",tags:[],version:"current",sidebarPosition:51,frontMatter:{slug:"/en/sql-reference/functions/random-functions",sidebar_position:51,sidebar_label:"Pseudo-Random Numbers"},sidebar:"english",previous:{title:"Hash",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/functions/hash-functions"},next:{title:"Encoding",permalink:"/AlgoliaDocsSelfCrawl/en/sql-reference/functions/encoding-functions"}},u={},p=[{value:"rand, rand32",id:"rand-rand32",level:2},{value:"rand64",id:"rand64",level:2},{value:"randCanonical",id:"randcanonical",level:2},{value:"randConstant",id:"randconstant",level:2},{value:"randUniform",id:"randuniform",level:2},{value:"randNormal",id:"randnormal",level:2},{value:"randLogNormal",id:"randlognormal",level:2},{value:"randBinomial",id:"randbinomial",level:2},{value:"randNegativeBinomial",id:"randnegativebinomial",level:2},{value:"randPoisson",id:"randpoisson",level:2},{value:"randBernoulli",id:"randbernoulli",level:2},{value:"randExponential",id:"randexponential",level:2},{value:"randChiSquared",id:"randchisquared",level:2},{value:"randStudentT",id:"randstudentt",level:2},{value:"randFisherF",id:"randfisherf",level:2},{value:"randomString",id:"randomstring",level:2},{value:"randomFixedString",id:"randomfixedstring",level:2},{value:"randomPrintableASCII",id:"randomprintableascii",level:2},{value:"randomStringUTF8",id:"randomstringutf8",level:2},{value:"fuzzBits",id:"fuzzbits",level:2},{value:"Related content",id:"related-content",level:2}],s={toc:p},m="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"functions-for-generating-pseudo-random-numbers"},"Functions for Generating Pseudo-Random Numbers"),(0,r.kt)("p",null,"All the functions accept zero arguments or one argument. If an argument is passed, it can be any type, and its value is not used for anything. The only purpose of this argument is to prevent common subexpression elimination, so that two different instances of the same function return different columns with different random numbers."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Non-cryptographic generators of pseudo-random numbers are used.")),(0,r.kt)("h2",{id:"rand-rand32"},"rand, rand32"),(0,r.kt)("p",null,"Returns a pseudo-random UInt32 number, evenly distributed among all UInt32-type numbers."),(0,r.kt)("p",null,"Uses a linear congruential generator."),(0,r.kt)("h2",{id:"rand64"},"rand64"),(0,r.kt)("p",null,"Returns a pseudo-random UInt64 number, evenly distributed among all UInt64-type numbers."),(0,r.kt)("p",null,"Uses a linear congruential generator."),(0,r.kt)("h2",{id:"randcanonical"},"randCanonical"),(0,r.kt)("p",null,"The function generates pseudo random results with independent and identically distributed uniformly distributed values in [0, 1)."),(0,r.kt)("p",null,"Non-deterministic. Return type is Float64."),(0,r.kt)("h2",{id:"randconstant"},"randConstant"),(0,r.kt)("p",null,"Produces a constant column with a random value."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randConstant([x])\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"x")," \u2014 ",(0,r.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/syntax#syntax-expressions"},"Expression")," resulting in any of the ",(0,r.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/#data_types"},"supported data types"),". The resulting value is discarded, but the expression itself if used for bypassing ",(0,r.kt)("a",{parentName:"li",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/functions/#common-subexpression-elimination"},"common subexpression elimination")," if the function is called multiple times in one query. Optional parameter.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/int-uint"},"UInt32"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT rand(), rand(1), rand(number), randConstant(), randConstant(1), randConstant(number)\nFROM numbers(3)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500rand()\u2500\u252c\u2500\u2500\u2500\u2500rand(1)\u2500\u252c\u2500rand(number)\u2500\u252c\u2500randConstant()\u2500\u252c\u2500randConstant(1)\u2500\u252c\u2500randConstant(number)\u2500\u2510\n\u2502 3047369878 \u2502 4132449925 \u2502   4044508545 \u2502     2740811946 \u2502      4229401477 \u2502           1924032898 \u2502\n\u2502 2938880146 \u2502 1267722397 \u2502   4154983056 \u2502     2740811946 \u2502      4229401477 \u2502           1924032898 \u2502\n\u2502  956619638 \u2502 4238287282 \u2502   1104342490 \u2502     2740811946 \u2502      4229401477 \u2502           1924032898 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h1",{id:"functions-for-generating-random-numbers-based-on-distributions"},"Functions for Generating Random Numbers based on Distributions"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"These functions are available starting from 22.10.")),(0,r.kt)("h2",{id:"randuniform"},"randUniform"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Continuous_uniform_distribution"},"continuous uniform distribution")," in a specified range from ",(0,r.kt)("inlineCode",{parentName:"p"},"min")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"max"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randUniform(min, max)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"min")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," - min value of the range,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," - max value of the range.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/float"},"Float64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randUniform(5.5, 10) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randUniform(5.5, 10)\u2500\u2510\n\u2502    8.094978491443102 \u2502\n\u2502   7.3181248914450885 \u2502\n\u2502    7.177741903868262 \u2502\n\u2502    6.483347380953762 \u2502\n\u2502    6.122286382885112 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randnormal"},"randNormal"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Normal_distribution"},"normal distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randNormal(meam, variance)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"meam")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," mean value of distribution,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"variance")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," - ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Variance"},"variance"),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/float"},"Float64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randNormal(10, 2) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500randNormal(10, 2)\u2500\u2510\n\u2502 13.389228911709653 \u2502\n\u2502  8.622949707401295 \u2502\n\u2502 10.801887062682981 \u2502\n\u2502 4.5220192605895315 \u2502\n\u2502 10.901239123982567 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randlognormal"},"randLogNormal"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Log-normal_distribution"},"log-normal distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randLogNormal(meam, variance)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"meam")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," mean value of distribution,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"variance")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," - ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Variance"},"variance"),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/float"},"Float64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randLogNormal(100, 5) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randLogNormal(100, 5)\u2500\u2510\n\u2502  1.295699673937363e48 \u2502\n\u2502  9.719869109186684e39 \u2502\n\u2502  6.110868203189557e42 \u2502\n\u2502  9.912675872925529e39 \u2502\n\u2502 2.3564708490552458e42 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randbinomial"},"randBinomial"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Binomial_distribution"},"binomial distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randBinomial(experiments, probability)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"experiments")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"UInt64")," number of experiments,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"probability")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," - probability of success in each experiment (values in ",(0,r.kt)("inlineCode",{parentName:"li"},"0...1")," range only).")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/int-uint"},"UInt64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randBinomial(100, .75) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randBinomial(100, 0.75)\u2500\u2510\n\u2502                      74 \u2502\n\u2502                      78 \u2502\n\u2502                      76 \u2502\n\u2502                      77 \u2502\n\u2502                      80 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randnegativebinomial"},"randNegativeBinomial"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Negative_binomial_distribution"},"negative binomial distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randNegativeBinomial(experiments, probability)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"experiments")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"UInt64")," number of experiments,"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"probability")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," - probability of failure in each experiment (values in ",(0,r.kt)("inlineCode",{parentName:"li"},"0...1")," range only).")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/int-uint"},"UInt64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randNegativeBinomial(100, .75) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randNegativeBinomial(100, 0.75)\u2500\u2510\n\u2502                              33 \u2502\n\u2502                              32 \u2502\n\u2502                              39 \u2502\n\u2502                              40 \u2502\n\u2502                              50 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randpoisson"},"randPoisson"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Poisson_distribution"},"Poisson distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randPoisson(n)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"n")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"UInt64")," mean number of occurrences.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/int-uint"},"UInt64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randPoisson(10) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randPoisson(10)\u2500\u2510\n\u2502               8 \u2502\n\u2502               8 \u2502\n\u2502               7 \u2502\n\u2502              10 \u2502\n\u2502               6 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randbernoulli"},"randBernoulli"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Bernoulli_distribution"},"Bernoulli distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randBernoulli(probability)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"probability")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," - probability of success (values in ",(0,r.kt)("inlineCode",{parentName:"li"},"0...1")," range only).")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/int-uint"},"UInt64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randBernoulli(.75) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randBernoulli(0.75)\u2500\u2510\n\u2502                   1 \u2502\n\u2502                   1 \u2502\n\u2502                   0 \u2502\n\u2502                   1 \u2502\n\u2502                   1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randexponential"},"randExponential"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Exponential_distribution"},"exponential distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randExponential(lambda)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"lambda")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," lambda value.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/float"},"Float64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randExponential(1/10) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randExponential(divide(1, 10))\u2500\u2510\n\u2502              44.71628934340778 \u2502\n\u2502              4.211013337903262 \u2502\n\u2502             10.809402553207766 \u2502\n\u2502              15.63959406553284 \u2502\n\u2502             1.8148392319860158 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randchisquared"},"randChiSquared"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Chi-squared_distribution"},"Chi-square distribution")," - a distribution of a sum of the squares of k independent standard normal random variables."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randChiSquared(degree_of_freedom)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"degree_of_freedom")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," degree of freedom.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/float"},"Float64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randChiSquared(10) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500randChiSquared(10)\u2500\u2510\n\u2502 10.015463656521543 \u2502\n\u2502  9.621799919882768 \u2502\n\u2502   2.71785015634699 \u2502\n\u2502 11.128188665931908 \u2502\n\u2502  4.902063104425469 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randstudentt"},"randStudentT"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Student%27s_t-distribution"},"Student's t-distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randStudentT(degree_of_freedom)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"degree_of_freedom")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," degree of freedom.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/float"},"Float64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randStudentT(10) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500\u2500\u2500\u2500randStudentT(10)\u2500\u2510\n\u2502   1.2217309938538725 \u2502\n\u2502   1.7941971681200541 \u2502\n\u2502 -0.28192176076784664 \u2502\n\u2502   0.2508897721303792 \u2502\n\u2502  -2.7858432909761186 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"randfisherf"},"randFisherF"),(0,r.kt)("p",null,"Return random number based on ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/F-distribution"},"F-distribution"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"randFisherF(d1, d2)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"d1")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," d1 degree of freedom in ",(0,r.kt)("inlineCode",{parentName:"li"},"X = (S1 / d1) / (S2 / d2)"),","),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"d2")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"Float64")," d2 degree of freedom in ",(0,r.kt)("inlineCode",{parentName:"li"},"X = (S1 / d1) / (S2 / d2)"),",")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pseudo-random number.")),(0,r.kt)("p",null,"Type: ",(0,r.kt)("a",{parentName:"p",href:"/AlgoliaDocsSelfCrawl/en/sql-reference/data-types/float"},"Float64"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Query:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT randFisherF(10, 3) FROM numbers(5)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500\u2500randFisherF(10, 3)\u2500\u2510\n\u2502   7.286287504216609 \u2502\n\u2502 0.26590779413050386 \u2502\n\u2502 0.22207610901168987 \u2502\n\u2502  0.7953362728449572 \u2502\n\u2502 0.19278885985221572 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h1",{id:"random-functions-for-working-with-strings"},"Random Functions for Working with Strings"),(0,r.kt)("h2",{id:"randomstring"},"randomString"),(0,r.kt)("h2",{id:"randomfixedstring"},"randomFixedString"),(0,r.kt)("h2",{id:"randomprintableascii"},"randomPrintableASCII"),(0,r.kt)("h2",{id:"randomstringutf8"},"randomStringUTF8"),(0,r.kt)("h2",{id:"fuzzbits"},"fuzzBits"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Syntax")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"fuzzBits([s], [prob])\n")),(0,r.kt)("p",null,"Inverts bits of ",(0,r.kt)("inlineCode",{parentName:"p"},"s"),", each with probability ",(0,r.kt)("inlineCode",{parentName:"p"},"prob"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"s")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"String")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"FixedString")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prob")," - constant ",(0,r.kt)("inlineCode",{parentName:"li"},"Float32/64"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returned value"),"\nFuzzed string with same as s type."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT fuzzBits(materialize('abacaba'), 0.1)\nFROM numbers(3)\n")),(0,r.kt)("p",null,"Result:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500fuzzBits(materialize('abacaba'), 0.1)\u2500\u2510\n\u2502 abaaaja                               \u2502\n\u2502 a*cjab+                               \u2502\n\u2502 aeca2A                                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"related-content"},"Related content"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Blog: ",(0,r.kt)("a",{parentName:"li",href:"https://clickhouse.com/blog/generating-random-test-distribution-data-for-clickhouse"},"Generating random data in ClickHouse"))))}d.isMDXComponent=!0}}]);