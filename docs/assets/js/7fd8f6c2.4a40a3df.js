"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[22832],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(r),g=n,m=d["".concat(l,".").concat(g)]||d[g]||u[g]||i;return r?a.createElement(m,o(o({ref:t},p),{},{components:r})):a.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},33125:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const i={slug:"/zh/getting-started/example-datasets/wikistat",sidebar_position:17,sidebar_label:"WikiStat"},o="WikiStat",s={unversionedId:"zh/getting-started/example-datasets/wikistat",id:"zh/getting-started/example-datasets/wikistat",title:"WikiStat",description:"wikistat}",source:"@site/docs/zh/getting-started/example-datasets/wikistat.md",sourceDirName:"zh/getting-started/example-datasets",slug:"/zh/getting-started/example-datasets/wikistat",permalink:"/AlgoliaDocsSelfCrawl/zh/getting-started/example-datasets/wikistat",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/zh/getting-started/example-datasets/wikistat.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{slug:"/zh/getting-started/example-datasets/wikistat",sidebar_position:17,sidebar_label:"WikiStat"},sidebar:"chinese",previous:{title:"Star Schema Benchmark",permalink:"/AlgoliaDocsSelfCrawl/zh/getting-started/example-datasets/star-schema"},next:{title:"Terabyte Click Logs from Criteo",permalink:"/AlgoliaDocsSelfCrawl/zh/getting-started/example-datasets/criteo"}},l={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"wikistat"},"WikiStat"),(0,n.kt)("p",null,"\u53c2\u8003: ",(0,n.kt)("a",{parentName:"p",href:"http://dumps.wikimedia.org/other/pagecounts-raw/"},"http://dumps.wikimedia.org/other/pagecounts-raw/")),(0,n.kt)("p",null,"\u521b\u5efa\u8868\u7ed3\u6784\uff1a"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE wikistat\n(\n    date Date,\n    time DateTime,\n    project String,\n    subproject String,\n    path String,\n    hits UInt64,\n    size UInt64\n) ENGINE = MergeTree(date, (path, time), 8192);\n")),(0,n.kt)("p",null,"\u52a0\u8f7d\u6570\u636e\uff1a"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"$ for i in {2007..2016}; do for j in {01..12}; do echo $i-$j >&2; curl -sSL \"http://dumps.wikimedia.org/other/pagecounts-raw/$i/$i-$j/\" | grep -oE 'pagecounts-[0-9]+-[0-9]+\\.gz'; done; done | sort | uniq | tee links.txt\n$ cat links.txt | while read link; do wget http://dumps.wikimedia.org/other/pagecounts-raw/$(echo $link | sed -r 's/pagecounts-([0-9]{4})([0-9]{2})[0-9]{2}-[0-9]+\\.gz/\\1/')/$(echo $link | sed -r 's/pagecounts-([0-9]{4})([0-9]{2})[0-9]{2}-[0-9]+\\.gz/\\1-\\2/')/$link; done\n$ ls -1 /opt/wikistat/ | grep gz | while read i; do echo $i; gzip -cd /opt/wikistat/$i | ./wikistat-loader --time=\"$(echo -n $i | sed -r 's/pagecounts-([0-9]{4})([0-9]{2})([0-9]{2})-([0-9]{2})([0-9]{2})([0-9]{2})\\.gz/\\1-\\2-\\3 \\4-00-00/')\" | clickhouse-client --query=\"INSERT INTO wikistat FORMAT TabSeparated\"; done\n")))}u.isMDXComponent=!0}}]);