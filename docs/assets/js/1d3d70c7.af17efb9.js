"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[50105],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=m(n),d=i,g=c["".concat(s,".").concat(d)]||c[d]||u[d]||a;return n?r.createElement(g,l(l({ref:t},p),{},{components:n})):r.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var m=2;m<a;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},14762:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>m});var r=n(87462),i=(n(67294),n(3905));const a={slug:"/en/operations/system-tables/text_log"},l="text_log",o={unversionedId:"en/operations/system-tables/text_log",id:"en/operations/system-tables/text_log",title:"text_log",description:"Contains logging entries. The logging level which goes to this table can be limited to the text_log.level server setting.",source:"@site/docs/en/operations/system-tables/text_log.md",sourceDirName:"en/operations/system-tables",slug:"/en/operations/system-tables/text_log",permalink:"/AlgoliaDocsSelfCrawl/en/operations/system-tables/text_log",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/operations/system-tables/text_log.md",tags:[],version:"current",frontMatter:{slug:"/en/operations/system-tables/text_log"},sidebar:"english",previous:{title:"tables",permalink:"/AlgoliaDocsSelfCrawl/en/operations/system-tables/tables"},next:{title:"time_zones",permalink:"/AlgoliaDocsSelfCrawl/en/operations/system-tables/time_zones"}},s={},m=[],p={toc:m},c="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"text_log"},"text_log"),(0,i.kt)("p",null,"Contains logging entries. The logging level which goes to this table can be limited to the ",(0,i.kt)("inlineCode",{parentName:"p"},"text_log.level")," server setting."),(0,i.kt)("p",null,"Columns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event_date")," (Date) \u2014 Date of the entry."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event_time")," (DateTime) \u2014 Time of the entry."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event_time_microseconds")," (DateTime) \u2014 Time of the entry with microseconds precision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"microseconds")," (UInt32) \u2014 Microseconds of the entry."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"thread_name")," (String) \u2014 Name of the thread from which the logging was done."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"thread_id")," (UInt64) \u2014 OS thread ID."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"level")," (",(0,i.kt)("inlineCode",{parentName:"li"},"Enum8"),") \u2014 Entry level. Possible values:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Fatal'"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"2")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Critical'"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"3")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Error'"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"4")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Warning'"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"5")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Notice'"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"6")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Information'"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"7")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Debug'"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"8")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"'Trace'"),"."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"query_id")," (String) \u2014 ID of the query."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"logger_name")," (LowCardinality(String)) \u2014 Name of the logger (i.e.\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"DDLWorker"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"message")," (String) \u2014 The message itself."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"revision")," (UInt32) \u2014 ClickHouse revision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"source_file")," (LowCardinality(String)) \u2014 Source file from which the logging was done."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"source_line")," (UInt64) \u2014 Source line from which the logging was done."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"message_format_string")," (LowCardinality(String)) \u2014 A format string that was used to format the message.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.text_log LIMIT 1 \\G\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nevent_date:              2020-09-10\nevent_time:              2020-09-10 11:23:07\nevent_time_microseconds: 2020-09-10 11:23:07.871397\nmicroseconds:            871397\nthread_name:             clickhouse-serv\nthread_id:               564917\nlevel:                   Information\nquery_id:\nlogger_name:             DNSCacheUpdater\nmessage:                 Update period 15 seconds\nrevision:                54440\nsource_file:             /ClickHouse/src/Interpreters/DNSCacheUpdater.cpp; void DB::DNSCacheUpdater::start()\nsource_line:             45\nmessage_format_string:   Update period {} seconds\n")))}u.isMDXComponent=!0}}]);