"use strict";(self.webpackChunkclickhouse_docs_2_3_0=self.webpackChunkclickhouse_docs_2_3_0||[]).push([[30004],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>k});var a=i(67294);function l(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){l(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function n(e,t){if(null==e)return{};var i,a,l=function(e,t){if(null==e)return{};var i,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||(l[i]=e[i]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var i=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=n(e,["components","mdxType","originalType","parentName"]),h=u(i),c=l,k=h["".concat(s,".").concat(c)]||h[c]||m[c]||o;return i?a.createElement(k,r(r({ref:t},p),{},{components:i})):a.createElement(k,r({ref:t},p))}));function k(e,t){var i=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=i.length,r=new Array(o);r[0]=c;var n={};for(var s in t)hasOwnProperty.call(t,s)&&(n[s]=t[s]);n.originalType=e,n[h]="string"==typeof e?e:l,r[1]=n;for(var u=2;u<o;u++)r[u]=i[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,i)}c.displayName="MDXCreateElement"},41283:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>n,toc:()=>u});var a=i(87462),l=(i(67294),i(3905));const o={slug:"/en/whats-new/changelog/",sidebar_position:2,sidebar_label:2023,title:"2023 Changelog"},r=void 0,n={unversionedId:"en/whats-new/changelog/index",id:"en/whats-new/changelog/index",title:"2023 Changelog",description:"ClickHouse release 23.2, 2023-02-23",source:"@site/docs/en/whats-new/changelog/index.md",sourceDirName:"en/whats-new/changelog",slug:"/en/whats-new/changelog/",permalink:"/docs/en/whats-new/changelog/",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/whats-new/changelog/index.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/en/whats-new/changelog/",sidebar_position:2,sidebar_label:"2023",title:"2023 Changelog"},sidebar:"english",previous:{title:"Cloud",permalink:"/docs/en/whats-new/changelog/cloud"},next:{title:"2022",permalink:"/docs/en/whats-new/changelog/2022"}},s={},u=[{value:'<a id="232"></a> ClickHouse release 23.2, 2023-02-23',id:"-clickhouse-release-232-2023-02-23",level:3},{value:"Backward Incompatible Change",id:"backward-incompatible-change",level:4},{value:"New Feature",id:"new-feature",level:4},{value:"Performance Improvement",id:"performance-improvement",level:4},{value:"Improvement",id:"improvement",level:4},{value:"Build/Testing/Packaging Improvement",id:"buildtestingpackaging-improvement",level:4},{value:"Bug Fix (user-visible misbehavior in official stable or prestable release)",id:"bug-fix-user-visible-misbehavior-in-official-stable-or-prestable-release",level:4},{value:'<a id="231"></a> ClickHouse release 23.1, 2023-01-26',id:"-clickhouse-release-231-2023-01-26",level:3},{value:"ClickHouse release 23.1",id:"clickhouse-release-231",level:3},{value:"Upgrade Notes",id:"upgrade-notes",level:4},{value:"New Feature",id:"new-feature-1",level:4},{value:"Experimental Feature",id:"experimental-feature",level:4},{value:"Performance Improvement",id:"performance-improvement-1",level:4},{value:"Improvement",id:"improvement-1",level:4},{value:"Build/Testing/Packaging Improvement",id:"buildtestingpackaging-improvement-1",level:4},{value:"Bug Fix",id:"bug-fix",level:4},{value:"Changelog for 2022",id:"changelog-for-2022",level:2}],p={toc:u},h="wrapper";function m(e){let{components:t,...i}=e;return(0,l.kt)(h,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"-clickhouse-release-232-2023-02-23"},(0,l.kt)("a",{id:"232"})," ClickHouse release 23.2, 2023-02-23"),(0,l.kt)("h4",{id:"backward-incompatible-change"},"Backward Incompatible Change"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'Extend function "toDayOfWeek()" (alias: "DAYOFWEEK") with a mode argument that encodes whether the week starts on Monday or Sunday and whether counting starts at 0 or 1. For consistency with other date time functions, the mode argument was inserted between the time and the time zone arguments. This breaks existing usage of the (previously undocumented) 2-argument syntax "toDayOfWeek(time, time_zone)". A fix is to rewrite the function into "toDayOfWeek(time, 0, time_zone)". ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45233"},"#45233")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Rename setting ",(0,l.kt)("inlineCode",{parentName:"li"},"max_query_cache_size")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"filesystem_cache_max_download_size"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45614"},"#45614")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"default")," user will not have permission for access type ",(0,l.kt)("inlineCode",{parentName:"li"},"SHOW NAMED COLLECTION")," by default (e.g. ",(0,l.kt)("inlineCode",{parentName:"li"},"default")," user will no longer be able to grant ALL to other users as it was before, therefore this PR is backward incompatible). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46010"},"#46010")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"If the SETTINGS clause is specified before the FORMAT clause, the settings will be applied to formatting as well. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46003"},"#46003")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Remove support for setting ",(0,l.kt)("inlineCode",{parentName:"li"},"materialized_postgresql_allow_automatic_update")," (which was by default turned off). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46106"},"#46106")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Slightly improve the performance of ",(0,l.kt)("inlineCode",{parentName:"li"},"countDigits")," on realistic datasets. This closed ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44518"},"#44518"),". In previous versions, ",(0,l.kt)("inlineCode",{parentName:"li"},"countDigits(0)")," returned ",(0,l.kt)("inlineCode",{parentName:"li"},"0"),"; now it returns ",(0,l.kt)("inlineCode",{parentName:"li"},"1"),", which is more correct and follows the existing documentation. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46187"},"#46187")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},'Disallow the creation of new columns compressed by a combination of codecs "Delta" or "DoubleDelta" followed by codecs "Gorilla" or "FPC". This can be bypassed using the setting "allow_suspicious_codecs = true". ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45652"},"#45652")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),").")),(0,l.kt)("h4",{id:"new-feature"},"New Feature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"StorageIceberg")," and table function ",(0,l.kt)("inlineCode",{parentName:"li"},"iceberg")," to access iceberg table store on S3. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45384"},"#45384")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow configuring storage as ",(0,l.kt)("inlineCode",{parentName:"li"},"SETTINGS disk = '<disk_name>'")," (instead of ",(0,l.kt)("inlineCode",{parentName:"li"},"storage_policy"),") and with explicit disk creation ",(0,l.kt)("inlineCode",{parentName:"li"},"SETTINGS disk = disk(type=s3, ...)"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/41976"},"#41976")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Expose ",(0,l.kt)("inlineCode",{parentName:"li"},"ProfileEvents")," counters in ",(0,l.kt)("inlineCode",{parentName:"li"},"system.part_log"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/38614"},"#38614")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/bharatnc"},"Bharat Nallan"),")."),(0,l.kt)("li",{parentName:"ul"},"Enrichment of the existing ",(0,l.kt)("inlineCode",{parentName:"li"},"ReplacingMergeTree")," engine to allow duplicate insertion. It leverages the power of both ",(0,l.kt)("inlineCode",{parentName:"li"},"ReplacingMergeTree")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"CollapsingMergeTree")," in one MergeTree engine. Deleted data are not returned when queried, but not removed from disk either. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/41005"},"#41005")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/youennL-cs"},"youennL-cs"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"generateULID")," function. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/36536"},"#36536"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44662"},"#44662")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/evillique"},"Nikolay Degterinsky"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"corrMatrix")," aggregate function, calculating each two columns. In addition, since Aggregatefunctions ",(0,l.kt)("inlineCode",{parentName:"li"},"covarSamp")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"covarPop")," are similar to ",(0,l.kt)("inlineCode",{parentName:"li"},"corr"),", I add ",(0,l.kt)("inlineCode",{parentName:"li"},"covarSampMatrix"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"covarPopMatrix")," by the way. @alexey-milovidov closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44587"},"#44587"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44680"},"#44680")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/FFFFFFFHHHHHHH"},"FFFFFFFHHHHHHH"),")."),(0,l.kt)("li",{parentName:"ul"},"Introduce the arrayShuffle function for random array permutations. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45271"},"#45271")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/jh0x"},"Joanna Hulboj"),")."),(0,l.kt)("li",{parentName:"ul"},"Support types ",(0,l.kt)("inlineCode",{parentName:"li"},"FIXED_SIZE_BINARY")," type in Arrow, ",(0,l.kt)("inlineCode",{parentName:"li"},"FIXED_LENGTH_BYTE_ARRAY")," in ",(0,l.kt)("inlineCode",{parentName:"li"},"Parquet")," and match them to ",(0,l.kt)("inlineCode",{parentName:"li"},"FixedString"),". Add settings ",(0,l.kt)("inlineCode",{parentName:"li"},"output_format_parquet_fixed_string_as_fixed_byte_array/output_format_arrow_fixed_string_as_fixed_byte_array")," to control the default output type for FixedString. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45326"},"#45326"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45340"},"#45340")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Add a new column ",(0,l.kt)("inlineCode",{parentName:"li"},"last_exception_time")," to system.replication_queue. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45457"},"#45457")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/FrankChen021"},"Frank Chen"),")."),(0,l.kt)("li",{parentName:"ul"},"Add two new functions which allow for user-defined keys/seeds with SipHash{64,128}. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45513"},"#45513")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/aiven-sal"},"Salvatore Mesoraca"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow a three-argument version for table function ",(0,l.kt)("inlineCode",{parentName:"li"},"format"),". close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45808"},"#45808"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45873"},"#45873")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/FFFFFFFHHHHHHH"},"FFFFFFFHHHHHHH"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"JodaTime")," format support for 'x','w','S'. Refer to ",(0,l.kt)("a",{parentName:"li",href:"https://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html"},"https://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46073"},"#46073")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/zk-kiger"},"zk_kiger"),")."),(0,l.kt)("li",{parentName:"ul"},"Support window function ",(0,l.kt)("inlineCode",{parentName:"li"},"ntile"),"."),(0,l.kt)("li",{parentName:"ul"},"Add setting ",(0,l.kt)("inlineCode",{parentName:"li"},"final")," to implicitly apply the ",(0,l.kt)("inlineCode",{parentName:"li"},"FINAL")," modifier to every table. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/40945"},"#40945")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/arthurpassos"},"Arthur Passos"),")."),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"arrayPartialSort")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"arrayPartialReverseSort")," functions. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46296"},"#46296")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/jh0x"},"Joanna Hulboj"),")."),(0,l.kt)("li",{parentName:"ul"},"The new http parameter ",(0,l.kt)("inlineCode",{parentName:"li"},"client_protocol_version")," allows setting a client protocol version for HTTP responses using the Native format. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/40397"},"#40397"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46360"},"#46360")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/genzgd"},"Geoff Genz"),")."),(0,l.kt)("li",{parentName:"ul"},"Add new function ",(0,l.kt)("inlineCode",{parentName:"li"},"regexpExtract"),", like Spark function ",(0,l.kt)("inlineCode",{parentName:"li"},"REGEXP_EXTRACT")," for compatibility. It is similar to the existing function ",(0,l.kt)("inlineCode",{parentName:"li"},"extract"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46469"},"#46469")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Add new function ",(0,l.kt)("inlineCode",{parentName:"li"},"JSONArrayLength"),", which returns the number of elements in the outermost JSON array. The function returns NULL if the input JSON string is invalid. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46631"},"#46631")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),").")),(0,l.kt)("h4",{id:"performance-improvement"},"Performance Improvement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'The introduced logic works if a PREWHERE condition is a conjunction of multiple conditions (cond1 AND cond2 AND ... ). It groups those conditions that require reading the same columns into steps. After each step, the corresponding part of the full condition is computed and the result rows might be filtered. This allows reading fewer rows in the next steps thus saving IO bandwidth and doing less computation. This logic is disabled by default for now. It will be enabled by default in one of the future releases once it is known to not have any regressions, so it is highly encouraged to be used for testing. It can be controlled by 2 settings: "enable_multiple_prewhere_read_steps" and "move_all_conditions_to_prewhere". ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46140"},"#46140")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/davenger"},"Alexander Gololobov"),")."),(0,l.kt)("li",{parentName:"ul"},"An option added to aggregate partitions independently if table partition key and group by key are compatible. Controlled by the setting ",(0,l.kt)("inlineCode",{parentName:"li"},"allow_aggregate_partitions_independently"),". Disabled by default because of limited applicability (please refer to the docs). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45364"},"#45364")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nickitat"},"Nikita Taranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow using Vertical merge algorithm with parts in Compact format. This will allow ClickHouse server to use much less memory for background operations. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/46084"},"#46084"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45681"},"#45681")," ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46282"},"#46282")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Optimize ",(0,l.kt)("inlineCode",{parentName:"li"},"Parquet")," reader by using batch reader. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45878"},"#45878")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/liuneng1994"},"LiuNeng"),")."),(0,l.kt)("li",{parentName:"ul"},"Add new ",(0,l.kt)("inlineCode",{parentName:"li"},"local_filesystem_read_method")," method ",(0,l.kt)("inlineCode",{parentName:"li"},"io_uring")," based on the asynchronous Linux ",(0,l.kt)("a",{parentName:"li",href:"https://kernel.dk/io_uring.pdf"},"io_uring")," subsystem, improving read performance almost universally compared to the default ",(0,l.kt)("inlineCode",{parentName:"li"},"pread")," method. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/38456"},"#38456")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/sauliusvl"},"Saulius Valatka"),")."),(0,l.kt)("li",{parentName:"ul"},"Rewrite aggregate functions with ",(0,l.kt)("inlineCode",{parentName:"li"},"if")," expression as argument when logically equivalent. For example, ",(0,l.kt)("inlineCode",{parentName:"li"},"avg(if(cond, col, null))")," can be rewritten to avgIf(cond, col). It is helpful in performance. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44730"},"#44730")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve lower/upper function performance with avx512 instructions. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/37894"},"#37894")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yaqi-zhao"},"yaqi-zhao"),")."),(0,l.kt)("li",{parentName:"ul"},"Remove the limitation that on systems with >=32 cores and SMT disabled ClickHouse uses only half of the cores (the case when you disable Hyper Threading in BIOS). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44973"},"#44973")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve performance of function ",(0,l.kt)("inlineCode",{parentName:"li"},"multiIf")," by columnar executing, speed up by 2.3x. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45296"},"#45296")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Add fast path for function ",(0,l.kt)("inlineCode",{parentName:"li"},"position")," when the needle is empty. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45382"},"#45382")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Enable ",(0,l.kt)("inlineCode",{parentName:"li"},"query_plan_remove_redundant_sorting")," optimization by default. Optimization implemented in ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45420"},"#45420"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45567"},"#45567")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/devcrafter"},"Igor Nikonov"),")."),(0,l.kt)("li",{parentName:"ul"},"Increased HTTP Transfer Encoding chunk size to improve performance of large queries using the HTTP interface. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45593"},"#45593")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/genzgd"},"Geoff Genz"),")."),(0,l.kt)("li",{parentName:"ul"},"Fixed performance of short ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT")," queries that read from tables with a large number of ",(0,l.kt)("inlineCode",{parentName:"li"},"Array"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"Map"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"Nested")," columns. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45630"},"#45630")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve performance of filtering for big integers and decimal types. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45949"},"#45949")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"This change could effectively reduce the overhead of obtaining the filter from ColumnNullable(UInt8) and improve the overall query performance. To evaluate the impact of this change, we adopted TPC-H benchmark but revised the column types from non-nullable to nullable, and we measured the QPS of its queries as the performance indicator. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45962"},"#45962")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ZhiguoZh"},"Zhiguo Zhou"),")."),(0,l.kt)("li",{parentName:"ul"},"Make the ",(0,l.kt)("inlineCode",{parentName:"li"},"_part")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"_partition_id")," virtual column be ",(0,l.kt)("inlineCode",{parentName:"li"},"LowCardinality(String)")," type. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45964"},"#45964"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45975"},"#45975")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve the performance of Decimal conversion when the scale does not change. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46095"},"#46095")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow increased prefetching for read data. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46168"},"#46168")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Rewrite ",(0,l.kt)("inlineCode",{parentName:"li"},"arrayExists(x -> x = 1, arr)")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"has(arr, 1)"),", which improve performance by 1.34x. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46188"},"#46188")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix too big memory usage for vertical merges on non-remote disk. Respect ",(0,l.kt)("inlineCode",{parentName:"li"},"max_insert_delayed_streams_for_parallel_write")," for the remote disk. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46275"},"#46275")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Update zstd to v1.5.4. It has some minor improvements in performance and compression ratio. If you run replicas with different versions of ClickHouse you may see reasonable error messages ",(0,l.kt)("inlineCode",{parentName:"li"},"Data after merge/mutation is not byte-identical to data on another replicas.")," with explanation. These messages are Ok and you should not worry. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46280"},"#46280")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix performance degradation caused by ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/39737"},"#39737"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46309"},"#46309")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"replicas_status")," handle will answer quickly even in case of a large replication queue. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46310"},"#46310")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add avx512 support for aggregate function ",(0,l.kt)("inlineCode",{parentName:"li"},"sum"),", function unary arithmetic, function comparison. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/37870"},"#37870")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/zzachimed"},"zhao zhou"),")."),(0,l.kt)("li",{parentName:"ul"},"Rewrote the code around marks distribution and the overall coordination of the reading in order to achieve the maximum performance improvement. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/34527"},"#34527"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43772"},"#43772")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nikitamikhaylov"},"Nikita Mikhaylov"),")."),(0,l.kt)("li",{parentName:"ul"},"Remove redundant DISTINCT clauses in query (subqueries). Implemented on top of query plan. It does similar optimization as ",(0,l.kt)("inlineCode",{parentName:"li"},"optimize_duplicate_order_by_and_distinct")," regarding DISTINCT clauses. Can be enabled via ",(0,l.kt)("inlineCode",{parentName:"li"},"query_plan_remove_redundant_distinct")," setting. Related to ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42648"},"#42648"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44176"},"#44176")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/devcrafter"},"Igor Nikonov"),")."),(0,l.kt)("li",{parentName:"ul"},"A few query rewrite optimizations: ",(0,l.kt)("inlineCode",{parentName:"li"},"sumIf(123, cond) -> 123 * countIf(1, cond)"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"sum(if(cond, 123, 0)) -> 123 * countIf(cond)"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"sum(if(cond, 0, 123)) -> 123 * countIf(not(cond))")," ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44728"},"#44728")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Improved how memory bound merging and aggregation in order on top query plan interact. Previously we fell back to explicit sorting for AIO in some cases when it wasn't actually needed. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45892"},"#45892")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nickitat"},"Nikita Taranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Concurrent merges are scheduled using round-robin by default to ensure fair and starvation-free operation. Previously in heavily overloaded shards, big merges could possibly be starved by smaller merges due to the use of strict priority scheduling. Added ",(0,l.kt)("inlineCode",{parentName:"li"},"background_merges_mutations_scheduling_policy")," server config option to select scheduling algorithm (",(0,l.kt)("inlineCode",{parentName:"li"},"round_robin")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"shortest_task_first"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46247"},"#46247")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/serxa"},"Sergei Trifonov"),").")),(0,l.kt)("h4",{id:"improvement"},"Improvement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Enable retries for INSERT by default in case of ZooKeeper session loss. We already use it in production. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46308"},"#46308")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ability to ignore unknown keys in JSON object for named tuples (",(0,l.kt)("inlineCode",{parentName:"li"},"input_format_json_ignore_unknown_keys_in_named_tuple"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45678"},"#45678")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Support optimizing the ",(0,l.kt)("inlineCode",{parentName:"li"},"where")," clause with sorting key expression move to ",(0,l.kt)("inlineCode",{parentName:"li"},"prewhere"),"  for query with ",(0,l.kt)("inlineCode",{parentName:"li"},"final"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/38893"},"#38893"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/38950"},"#38950")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hexiaoting"},"hexiaoting"),")."),(0,l.kt)("li",{parentName:"ul"},"Add new metrics for backups: num_processed_files and processed_files_size described actual number of processed files. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/42244"},"#42244")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/AVMusorin"},"Aleksandr"),")."),(0,l.kt)("li",{parentName:"ul"},"Added retries on interserver DNS errors. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43179"},"#43179")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/tonickkozlov"},"Anton Kozlov"),")."),(0,l.kt)("li",{parentName:"ul"},"Keeper improvement: try preallocating space on the disk to avoid undefined out-of-space issues. Introduce setting ",(0,l.kt)("inlineCode",{parentName:"li"},"max_log_file_size")," for the maximum size of Keeper's Raft log files. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44370"},"#44370")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},"Optimize behavior for a replica delay api logic in case the replica is read-only. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45148"},"#45148")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/mateng0915"},"mateng915"),")."),(0,l.kt)("li",{parentName:"ul"},"Ask for the password in clickhouse-client interactively in a case when the empty password is wrong. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/46702"},"#46702"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46730"},"#46730")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/evillique"},"Nikolay Degterinsky"),"). "),(0,l.kt)("li",{parentName:"ul"},"Mark ",(0,l.kt)("inlineCode",{parentName:"li"},"Gorilla")," compression on columns of non-Float* type as suspicious. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45376"},"#45376")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Show replica name that is executing a merge in the ",(0,l.kt)("inlineCode",{parentName:"li"},"postpone_reason")," column. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45458"},"#45458")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/FrankChen021"},"Frank Chen"),")."),(0,l.kt)("li",{parentName:"ul"},"Save exception stack trace in part_log. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45459"},"#45459")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/FrankChen021"},"Frank Chen"),")."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"regexp_tree")," dictionary is polished and now it is compatible with ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ua-parser/uap-core"},"https://github.com/ua-parser/uap-core"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45631"},"#45631")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),")."),(0,l.kt)("li",{parentName:"ul"},"Updated checking of ",(0,l.kt)("inlineCode",{parentName:"li"},"SYSTEM SYNC REPLICA"),", resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45508"},"#45508")," ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45648"},"#45648")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Rename setting ",(0,l.kt)("inlineCode",{parentName:"li"},"replication_alter_partitions_sync")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"alter_sync"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45659"},"#45659")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"generateRandom")," table function and the engine now support ",(0,l.kt)("inlineCode",{parentName:"li"},"LowCardinality")," data types. This is useful for testing, for example you can write ",(0,l.kt)("inlineCode",{parentName:"li"},"INSERT INTO table SELECT * FROM generateRandom() LIMIT 1000"),". This is needed to debug ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45590"},"#45590"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45661"},"#45661")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"The experimental query result cache now provides more modular configuration settings. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45679"},"#45679")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},'Renamed "query result cache" to "query cache". ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45682"},"#45682")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"SYSTEM SYNC FILE CACHE")," command. It will do the ",(0,l.kt)("inlineCode",{parentName:"li"},"sync")," syscall. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/8921"},"#8921"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45685"},"#45685")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/freedomDR"},"DR"),")."),(0,l.kt)("li",{parentName:"ul"},"Add a new S3 setting ",(0,l.kt)("inlineCode",{parentName:"li"},"allow_head_object_request"),". This PR makes usage of ",(0,l.kt)("inlineCode",{parentName:"li"},"GetObjectAttributes")," request instead of ",(0,l.kt)("inlineCode",{parentName:"li"},"HeadObject")," introduced in ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45288"},"https://github.com/ClickHouse/ClickHouse/pull/45288")," optional (and disabled by default). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45701"},"#45701")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ability to override connection settings based on connection names (that said that now you can forget about storing password for each connection, you can simply put everything into ",(0,l.kt)("inlineCode",{parentName:"li"},"~/.clickhouse-client/config.xml")," and even use different history files for them, which can be also useful). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45715"},"#45715")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Arrow format: support the duration type. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45669"},"#45669"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45750"},"#45750")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Extend the logging in the Query Cache to improve investigations of the caching behavior. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45751"},"#45751")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"The query cache's server-level settings are now reconfigurable at runtime. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45758"},"#45758")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Hide password in logs when a table function's arguments are specified with a named collection. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45774"},"#45774")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve internal S3 client to correctly deduce regions and redirections for different types of URLs. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45783"},"#45783")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},"Add support for Map, IPv4 and IPv6 types in generateRandom. Mostly useful for testing. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45785"},"#45785")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Support empty/notEmpty for IP types. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45799"},"#45799")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"The column ",(0,l.kt)("inlineCode",{parentName:"li"},"num_processed_files")," was split into two columns: ",(0,l.kt)("inlineCode",{parentName:"li"},"num_files")," (for BACKUP) and ",(0,l.kt)("inlineCode",{parentName:"li"},"files_read")," (for RESTORE). The column ",(0,l.kt)("inlineCode",{parentName:"li"},"processed_files_size")," was split into two columns: ",(0,l.kt)("inlineCode",{parentName:"li"},"total_size")," (for BACKUP) and ",(0,l.kt)("inlineCode",{parentName:"li"},"bytes_read")," (for RESTORE). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45800"},"#45800")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add support for ",(0,l.kt)("inlineCode",{parentName:"li"},"SHOW ENGINES")," query for MySQL compatibility. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45859"},"#45859")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/FArthur-cmd"},"Filatenkov Artur"),")."),(0,l.kt)("li",{parentName:"ul"},"Improved how the obfuscator deals with queries. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45867"},"#45867")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve behaviour of conversion into Date for boundary value 65535 (2149-06-06). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46042"},"#46042")," ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45914"},"#45914")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/jh0x"},"Joanna Hulboj"),")."),(0,l.kt)("li",{parentName:"ul"},"Add setting ",(0,l.kt)("inlineCode",{parentName:"li"},"check_referential_table_dependencies")," to check referential dependencies on ",(0,l.kt)("inlineCode",{parentName:"li"},"DROP TABLE"),". This PR solves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/38326"},"#38326"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45936"},"#45936")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"tupleElement")," to return ",(0,l.kt)("inlineCode",{parentName:"li"},"Null")," when having ",(0,l.kt)("inlineCode",{parentName:"li"},"Null")," argument. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45894"},"#45894"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45952"},"#45952")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Throw an error on no files satisfying the S3 wildcard. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45587"},"#45587"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45957"},"#45957")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/xiedeyantu"},"chen"),")."),(0,l.kt)("li",{parentName:"ul"},"Use cluster state data to check concurrent backup/restore. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45982"},"#45982")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},'ClickHouse Client: Use "exact" matching for fuzzy search, which has correct case ignorance and more appropriate algorithm for matching SQL queries. ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46000"},"#46000")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Forbid wrong create View syntax ",(0,l.kt)("inlineCode",{parentName:"li"},"CREATE View X TO Y AS SELECT"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/4331"},"#4331"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46043"},"#46043")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Storage ",(0,l.kt)("inlineCode",{parentName:"li"},"Log")," family support setting the ",(0,l.kt)("inlineCode",{parentName:"li"},"storage_policy"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43421"},"#43421"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46044"},"#46044")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve ",(0,l.kt)("inlineCode",{parentName:"li"},"JSONColumns")," format when the result is empty. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/46024"},"#46024"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46053"},"#46053")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Add reference implementation for SipHash128. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46065"},"#46065")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/aiven-sal"},"Salvatore Mesoraca"),")."),(0,l.kt)("li",{parentName:"ul"},"Add a new metric to record allocations times and bytes using mmap. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46068"},"#46068")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Currently for functions like ",(0,l.kt)("inlineCode",{parentName:"li"},"leftPad"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"rightPad"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"leftPadUTF8"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"rightPadUTF8"),", the second argument ",(0,l.kt)("inlineCode",{parentName:"li"},"length")," must be UInt8|16|32|64|128|256. Which is too strict for clickhouse users, besides, it is not consistent with other similar functions like ",(0,l.kt)("inlineCode",{parentName:"li"},"arrayResize"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"substring")," and so on. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46103"},"#46103")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix assertion in the ",(0,l.kt)("inlineCode",{parentName:"li"},"welchTTest")," function in debug build when the resulting statistics is NaN. Unified the behavior with other similar functions. Change the behavior of ",(0,l.kt)("inlineCode",{parentName:"li"},"studentTTest")," to return NaN instead of throwing an exception because the previous behavior was inconvenient. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/41176"},"#41176")," This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42162"},"#42162"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46141"},"#46141")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"More convenient usage of big integers and ORDER BY WITH FILL. Allow using plain integers for start and end points in WITH FILL when ORDER BY big (128-bit and 256-bit) integers. Fix the wrong result for big integers with negative start or end points. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/16733"},"#16733"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46152"},"#46152")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"parts"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"active_parts")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"total_marks")," columns to ",(0,l.kt)("inlineCode",{parentName:"li"},"system.tables")," on ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44336"},"issue"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46161"},"#46161")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/attack204"},"attack204"),")."),(0,l.kt)("li",{parentName:"ul"},'Functions "multi',"[Fuzzy]",'Match(Any|AnyIndex|AllIndices}" now reject regexes which will likely evaluate very slowly in vectorscan. ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46167"},"#46167")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"When ",(0,l.kt)("inlineCode",{parentName:"li"},"insert_null_as_default")," is enabled and column doesn't have defined default value, the default of column type will be used. Also this PR fixes using default values on nulls in case of LowCardinality columns. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46171"},"#46171")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Prefer explicitly defined access keys for S3 clients. If ",(0,l.kt)("inlineCode",{parentName:"li"},"use_environment_credentials")," is set to ",(0,l.kt)("inlineCode",{parentName:"li"},"true"),", and the user has provided the access key through query or config, they will be used instead of the ones from the environment variable. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46191"},"#46191")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},'Add an alias "DATE_FORMAT()" for function "formatDateTime()" to improve compatibility with MySQL\'s SQL dialect, extend function ',(0,l.kt)("inlineCode",{parentName:"li"},"formatDateTime"),' with substitutions "a", "b", "c", "h", "i", "k", "l" "r", "s", "W". ### Documentation entry for user-facing changes User-readable short description: ',(0,l.kt)("inlineCode",{parentName:"li"},"DATE_FORMAT")," is an alias of ",(0,l.kt)("inlineCode",{parentName:"li"},"formatDateTime"),". Formats a Time according to the given Format string. Format is a constant expression, so you cannot have multiple formats for a single result column. (Provide link to ",(0,l.kt)("a",{parentName:"li",href:"https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions/#formatdatetime"},"formatDateTime"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46302"},"#46302")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/JakeBamrah"},"Jake Bamrah"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"ProfileEvents")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"CurrentMetrics")," about the callback tasks for parallel replicas (",(0,l.kt)("inlineCode",{parentName:"li"},"s3Cluster")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"MergeTree")," tables). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46313"},"#46313")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add support for ",(0,l.kt)("inlineCode",{parentName:"li"},"DELETE")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"UPDATE")," for tables using ",(0,l.kt)("inlineCode",{parentName:"li"},"KeeperMap")," storage engine. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46330"},"#46330")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow writing RENAME queries with query parameters. Resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45778"},"#45778"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46407"},"#46407")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/evillique"},"Nikolay Degterinsky"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix parameterized SELECT queries with REPLACE transformer. Resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/33002"},"#33002"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46420"},"#46420")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/evillique"},"Nikolay Degterinsky"),")."),(0,l.kt)("li",{parentName:"ul"},'Exclude the internal database used for temporary/external tables from the calculation of asynchronous metric "NumberOfDatabases". This makes the behavior consistent with system table "system.databases". ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46435"},"#46435")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"last_exception_time")," column into distribution_queue table. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46564"},"#46564")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/AVMusorin"},"Aleksandr"),")."),(0,l.kt)("li",{parentName:"ul"},"Support for IN clause with parameter in parameterized views. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46583"},"#46583")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Do not load named collections on server startup (load them on first access instead). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46607"},"#46607")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),").")),(0,l.kt)("h4",{id:"buildtestingpackaging-improvement"},"Build/Testing/Packaging Improvement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Introduce GWP-ASan implemented by the LLVM runtime. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/27039"},"#27039"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45226"},"#45226")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),")."),(0,l.kt)("li",{parentName:"ul"},"We want to make our tests less stable and more flaky: add randomization for merge tree settings in tests. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/38983"},"#38983")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Enable the HDFS support in PowerPC and which helps to fixes the following functional tests 02113_hdfs_assert.sh, 02244_hdfs_cluster.sql and 02368_cancel_write_into_hdfs.sh. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44949"},"#44949")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/MeenaRenganathan22"},"MeenaRenganathan22"),")."),(0,l.kt)("li",{parentName:"ul"},"Add systemd.service file for clickhouse-keeper. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44293"},"#44293"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45568"},"#45568")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Felixoid"},"Mikhail f. Shiryaev"),")."),(0,l.kt)("li",{parentName:"ul"},'ClickHouse\'s fork of poco was moved from "contrib/" to "base/poco/". ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46075"},"#46075")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Add an option for ",(0,l.kt)("inlineCode",{parentName:"li"},"clickhouse-watchdog")," to restart the child process. This does not make a lot of use. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46312"},"#46312")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"If the environment variable ",(0,l.kt)("inlineCode",{parentName:"li"},"CLICKHOUSE_DOCKER_RESTART_ON_EXIT")," is set to 1, the Docker container will run ",(0,l.kt)("inlineCode",{parentName:"li"},"clickhouse-server")," as a child instead of the first process, and restart it when it exited. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46391"},"#46391")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix Systemd service file. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46461"},"#46461")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/cmsxbc"},"SuperDJY"),")."),(0,l.kt)("li",{parentName:"ul"},"Raised the minimum Clang version needed to build ClickHouse from 12 to 15. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46710"},"#46710")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Upgrade Intel QPL from v0.3.0 to v1.0.0 2. Build libaccel-config and link it statically to QPL library instead of dynamically. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45809"},"#45809")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/jinjunzh"},"jasperzhu"),").")),(0,l.kt)("h4",{id:"bug-fix-user-visible-misbehavior-in-official-stable-or-prestable-release"},"Bug Fix (user-visible misbehavior in official stable or prestable release)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Flush data exactly by ",(0,l.kt)("inlineCode",{parentName:"li"},"rabbitmq_flush_interval_ms")," or by ",(0,l.kt)("inlineCode",{parentName:"li"},"rabbitmq_max_block_size")," in ",(0,l.kt)("inlineCode",{parentName:"li"},"StorageRabbitMQ"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42389"},"#42389"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45160"},"#45160"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44404"},"#44404")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Use PODArray to render in sparkBar function, so we can control the memory usage. Close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44467"},"#44467"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44489"},"#44489")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/canhld94"},"Duc Canh Le"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix functions (quantilesExactExclusive, quantilesExactInclusive) return unsorted array element. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45379"},"#45379")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/wujunfu"},"wujunfu"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix uncaught exception in HTTPHandler when open telemetry is enabled. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45456"},"#45456")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/FrankChen021"},"Frank Chen"),")."),(0,l.kt)("li",{parentName:"ul"},"Don't infer Dates from 8 digit numbers. It could lead to wrong data to be read. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45581"},"#45581")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fixes to correctly use ",(0,l.kt)("inlineCode",{parentName:"li"},"odbc_bridge_use_connection_pooling")," setting. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45591"},"#45591")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/bharatnc"},"Bharat Nallan"),")."),(0,l.kt)("li",{parentName:"ul"},"When the callback in the cache is called, it is possible that this cache is destructed. To keep it safe, we capture members by value. It's also safe for task schedule because it will be deactivated before storage is destroyed. Resolve ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45548"},"#45548"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45601"},"#45601")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix data corruption when codecs Delta or DoubleDelta are combined with codec Gorilla. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45615"},"#45615")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Correctly check types when using N-gram bloom filter index to avoid invalid reads. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45617"},"#45617")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},"A couple of segfaults have been reported around ",(0,l.kt)("inlineCode",{parentName:"li"},"c-ares"),". They were introduced in my previous pull requests. I have fixed them with the help of Alexander Tokmakov. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45629"},"#45629")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/arthurpassos"},"Arthur Passos"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix key description when encountering duplicate primary keys. This can happen in projections. See ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45590"},"#45590")," for details. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45686"},"#45686")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/amosbird"},"Amos Bird"),")."),(0,l.kt)("li",{parentName:"ul"},"Set compression method and level for backup Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45690"},"#45690"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45737"},"#45737")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/chhetripradeep"},"Pradeep Chhetri"),")."),(0,l.kt)("li",{parentName:"ul"},"Should use ",(0,l.kt)("inlineCode",{parentName:"li"},"select_query_typed.limitByOffset()")," instead of ",(0,l.kt)("inlineCode",{parentName:"li"},"select_query_typed.limitOffset()"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45817"},"#45817")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taofengliu"},"\u5218\u9676\u5cf0"),")."),(0,l.kt)("li",{parentName:"ul"},"When use experimental analyzer, queries like ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT number FROM numbers(100) LIMIT 10 OFFSET 10;")," get wrong results (empty result for this sql). That is caused by an unnecessary offset step added by planner. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45822"},"#45822")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taofengliu"},"\u5218\u9676\u5cf0"),")."),(0,l.kt)("li",{parentName:"ul"},'Backward compatibility - allow implicit narrowing conversion from UInt64 to IPv4 - required for "INSERT ... VALUES ..." expression. ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45865"},"#45865")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"Bugfix IPv6 parser for mixed ip4 address with missed first octet (like ",(0,l.kt)("inlineCode",{parentName:"li"},"::.1.2.3"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45871"},"#45871")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"Add the ",(0,l.kt)("inlineCode",{parentName:"li"},"query_kind")," column to the ",(0,l.kt)("inlineCode",{parentName:"li"},"system.processes")," table and the ",(0,l.kt)("inlineCode",{parentName:"li"},"SHOW PROCESSLIST")," query. Remove duplicate code. It fixes a bug: the global configuration parameter ",(0,l.kt)("inlineCode",{parentName:"li"},"max_concurrent_select_queries")," was not respected to queries with ",(0,l.kt)("inlineCode",{parentName:"li"},"INTERSECT")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"EXCEPT")," chains. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45872"},"#45872")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix crash in a function ",(0,l.kt)("inlineCode",{parentName:"li"},"stochasticLinearRegression"),". Found by WingFuzz. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45985"},"#45985")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix crash in ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT")," queries with ",(0,l.kt)("inlineCode",{parentName:"li"},"INTERSECT")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"EXCEPT")," modifiers that read data from tables with enabled sparse columns (controlled by setting ",(0,l.kt)("inlineCode",{parentName:"li"},"ratio_of_defaults_for_sparse_serialization"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45987"},"#45987")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix read in order optimization for DESC sorting with FINAL, close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45815"},"#45815"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46009"},"#46009")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix reading of non existing nested columns with multiple level in compact parts. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46045"},"#46045")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix elapsed column in system.processes (10x error). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46047"},"#46047")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Follow-up fix for Replace domain IP types (IPv4, IPv6) with native ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43221"},"https://github.com/ClickHouse/ClickHouse/pull/43221"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46087"},"#46087")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix environment variable substitution in the configuration when a parameter already has a value. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/46131"},"#46131"),". This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/9547"},"#9547"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46144"},"#46144")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/pufit"},"pufit"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix incorrect predicate push down with grouping sets. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45947"},"#45947"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46151"},"#46151")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible pipeline stuck error on ",(0,l.kt)("inlineCode",{parentName:"li"},"fulls_sorting_join")," with constant keys. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46175"},"#46175")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),")."),(0,l.kt)("li",{parentName:"ul"},"Never rewrite tuple functions as literals during formatting to avoid incorrect results. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46232"},"#46232")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/aiven-sal"},"Salvatore Mesoraca"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible out of bounds error while reading LowCardinality(Nullable) in Arrow format. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46270"},"#46270")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"SYSTEM UNFREEZE")," queries failing with the exception ",(0,l.kt)("inlineCode",{parentName:"li"},"CANNOT_PARSE_INPUT_ASSERTION_FAILED"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46325"},"#46325")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/aalexfvk"},"Aleksei Filatov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible crash which can be caused by an integer overflow while deserializing aggregating state of a function that stores HashTable. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46349"},"#46349")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible ",(0,l.kt)("inlineCode",{parentName:"li"},"LOGICAL_ERROR")," in asynchronous inserts with invalid data sent in format ",(0,l.kt)("inlineCode",{parentName:"li"},"VALUES"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46350"},"#46350")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fixed a LOGICAL_ERROR on an attempt to execute ",(0,l.kt)("inlineCode",{parentName:"li"},"ALTER ... MOVE PART ... TO TABLE"),". This type of query was never actually supported. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46359"},"#46359")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/tavplubix"},"Alexander Tokmakov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix s3Cluster schema inference in parallel distributed insert select when ",(0,l.kt)("inlineCode",{parentName:"li"},"parallel_distributed_insert_select")," is enabled. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46381"},"#46381")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix queries like ",(0,l.kt)("inlineCode",{parentName:"li"},"ALTER TABLE ... UPDATE nested.arr1 = nested.arr2 ..."),", where ",(0,l.kt)("inlineCode",{parentName:"li"},"arr1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"arr2")," are fields of the same ",(0,l.kt)("inlineCode",{parentName:"li"},"Nested")," column. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46387"},"#46387")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Scheduler may fail to schedule a task. If it happens, the whole MulityPartUpload should be aborted and ",(0,l.kt)("inlineCode",{parentName:"li"},"UploadHelper")," must wait for already scheduled tasks. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46451"},"#46451")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/novikd"},"Dmitry Novik"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix PREWHERE for Merge with different default types (fixes some ",(0,l.kt)("inlineCode",{parentName:"li"},"NOT_FOUND_COLUMN_IN_BLOCK")," when the default type for the column differs, also allow ",(0,l.kt)("inlineCode",{parentName:"li"},"PREWHERE")," when the type of column is the same across tables, and prohibit it, only if it differs). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46454"},"#46454")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix a crash that could happen when constant values are used in ",(0,l.kt)("inlineCode",{parentName:"li"},"ORDER BY"),". Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/46466"},"#46466"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46493"},"#46493")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Do not throw exception if ",(0,l.kt)("inlineCode",{parentName:"li"},"disk")," setting was specified on query level, but ",(0,l.kt)("inlineCode",{parentName:"li"},"storage_policy")," was specified in config merge tree settings section. ",(0,l.kt)("inlineCode",{parentName:"li"},"disk")," will override setting from config. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46533"},"#46533")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix an invalid processing of constant ",(0,l.kt)("inlineCode",{parentName:"li"},"LowCardinality")," argument in function ",(0,l.kt)("inlineCode",{parentName:"li"},"arrayMap"),". This bug could lead to a segfault in release, and logical error ",(0,l.kt)("inlineCode",{parentName:"li"},"Bad cast")," in debug build. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46569"},"#46569")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/46557"},"#46557"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46611"},"#46611")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/davenger"},"Alexander Gololobov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix endless restarts of clickhouse-server systemd unit if server cannot start within 1m30sec (Disable timeout logic for starting clickhouse-server from systemd service). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46613"},"#46613")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Allocated during asynchronous inserts memory buffers were deallocated in the global context and MemoryTracker counters for corresponding user and query were not updated correctly. That led to false positive OOM exceptions. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46622"},"#46622")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/novikd"},"Dmitry Novik"),")."),(0,l.kt)("li",{parentName:"ul"},"Updated to not clear on_expression from table_join as its used by future analyze runs resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45185"},"#45185"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/46487"},"#46487")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),").")),(0,l.kt)("h3",{id:"-clickhouse-release-231-2023-01-26"},(0,l.kt)("a",{id:"231"})," ClickHouse release 23.1, 2023-01-26"),(0,l.kt)("h3",{id:"clickhouse-release-231"},"ClickHouse release 23.1"),(0,l.kt)("h4",{id:"upgrade-notes"},"Upgrade Notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"SYSTEM RESTART DISK")," query becomes a no-op. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44647"},"#44647")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alesapin"},"alesapin"),")."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"PREALLOCATE")," option for ",(0,l.kt)("inlineCode",{parentName:"li"},"HASHED"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"SPARSE_HASHED")," dictionaries becomes a no-op. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45388"},"#45388")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),"). It does not give significant advantages anymore."),(0,l.kt)("li",{parentName:"ul"},"Disallow ",(0,l.kt)("inlineCode",{parentName:"li"},"Gorilla")," codec on columns of non-Float32 or non-Float64 type. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45252"},"#45252")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),"). It was pointless and led to inconsistencies. "),(0,l.kt)("li",{parentName:"ul"},"Parallel quorum inserts might work incorrectly with ",(0,l.kt)("inlineCode",{parentName:"li"},"*MergeTree")," tables created with the deprecated syntax. Therefore, parallel quorum inserts support is completely disabled for such tables. It does not affect tables created with a new syntax. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45430"},"#45430")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/tavplubix"},"Alexander Tokmakov"),")."),(0,l.kt)("li",{parentName:"ul"},"Use the ",(0,l.kt)("inlineCode",{parentName:"li"},"GetObjectAttributes")," request instead of the ",(0,l.kt)("inlineCode",{parentName:"li"},"HeadObject")," request to get the size of an object in AWS S3. This change fixes handling endpoints without explicit regions after updating the AWS SDK, for example. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45288"},"#45288")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),"). AWS S3 and Minio are tested, but keep in mind that various S3-compatible services (GCS, R2, B2) may have subtle incompatibilities. This change also may require you to adjust the ACL to allow the ",(0,l.kt)("inlineCode",{parentName:"li"},"GetObjectAttributes")," request."),(0,l.kt)("li",{parentName:"ul"},"Forbid paths in timezone names. For example, a timezone name like ",(0,l.kt)("inlineCode",{parentName:"li"},"/usr/share/zoneinfo/Asia/Aden")," is not allowed; the IANA timezone database name like ",(0,l.kt)("inlineCode",{parentName:"li"},"Asia/Aden")," should be used. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44225"},"#44225")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),").")),(0,l.kt)("h4",{id:"new-feature-1"},"New Feature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Dictionary source for extracting keys by traversing regular expressions tree. It can be used for User-Agent parsing. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/40878"},"#40878")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nooblose"},"Vage Ogannisian"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43858"},"#43858")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),")."),(0,l.kt)("li",{parentName:"ul"},"Added parametrized view functionality, now it's possible to specify query parameters for the View table engine. resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/40907"},"#40907"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/41687"},"#41687")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"quantileInterpolatedWeighted"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"quantilesInterpolatedWeighted")," functions. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/38252"},"#38252")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/bharatnc"},"Bharat Nallan"),")."),(0,l.kt)("li",{parentName:"ul"},"Array join support for the ",(0,l.kt)("inlineCode",{parentName:"li"},"Map"),' type, like the function "explode" in Spark. ',(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43239"},"#43239")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Support SQL standard binary and hex string literals. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43785"},"#43785")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/mo-avatar"},"Mo Xuan"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow formatting ",(0,l.kt)("inlineCode",{parentName:"li"},"DateTime")," in Joda-Time style. Refer to ",(0,l.kt)("a",{parentName:"li",href:"https://joda-time.sourceforge.net/apidocs/org/joda/time/format/DateTimeFormat.html"},"the Joda-Time docs"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43818"},"#43818")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Implemented a fractional second formatter (",(0,l.kt)("inlineCode",{parentName:"li"},"%f"),") for ",(0,l.kt)("inlineCode",{parentName:"li"},"formatDateTime"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44060"},"#44060")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ltrk2"},"ltrk2"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44497"},"#44497")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/davenger"},"Alexander Gololobov"),")."),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"age")," function to calculate the difference between two dates or dates with time values expressed as the number of full units. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/41115"},"#41115"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44421"},"#44421")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"Null")," source for dictionaries. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44240"},"#44240"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44502"},"#44502")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/mayamika"},"mayamika"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow configuring the S3 storage class with the ",(0,l.kt)("inlineCode",{parentName:"li"},"s3_storage_class")," configuration option. Such as ",(0,l.kt)("inlineCode",{parentName:"li"},"<s3_storage_class>STANDARD/INTELLIGENT_TIERING</s3_storage_class>")," Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44443"},"#44443"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44707"},"#44707")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/xiedeyantu"},"chen"),")."),(0,l.kt)("li",{parentName:"ul"},"Insert default values in case of missing elements in JSON object while parsing named tuple. Add setting ",(0,l.kt)("inlineCode",{parentName:"li"},"input_format_json_defaults_for_missing_elements_in_named_tuple")," that controls this behaviour. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45142"},"#45142"),"#issuecomment-1380153217. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45231"},"#45231")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Record server startup time in ProfileEvents (",(0,l.kt)("inlineCode",{parentName:"li"},"ServerStartupMilliseconds"),"). Resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43188"},"#43188"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45250"},"#45250")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Refactor and Improve streaming engines Kafka/RabbitMQ/NATS and add support for all formats, also refactor formats a bit: - Fix producing messages in row-based formats with suffixes/prefixes. Now every message is formatted completely with all delimiters and can be parsed back using input format. - Support block-based formats like Native, Parquet, ORC, etc. Every block is formatted as a separate message. The number of rows in one message depends on the block size, so you can control it via the setting ",(0,l.kt)("inlineCode",{parentName:"li"},"max_block_size"),". - Add new engine settings ",(0,l.kt)("inlineCode",{parentName:"li"},"kafka_max_rows_per_message/rabbitmq_max_rows_per_message/nats_max_rows_per_message"),". They control the number of rows formatted in one message in row-based formats. Default value: 1. - Fix high memory consumption in the NATS table engine. - Support arbitrary binary data in NATS producer (previously it worked only with strings contained \\0 at the end) - Add missing Kafka/RabbitMQ/NATS engine settings in the documentation. - Refactor producing and consuming in Kafka/RabbitMQ/NATS, separate it from WriteBuffers/ReadBuffers semantic. - Refactor output formats: remove callbacks on each row used in Kafka/RabbitMQ/NATS (now we don't use callbacks there), allow to use IRowOutputFormat directly, clarify row end and row between delimiters, make it possible to reset output format to start formatting again - Add proper implementation in formatRow function (bonus after formats refactoring). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/42777"},"#42777")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Support reading/writing ",(0,l.kt)("inlineCode",{parentName:"li"},"Nested")," tables as ",(0,l.kt)("inlineCode",{parentName:"li"},"List")," of ",(0,l.kt)("inlineCode",{parentName:"li"},"Struct")," in ",(0,l.kt)("inlineCode",{parentName:"li"},"CapnProto")," format. Read/write ",(0,l.kt)("inlineCode",{parentName:"li"},"Decimal32/64")," as ",(0,l.kt)("inlineCode",{parentName:"li"},"Int32/64"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43319"},"#43319"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43379"},"#43379")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Added a ",(0,l.kt)("inlineCode",{parentName:"li"},"message_format_string")," column to ",(0,l.kt)("inlineCode",{parentName:"li"},"system.text_log"),". The column contains a pattern that was used to format the message. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44543"},"#44543")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/tavplubix"},"Alexander Tokmakov"),"). This allows various analytics over the ClickHouse logs."),(0,l.kt)("li",{parentName:"ul"},"Try to autodetect headers with column names (and maybe types) for CSV/TSV/CustomSeparated input formats.\nAdd settings input_format_tsv/csv/custom_detect_header that enable this behaviour (enabled by default). Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44640"},"#44640"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44953"},"#44953")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),").")),(0,l.kt)("h4",{id:"experimental-feature"},"Experimental Feature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add an experimental inverted index as a new secondary index type for efficient text search. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/38667"},"#38667")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/larryluogit"},"larryluogit"),")."),(0,l.kt)("li",{parentName:"ul"},"Add experimental query result cache. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43797"},"#43797")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Added extendable and configurable scheduling subsystem for IO requests (not yet integrated with IO code itself). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/41840"},"#41840")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/serxa"},"Sergei Trifonov"),"). This feature does nothing at all, enjoy."),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"SYSTEM DROP DATABASE REPLICA")," that removes metadata of a dead replica of a ",(0,l.kt)("inlineCode",{parentName:"li"},"Replicated")," database. Resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/41794"},"#41794"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/42807"},"#42807")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/tavplubix"},"Alexander Tokmakov"),").")),(0,l.kt)("h4",{id:"performance-improvement-1"},"Performance Improvement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Do not load inactive parts at startup of ",(0,l.kt)("inlineCode",{parentName:"li"},"MergeTree")," tables. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/42181"},"#42181")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Improved latency of reading from storage ",(0,l.kt)("inlineCode",{parentName:"li"},"S3")," and table function ",(0,l.kt)("inlineCode",{parentName:"li"},"s3")," with large numbers of small files. Now settings ",(0,l.kt)("inlineCode",{parentName:"li"},"remote_filesystem_read_method")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"remote_filesystem_read_prefetch")," take effect while reading from storage ",(0,l.kt)("inlineCode",{parentName:"li"},"S3"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43726"},"#43726")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Optimization for reading struct fields in Parquet/ORC files. Only the required fields are loaded. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44484"},"#44484")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/lgbo-ustc"},"lgbo"),")."),(0,l.kt)("li",{parentName:"ul"},"Two-level aggregation algorithm was mistakenly disabled for queries over the HTTP interface. It was enabled back, and it leads to a major performance improvement. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45450"},"#45450")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Added mmap support for StorageFile, which should improve the performance of clickhouse-local. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43927"},"#43927")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/pufit"},"pufit"),")."),(0,l.kt)("li",{parentName:"ul"},"Added sharding support in HashedDictionary to allow parallel load (almost linear scaling based on number of shards). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/40003"},"#40003")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Speed up query parsing. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/42284"},"#42284")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Always replace OR chain ",(0,l.kt)("inlineCode",{parentName:"li"},"expr = x1 OR ... OR expr = xN")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"expr IN (x1, ..., xN)")," in the case where ",(0,l.kt)("inlineCode",{parentName:"li"},"expr")," is a ",(0,l.kt)("inlineCode",{parentName:"li"},"LowCardinality")," column. Setting ",(0,l.kt)("inlineCode",{parentName:"li"},"optimize_min_equality_disjunction_chain_length")," is ignored in this case. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/42889"},"#42889")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/guowangy"},"Guo Wangyang"),")."),(0,l.kt)("li",{parentName:"ul"},"Slightly improve performance by optimizing the code around ThreadStatus. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43586"},"#43586")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ZhiguoZh"},"Zhiguo Zhou"),")."),(0,l.kt)("li",{parentName:"ul"},"Optimize the column-wise ternary logic evaluation by achieving auto-vectorization. In the performance test of this ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ZhiguoZh/ClickHouse/blob/20221123-ternary-logic-opt-example/src/Functions/examples/associative_applier_perf.cpp"},"microbenchmark"),", we've observed a peak ",(0,l.kt)("strong",{parentName:"li"},"performance gain")," of ",(0,l.kt)("strong",{parentName:"li"},"21x")," on the ICX device (Intel Xeon Platinum 8380 CPU). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43669"},"#43669")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ZhiguoZh"},"Zhiguo Zhou"),")."),(0,l.kt)("li",{parentName:"ul"},"Avoid acquiring read locks in the ",(0,l.kt)("inlineCode",{parentName:"li"},"system.tables")," table if possible. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43840"},"#43840")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Optimize ThreadPool. The performance experiments of SSB (Star Schema Benchmark) on the ICX device (Intel Xeon Platinum 8380 CPU, 80 cores, 160 threads) shows that this change could effectively decrease the lock contention for ThreadPoolImpl::mutex by ",(0,l.kt)("strong",{parentName:"li"},"75%"),", increasing the CPU utilization and improving the overall performance by ",(0,l.kt)("strong",{parentName:"li"},"2.4%"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44308"},"#44308")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ZhiguoZh"},"Zhiguo Zhou"),")."),(0,l.kt)("li",{parentName:"ul"},"Now the optimisation for predicting the hash table size is applied only if the cached hash table size is sufficiently large (thresholds were determined empirically and hardcoded). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44455"},"#44455")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nickitat"},"Nikita Taranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Small performance improvement for asynchronous reading from remote filesystems. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44868"},"#44868")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Add fast path for: - ",(0,l.kt)("inlineCode",{parentName:"li"},"col like '%%'"),"; - ",(0,l.kt)("inlineCode",{parentName:"li"},"col like '%'"),"; - ",(0,l.kt)("inlineCode",{parentName:"li"},"col not like '%'"),"; - ",(0,l.kt)("inlineCode",{parentName:"li"},"col not like '%'"),"; - ",(0,l.kt)("inlineCode",{parentName:"li"},"match(col, '.*')"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45244"},"#45244")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/taiyang-li"},"\u674e\u626c"),")."),(0,l.kt)("li",{parentName:"ul"},"Slightly improve happy path optimisation in filtering (WHERE clause). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45289"},"#45289")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nickitat"},"Nikita Taranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Provide monotonicity info for ",(0,l.kt)("inlineCode",{parentName:"li"},"toUnixTimestamp64*")," to enable more algebraic optimizations for index analysis. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44116"},"#44116")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nickitat"},"Nikita Taranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow the configuration of temporary data for query processing (spilling to disk) to cooperate with the filesystem cache (taking up the space from the cache disk) ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43972"},"#43972")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),"). This mainly improves ",(0,l.kt)("a",{parentName:"li",href:"https://clickhouse.cloud/"},"ClickHouse Cloud"),", but can be used for self-managed setups as well, if you know what to do."),(0,l.kt)("li",{parentName:"ul"},"Make ",(0,l.kt)("inlineCode",{parentName:"li"},"system.replicas")," table do parallel fetches of replicas statuses. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43918"},"#43918"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43998"},"#43998")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/evillique"},"Nikolay Degterinsky"),")."),(0,l.kt)("li",{parentName:"ul"},"Optimize memory consumption during backup to S3: files to S3 now will be copied directly without using ",(0,l.kt)("inlineCode",{parentName:"li"},"WriteBufferFromS3")," (which could use a lot of memory). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45188"},"#45188")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add a cache for async block ids. This will reduce the number of requests of ZooKeeper when we enable async inserts deduplication. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45106"},"#45106")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),").")),(0,l.kt)("h4",{id:"improvement-1"},"Improvement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Use structure from insertion table in generateRandom without arguments. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45239"},"#45239")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow to implicitly convert floats stored in string fields of JSON to integers in ",(0,l.kt)("inlineCode",{parentName:"li"},"JSONExtract")," functions. E.g. ",(0,l.kt)("inlineCode",{parentName:"li"},"JSONExtract('{\"a\": \"1000.111\"}', 'a', 'UInt64')")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"1000"),", previously it returned 0. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45432"},"#45432")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Added fields ",(0,l.kt)("inlineCode",{parentName:"li"},"supports_parallel_parsing")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"supports_parallel_formatting")," to table ",(0,l.kt)("inlineCode",{parentName:"li"},"system.formats")," for better introspection. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45499"},"#45499")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve reading CSV field in CustomSeparated/Template format. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42352"},"#42352")," Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/39620"},"#39620"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43332"},"#43332")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Unify query elapsed time measurements. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43455"},"#43455")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve automatic usage of structure from insertion table in table functions file/hdfs/s3 when virtual columns are present in a select query, it fixes the possible error ",(0,l.kt)("inlineCode",{parentName:"li"},"Block structure mismatch")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"number of columns mismatch"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43695"},"#43695")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Add support for signed arguments in the function ",(0,l.kt)("inlineCode",{parentName:"li"},"range"),". Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43333"},"#43333"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43733"},"#43733")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/wineternity"},"sanyu"),")."),(0,l.kt)("li",{parentName:"ul"},"Remove redundant sorting, for example, sorting related ORDER BY clauses in subqueries. Implemented on top of query plan. It does similar optimization as ",(0,l.kt)("inlineCode",{parentName:"li"},"optimize_duplicate_order_by_and_distinct")," regarding ",(0,l.kt)("inlineCode",{parentName:"li"},"ORDER BY")," clauses, but more generic, since it's applied to any redundant sorting steps (not only caused by ORDER BY clause) and applied to subqueries of any depth. Related to ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42648"},"#42648"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43905"},"#43905")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/devcrafter"},"Igor Nikonov"),")."),(0,l.kt)("li",{parentName:"ul"},"Add the ability to disable deduplication of files for BACKUP (for backups without deduplication ATTACH can be used instead of full RESTORE). For example ",(0,l.kt)("inlineCode",{parentName:"li"},"BACKUP foo TO S3(...) SETTINGS deduplicate_files=0")," (default ",(0,l.kt)("inlineCode",{parentName:"li"},"deduplicate_files=1"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43947"},"#43947")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Refactor and improve schema inference for text formats. Add new setting ",(0,l.kt)("inlineCode",{parentName:"li"},"schema_inference_make_columns_nullable")," that controls making result types ",(0,l.kt)("inlineCode",{parentName:"li"},"Nullable")," (enabled by default);. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44019"},"#44019")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Better support for ",(0,l.kt)("inlineCode",{parentName:"li"},"PROXYv1")," protocol. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44135"},"#44135")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"Add information about the latest part check by cleanup threads into ",(0,l.kt)("inlineCode",{parentName:"li"},"system.parts")," table. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44244"},"#44244")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/novikd"},"Dmitry Novik"),")."),(0,l.kt)("li",{parentName:"ul"},"Disable table functions in readonly mode for inserts. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44290"},"#44290")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Add a setting ",(0,l.kt)("inlineCode",{parentName:"li"},"simultaneous_parts_removal_limit")," to allow limiting the number of parts being processed by one iteration of CleanupThread. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44461"},"#44461")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/novikd"},"Dmitry Novik"),")."),(0,l.kt)("li",{parentName:"ul"},"Do not initialize ReadBufferFromS3 when only virtual columns are needed in a query. This may be helpful to ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44246"},"#44246"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44493"},"#44493")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/xiedeyantu"},"chen"),")."),(0,l.kt)("li",{parentName:"ul"},"Prevent duplicate column names hints. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44130"},"#44130"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44519"},"#44519")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/jh0x"},"Joanna Hulboj"),")."),(0,l.kt)("li",{parentName:"ul"},"Allow macro substitution in endpoint of disks. Resolve ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/40951"},"#40951"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44533"},"#44533")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Improve schema inference when ",(0,l.kt)("inlineCode",{parentName:"li"},"input_format_json_read_object_as_string")," is enabled. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44546"},"#44546")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Add a user-level setting ",(0,l.kt)("inlineCode",{parentName:"li"},"database_replicated_allow_replicated_engine_arguments")," which allows banning the creation of ",(0,l.kt)("inlineCode",{parentName:"li"},"ReplicatedMergeTree")," tables with arguments in ",(0,l.kt)("inlineCode",{parentName:"li"},"DatabaseReplicated"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44566"},"#44566")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alesapin"},"alesapin"),")."),(0,l.kt)("li",{parentName:"ul"},"Prevent users from mistakenly specifying zero (invalid) value for ",(0,l.kt)("inlineCode",{parentName:"li"},"index_granularity"),". This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44536"},"#44536"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44578"},"#44578")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Added possibility to set path to service keytab file in ",(0,l.kt)("inlineCode",{parentName:"li"},"keytab")," parameter in ",(0,l.kt)("inlineCode",{parentName:"li"},"kerberos")," section of config.xml. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44594"},"#44594")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rvasin"},"Roman Vasin"),")."),(0,l.kt)("li",{parentName:"ul"},"Use already written part of the query for fuzzy search (pass to the ",(0,l.kt)("inlineCode",{parentName:"li"},"skim")," library, which is written in Rust and linked statically to ClickHouse). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44600"},"#44600")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Enable ",(0,l.kt)("inlineCode",{parentName:"li"},"input_format_json_read_objects_as_strings")," by default to be able to read nested JSON objects while JSON Object type is experimental. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44657"},"#44657")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Improvement for deduplication of async inserts: when users do duplicate async inserts, we should deduplicate inside the memory before we query Keeper. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44682"},"#44682")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),")."),(0,l.kt)("li",{parentName:"ul"},"Input/ouptut ",(0,l.kt)("inlineCode",{parentName:"li"},"Avro")," format will parse bool type as ClickHouse bool type. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44684"},"#44684")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Support Bool type in Arrow/Parquet/ORC. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43970"},"#43970"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44698"},"#44698")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Don't greedily parse beyond the quotes when reading UUIDs - it may lead to mistakenly successful parsing of incorrect data. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44686"},"#44686")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Infer UInt64 in case of Int64 overflow and fix some transforms in schema inference. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44696"},"#44696")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Previously dependency resolving inside ",(0,l.kt)("inlineCode",{parentName:"li"},"Replicated")," database was done in a hacky way, and now it's done right using an explicit graph. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44697"},"#44697")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nikitamikhaylov"},"Nikita Mikhaylov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"output_format_pretty_row_numbers")," does not preserve the counter across the blocks. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44815"},"#44815"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44832"},"#44832")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Don't report errors in ",(0,l.kt)("inlineCode",{parentName:"li"},"system.errors")," due to parts being merged concurrently with the background cleanup process. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44874"},"#44874")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Optimize and fix metrics for Distributed async INSERT. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44922"},"#44922")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Added settings to disallow concurrent backups and restores resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43891"},"#43891")," Implementation: ",(0,l.kt)("em",{parentName:"li"}," Added server-level settings to disallow concurrent backups and restores, which are read and set when BackupWorker is created in Context. ")," Settings are set to true by default. * Before starting backup or restores, added a check to see if any other backups/restores are running. For internal requests, it checks if it is from the self node using backup_uuid. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45072"},"#45072")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"<storage_policy>")," config parameter for system logs. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45320"},"#45320")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/stigsb"},"Stig Bakken"),").")),(0,l.kt)("h4",{id:"buildtestingpackaging-improvement-1"},"Build/Testing/Packaging Improvement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Statically link with the ",(0,l.kt)("inlineCode",{parentName:"li"},"skim")," library (it is written in Rust) for fuzzy search in clickhouse client/local history. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44239"},"#44239")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"We removed support for shared linking because of Rust. Actually, Rust is only an excuse for this removal, and we wanted to remove it nevertheless. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44828"},"#44828")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Remove the dependency on the ",(0,l.kt)("inlineCode",{parentName:"li"},"adduser")," tool from the packages, because we don't use it. This fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44934"},"#44934"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45011"},"#45011")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"SQLite")," library is updated to the latest. It is used for the SQLite database and table integration engines. Also, fixed a false-positive TSan report. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45027"},"#45027"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45031"},"#45031")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"CRC-32 changes to address the WeakHash collision issue in PowerPC. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45144"},"#45144")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/MeenaRenganathan22"},"MeenaRenganathan22"),")."),(0,l.kt)("li",{parentName:"ul"},"Update aws-c* submodules ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43020"},"#43020")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Automatically merge green backport PRs and green approved PRs ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/41110"},"#41110")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Felixoid"},"Mikhail f. Shiryaev"),")."),(0,l.kt)("li",{parentName:"ul"},"Introduce a ",(0,l.kt)("a",{parentName:"li",href:"https://aretestsgreenyet.com/"},"website")," for the status of ClickHouse CI. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/aretestsgreenyet"},"Source"),".")),(0,l.kt)("h4",{id:"bug-fix"},"Bug Fix"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Replace domain IP types (IPv4, IPv6) with native. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43221"},"#43221")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),"). It automatically fixes some missing implementations in the code."),(0,l.kt)("li",{parentName:"ul"},"Fix the backup process if mutations get killed during the backup process. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45351"},"#45351")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vitlibar"},"Vitaly Baranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix the ",(0,l.kt)("inlineCode",{parentName:"li"},"Invalid number of rows in Chunk")," exception message. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/41404"},"#41404"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/42126"},"#42126")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/davenger"},"Alexander Gololobov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible use of an uninitialized value after executing expressions after sorting. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43386"},"#43386")," ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43635"},"#43635")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Better handling of NULL in aggregate combinators, fix possible segfault/logical error while using an obscure optimization ",(0,l.kt)("inlineCode",{parentName:"li"},"optimize_rewrite_sum_if_to_count_if"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43758"},"#43758"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43813"},"#43813")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix CREATE USER/ROLE query settings constraints. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43993"},"#43993")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/evillique"},"Nikolay Degterinsky"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix incorrect behavior of ",(0,l.kt)("inlineCode",{parentName:"li"},"JOIN ON t1.x = t2.x AND 1 = 1"),", forbid such queries. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44016"},"#44016")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),")."),(0,l.kt)("li",{parentName:"ul"},"Fixed bug with non-parsable default value for ",(0,l.kt)("inlineCode",{parentName:"li"},"EPHEMERAL")," column in table metadata. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44026"},"#44026")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix parsing of bad version from compatibility setting. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44224"},"#44224")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Bring interval subtraction from datetime in line with addition. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44241"},"#44241")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ltrk2"},"ltrk2"),")."),(0,l.kt)("li",{parentName:"ul"},"Remove limits on the maximum size of the result for view. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44261"},"#44261")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/lzydmxy"},"lizhuoyu5"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible logical error in cache if ",(0,l.kt)("inlineCode",{parentName:"li"},"do_not_evict_index_and_mrk_files=1"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42142"},"#42142"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44268"},"#44268")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible too early cache write interruption in write-through cache (caching could be stopped due to false assumption when it shouldn't have). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44289"},"#44289")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible crash in the case function ",(0,l.kt)("inlineCode",{parentName:"li"},"IN")," with constant arguments was used as a constant argument together with ",(0,l.kt)("inlineCode",{parentName:"li"},"LowCardinality"),". Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44221"},"#44221"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44346"},"#44346")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix support for complex parameters (like arrays) of parametric aggregate functions. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/30975"},"#30975"),". The aggregate function ",(0,l.kt)("inlineCode",{parentName:"li"},"sumMapFiltered")," was unusable in distributed queries before this change. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44358"},"#44358")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix reading ObjectId in BSON schema inference. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44382"},"#44382")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix race which can lead to premature temp parts removal before merge finishes in ReplicatedMergeTree. This issue could lead to errors like ",(0,l.kt)("inlineCode",{parentName:"li"},"No such file or directory: xxx"),". Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43983"},"#43983"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44383"},"#44383")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alesapin"},"alesapin"),")."),(0,l.kt)("li",{parentName:"ul"},"Some invalid ",(0,l.kt)("inlineCode",{parentName:"li"},"SYSTEM ... ON CLUSTER")," queries worked in an unexpected way if a cluster name was not specified. It's fixed, now invalid queries throw ",(0,l.kt)("inlineCode",{parentName:"li"},"SYNTAX_ERROR")," as they should. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44264"},"#44264"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44387"},"#44387")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/tavplubix"},"Alexander Tokmakov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix reading Map type in ORC format. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44400"},"#44400")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix reading columns that are not presented in input data in Parquet/ORC formats. Previously it could lead to error ",(0,l.kt)("inlineCode",{parentName:"li"},"INCORRECT_NUMBER_OF_COLUMNS"),". Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44333"},"#44333"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44405"},"#44405")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Previously the ",(0,l.kt)("inlineCode",{parentName:"li"},"bar")," function used the same '\u258b' (U+258B \"Left five eighths block\") character to display both 5/8 and 6/8 bars. This change corrects this behavior by using '\u258a' (U+258A \"Left three quarters block\") for displaying 6/8 bar. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44410"},"#44410")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/davenger"},"Alexander Gololobov"),")."),(0,l.kt)("li",{parentName:"ul"},"Placing profile settings after profile settings constraints in the configuration file made constraints ineffective. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44411"},"#44411")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/thevar1able"},"Konstantin Bogdanov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"SYNTAX_ERROR")," while running ",(0,l.kt)("inlineCode",{parentName:"li"},"EXPLAIN AST INSERT")," queries with data. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44207"},"#44207"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44413"},"#44413")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/save-my-heart"},"save-my-heart"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix reading bool value with CRLF in CSV format. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44401"},"#44401"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44442"},"#44442")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Don't execute and/or/if/multiIf on a LowCardinality dictionary, so the result type cannot be LowCardinality. It could lead to the error ",(0,l.kt)("inlineCode",{parentName:"li"},"Illegal column ColumnLowCardinality")," in some cases. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43603"},"#43603"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44469"},"#44469")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix mutations with the setting ",(0,l.kt)("inlineCode",{parentName:"li"},"max_streams_for_merge_tree_reading"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44472"},"#44472")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix potential null pointer dereference with GROUPING SETS in ASTSelectQuery::formatImpl (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43049"},"#43049"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44479"},"#44479")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rschu1ze"},"Robert Schulze"),")."),(0,l.kt)("li",{parentName:"ul"},"Validate types in table function arguments, CAST function arguments, JSONAsObject schema inference according to settings. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44501"},"#44501")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix IN function with LowCardinality and const column, close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44503"},"#44503"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44506"},"#44506")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/canhld94"},"Duc Canh Le"),")."),(0,l.kt)("li",{parentName:"ul"},"Fixed a bug in the normalization of a ",(0,l.kt)("inlineCode",{parentName:"li"},"DEFAULT")," expression in ",(0,l.kt)("inlineCode",{parentName:"li"},"CREATE TABLE")," statement. The second argument of the function ",(0,l.kt)("inlineCode",{parentName:"li"},"in")," (or the right argument of operator ",(0,l.kt)("inlineCode",{parentName:"li"},"IN"),") might be replaced with the result of its evaluation during CREATE query execution. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44496"},"#44496"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44547"},"#44547")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/tavplubix"},"Alexander Tokmakov"),")."),(0,l.kt)("li",{parentName:"ul"},"Projections do not work in presence of WITH ROLLUP, WITH CUBE and WITH TOTALS. In previous versions, a query produced an exception instead of skipping the usage of projections. This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44614"},"#44614"),". This closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42772"},"#42772"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44615"},"#44615")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Async blocks were not cleaned because the function ",(0,l.kt)("inlineCode",{parentName:"li"},"get all blocks sorted by time")," didn't get async blocks. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44651"},"#44651")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"LOGICAL_ERROR")," ",(0,l.kt)("inlineCode",{parentName:"li"},"The top step of the right pipeline should be ExpressionStep")," for JOIN with subquery, UNION, and TOTALS. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43687"},"#43687"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44673"},"#44673")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Avoid ",(0,l.kt)("inlineCode",{parentName:"li"},"std::out_of_range")," exception in the Executable table engine. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44681"},"#44681")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Do not apply ",(0,l.kt)("inlineCode",{parentName:"li"},"optimize_syntax_fuse_functions")," to quantiles on AST, close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44712"},"#44712"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44713"},"#44713")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix bug with wrong type in Merge table and PREWHERE, close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43324"},"#43324"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44716"},"#44716")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix a possible crash during shutdown (while destroying TraceCollector). Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44757"},"#44757"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44758"},"#44758")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix a possible crash in distributed query processing. The crash could happen if a query with totals or extremes returned an empty result and there are mismatched types in the Distributed and the local tables. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44738"},"#44738"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44760"},"#44760")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix fsync for fetches (",(0,l.kt)("inlineCode",{parentName:"li"},"min_compressed_bytes_to_fsync_after_fetch"),")/small files (ttl.txt, columns.txt) in mutations (",(0,l.kt)("inlineCode",{parentName:"li"},"min_rows_to_fsync_after_merge"),"/",(0,l.kt)("inlineCode",{parentName:"li"},"min_compressed_bytes_to_fsync_after_merge"),"). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44781"},"#44781")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"A rare race condition was possible when querying the ",(0,l.kt)("inlineCode",{parentName:"li"},"system.parts")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"system.parts_columns")," tables in the presence of parts being moved between disks. Introduced in ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/41145"},"#41145"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44809"},"#44809")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix the error ",(0,l.kt)("inlineCode",{parentName:"li"},"Context has expired")," which could appear with enabled projections optimization. Can be reproduced for queries with specific functions, like ",(0,l.kt)("inlineCode",{parentName:"li"},"dictHas/dictGet")," which use context in runtime. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44844"},"#44844"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44850"},"#44850")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"A fix for ",(0,l.kt)("inlineCode",{parentName:"li"},"Cannot read all data")," error which could happen while reading ",(0,l.kt)("inlineCode",{parentName:"li"},"LowCardinality")," dictionary from remote fs. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44709"},"#44709"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44875"},"#44875")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Ignore cases when hardware monitor sensors cannot be read instead of showing a full exception message in logs. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44895"},"#44895")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"max_delay_to_insert")," value in case the calculated time to delay INSERT exceeds the setting value. Related to ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44902"},"#44902"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44916"},"#44916")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/devcrafter"},"Igor Nikonov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix error ",(0,l.kt)("inlineCode",{parentName:"li"},"Different order of columns in UNION subquery")," for queries with ",(0,l.kt)("inlineCode",{parentName:"li"},"UNION"),". Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44866"},"#44866"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44920"},"#44920")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Delay for INSERT can be calculated incorrectly, which can lead to always using ",(0,l.kt)("inlineCode",{parentName:"li"},"max_delay_to_insert")," setting as delay instead of a correct value. Using simple formula ",(0,l.kt)("inlineCode",{parentName:"li"},"max_delay_to_insert * (parts_over_threshold/max_allowed_parts_over_threshold)")," i.e. delay grows proportionally to parts over threshold. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44902"},"#44902"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44954"},"#44954")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/devcrafter"},"Igor Nikonov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix alter table TTL error when a wide part has the lightweight delete mask. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44959"},"#44959")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/liangliangpan"},"Mingliang Pan"),")."),(0,l.kt)("li",{parentName:"ul"},"Follow-up fix for Replace domain IP types (IPv4, IPv6) with native ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/43221"},"#43221"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45024"},"#45024")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"Follow-up fix for Replace domain IP types (IPv4, IPv6) with native ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/43221"},"https://github.com/ClickHouse/ClickHouse/pull/43221"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45043"},"#45043")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"A buffer overflow was possible in the parser. Found by fuzzer. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45047"},"#45047")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/alexey-milovidov"},"Alexey Milovidov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible cannot-read-all-data error in storage FileLog. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45051"},"#45051"),", ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/38257"},"#38257"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45057"},"#45057")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Memory efficient aggregation (setting ",(0,l.kt)("inlineCode",{parentName:"li"},"distributed_aggregation_memory_efficient"),") is disabled when grouping sets are present in the query. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45058"},"#45058")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nickitat"},"Nikita Taranov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"RANGE_HASHED")," dictionary to count range columns as part of the primary key during updates when ",(0,l.kt)("inlineCode",{parentName:"li"},"update_field")," is specified. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44588"},"#44588"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45061"},"#45061")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kitaisreal"},"Maksim Kita"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix error ",(0,l.kt)("inlineCode",{parentName:"li"},"Cannot capture column")," for ",(0,l.kt)("inlineCode",{parentName:"li"},"LowCardinality")," captured argument of nested lambda. Fixes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45028"},"#45028"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45065"},"#45065")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix the wrong query result of ",(0,l.kt)("inlineCode",{parentName:"li"},"additional_table_filters")," (additional filter was not applied) in case the minmax/count projection is used. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45133"},"#45133")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fixed bug in ",(0,l.kt)("inlineCode",{parentName:"li"},"histogram")," function accepting negative values. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45147"},"#45147")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rgzntrade"},"simpleton"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix wrong column nullability in StoreageJoin, close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44940"},"#44940"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45184"},"#45184")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"background_fetches_pool_size")," settings reload (increase at runtime). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45189"},"#45189")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Algunenano"},"Ra\xfal Mar\xedn"),")."),(0,l.kt)("li",{parentName:"ul"},"Correctly process ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT")," queries on KV engines (e.g. KeeperMap, EmbeddedRocksDB) using ",(0,l.kt)("inlineCode",{parentName:"li"},"IN")," on the key with subquery producing different type. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45215"},"#45215")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix logical error in SEMI JOIN & join_use_nulls in some cases, close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45163"},"#45163"),", close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45209"},"#45209"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45230"},"#45230")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/vdimir"},"Vladimir C"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix heap-use-after-free in reading from s3. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45253"},"#45253")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix bug when the Avro Union type is ","['null', Nested type]",", closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45275"},"#45275"),". Fix bug that incorrectly infers ",(0,l.kt)("inlineCode",{parentName:"li"},"bytes")," type to ",(0,l.kt)("inlineCode",{parentName:"li"},"Float"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45276"},"#45276")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ucasfl"},"flynn"),")."),(0,l.kt)("li",{parentName:"ul"},"Throw a correct exception when explicit PREWHERE cannot be used with a table using the storage engine ",(0,l.kt)("inlineCode",{parentName:"li"},"Merge"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45319"},"#45319")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/antonio2368"},"Antonio Andelic"),")."),(0,l.kt)("li",{parentName:"ul"},"Under WSL1 Ubuntu self-extracting ClickHouse fails to decompress due to inconsistency - /proc/self/maps reporting 32bit file's inode, while stat reporting 64bit inode. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45339"},"#45339")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix race in Distributed table startup (that could lead to processing file of async INSERT multiple times). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45360"},"#45360")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix a possible crash while reading from storage ",(0,l.kt)("inlineCode",{parentName:"li"},"S3")," and table function ",(0,l.kt)("inlineCode",{parentName:"li"},"s3")," in the case when ",(0,l.kt)("inlineCode",{parentName:"li"},"ListObject")," request has failed. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45371"},"#45371")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix ",(0,l.kt)("inlineCode",{parentName:"li"},"SELECT ... FROM system.dictionaries")," exception when there is a dictionary with a bad structure (e.g. incorrect type in XML config). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45399"},"#45399")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/aalexfvk"},"Aleksei Filatov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix s3Cluster schema inference when structure from insertion table is used in ",(0,l.kt)("inlineCode",{parentName:"li"},"INSERT INTO ... SELECT * FROM s3Cluster")," queries. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45422"},"#45422")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix bug in JSON/BSONEachRow parsing with HTTP that could lead to using default values for some columns instead of values from data. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45424"},"#45424")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/Avogar"},"Kruglov Pavel"),")."),(0,l.kt)("li",{parentName:"ul"},"Fixed bug (Code: 632. DB::Exception: Unexpected data ... after parsed IPv6 value ...) with typed parsing of IP types from text source. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45425"},"#45425")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/yakov-olkhovskiy"},"Yakov Olkhovskiy"),")."),(0,l.kt)("li",{parentName:"ul"},"close ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45297"},"#45297")," Add check for empty regular expressions. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45428"},"#45428")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hanfei1991"},"Han Fei"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible (likely distributed) query hung. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45448"},"#45448")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible deadlock with ",(0,l.kt)("inlineCode",{parentName:"li"},"allow_asynchronous_read_from_io_pool_for_merge_tree")," enabled in case of exception from ",(0,l.kt)("inlineCode",{parentName:"li"},"ThreadPool::schedule"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45481"},"#45481")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/KochetovNicolai"},"Nikolai Kochetov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix possible in-use table after DETACH. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45493"},"#45493")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix rare abort in the case when a query is canceled and parallel parsing was used during its execution. ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45498"},"#45498")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/CurtizJ"},"Anton Popov"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix a race between Distributed table creation and INSERT into it (could lead to CANNOT_LINK during INSERT into the table). ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45502"},"#45502")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/azat"},"Azat Khuzhin"),")."),(0,l.kt)("li",{parentName:"ul"},"Add proper default (SLRU) to cache policy getter. Closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/45514"},"#45514"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/45524"},"#45524")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kssenii"},"Kseniia Sumarokova"),")."),(0,l.kt)("li",{parentName:"ul"},"Disallow array join in mutations closes ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/42637"},"#42637")," ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44447"},"#44447")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),")."),(0,l.kt)("li",{parentName:"ul"},"Fix for qualified asterisks with alias table name and column transformer. Resolves ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/issues/44736"},"#44736"),". ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClickHouse/ClickHouse/pull/44755"},"#44755")," (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SmitaRKulkarni"},"SmitaRKulkarni"),").")),(0,l.kt)("h2",{id:"changelog-for-2022"},(0,l.kt)("a",{parentName:"h2",href:"https://clickhouse.com/docs/en/whats-new/changelog/2022"},"Changelog for 2022")))}m.isMDXComponent=!0}}]);